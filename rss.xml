<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>plusNaN</title>
  
  
  <link href="https://plusnan.me/rss.xml" rel="self"/>
  
  <link href="https://plusnan.me/"/>
  <updated>2023-11-02T00:42:55.436Z</updated>
  <id>https://plusnan.me/</id>
  
  <author>
    <name>plusNaN</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>见人说人话，见鬼说鬼话</title>
    <link href="https://plusnan.me/2022/07/20/expression/"/>
    <id>https://plusnan.me/2022/07/20/expression/</id>
    <published>2022-07-19T16:00:00.000Z</published>
    <updated>2023-11-02T00:42:55.436Z</updated>
    
    <content type="html"><![CDATA[<p>在微博上看到了这样一个故事：</p><blockquote><p>跟讲科学的人谈科学，和信玄学的人谈玄学才是万全之策。<br>妇产科接一产妇，要求明天剖宫产，还详细到几点几分，但是她现在还没到预产期，一切都是正常指标，没有手术指征，医生不能给她提前剖，她和家人非要，说家里人找大师给算了，孩子明天那个时间出生命格好。<br>医生解释了半天，不听，非要剖，不然就去投诉医生态度不好……<br>主任听说了，来解围说：人的命格天注定，瓜熟蒂落，瓜熟蒂落，你这瓜不熟，强行摘下，也就是说想逆天改命，要不得，没那个道行，强行如此，会被反噬，到时候，你们一家都不够赔。<br>产妇和家人一商量，觉得主任说的对，走了……<br>医生说，那一刻，觉得主任万丈光芒。</p></blockquote><p>技术人员在与他人沟通时，经常会出现陷入自己逻辑的现象，导致沟通困难。本文借助这个故事，讲一讲与人沟通的一些技巧。</p><span id="more"></span><h1 id="了解对方的知识体系与话语体系"><a href="#了解对方的知识体系与话语体系" class="headerlink" title="了解对方的知识体系与话语体系"></a>了解对方的知识体系与话语体系</h1><p>技术人员之间进行沟通，由于双方对技术都有所了解，因此使用行话可以很容易沟通，但是一般人并不了解这些技术，使用行话自然会让他们困惑。</p><p>有一些人受自身所受教育限制，或者出于维护自己面子的需要，他会有一套自己的思想理论，而且会坚持这些理论。如果你的理论与他的理论发生冲突，自然容易发生争执。</p><p>因此，面对知识体系不同的人，不要急着用自己的技术理论进行沟通，更不要急着否定对方，而是先试探对方对技术的理解情况，了解他的理论和语言。</p><p>以前文故事为例，产妇家提到了“大师”，说明他们家不懂任何现代医学，而且具有封建迷信思想，因此不能用现代医学理论和术语来沟通，而是要用一些传统医学或封建迷信的语言来沟通。</p><h1 id="抓住主要矛盾，必要时切换思路"><a href="#抓住主要矛盾，必要时切换思路" class="headerlink" title="抓住主要矛盾，必要时切换思路"></a>抓住主要矛盾，必要时切换思路</h1><p>沟通的目的是解决问题，但解决问题之前需要先了解问题是什么，哪些是主要矛盾，哪些不是主要矛盾。</p><p>以前文故事为例，产妇家的诉求是早产，而做技术的人就很容易讲自己的话，然后对自己的观点进行进一步解释，例如早产需要哪些条件、对方不符合哪些条件、后果如何之类，而对方会因为听不懂，无法理解，导致沟通陷入僵局。</p><p>当沟通陷入僵局时，就不要再沿着之前的思路进行思考，而是要直接跳出这种逻辑，重新换一个思路：产妇为什么会要求早产呢？其实是因为他们听了“大师”的话，因此主要矛盾实际上不是如何否定早产，而是如何证明“大师”是错的。</p><h1 id="翻译成对方能理解的话"><a href="#翻译成对方能理解的话" class="headerlink" title="翻译成对方能理解的话"></a>翻译成对方能理解的话</h1><p>搞清楚问题之后，不要直接去解答问题，而是要把你的观点整理一下，翻译成他们能够理解的词语。特别是要否定对方时，要先顺着对方的思维说话，当对方接受以后再引出自己的观点。</p><p>主任来了，他的经验丰富，知道对方只能理解“玄学”理论，因此用玄学理论与他们沟通。主任先提出“人的命格天注定”的论断，而且不说“没到预产期”，而是将其换成“你这瓜不熟，强行摘下，也就是说想逆天改命”，让对方很容易理解。在此基础上，主任稍微恐吓一下，“要不得，没那个道行，强行如此，会被反噬”，因为大师再厉害，也不可能超越天命，所以很容易就说服了对方。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在微博上看到了这样一个故事：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;跟讲科学的人谈科学，和信玄学的人谈玄学才是万全之策。&lt;br&gt;妇产科接一产妇，要求明天剖宫产，还详细到几点几分，但是她现在还没到预产期，一切都是正常指标，没有手术指征，医生不能给她提前剖，她和家人非要，说家里人找大师给算了，孩子明天那个时间出生命格好。&lt;br&gt;医生解释了半天，不听，非要剖，不然就去投诉医生态度不好……&lt;br&gt;主任听说了，来解围说：人的命格天注定，瓜熟蒂落，瓜熟蒂落，你这瓜不熟，强行摘下，也就是说想逆天改命，要不得，没那个道行，强行如此，会被反噬，到时候，你们一家都不够赔。&lt;br&gt;产妇和家人一商量，觉得主任说的对，走了……&lt;br&gt;医生说，那一刻，觉得主任万丈光芒。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;技术人员在与他人沟通时，经常会出现陷入自己逻辑的现象，导致沟通困难。本文借助这个故事，讲一讲与人沟通的一些技巧。&lt;/p&gt;</summary>
    
    
    
    <category term="一点人生的经验" scheme="https://plusnan.me/categories/%E4%B8%80%E7%82%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="沟通" scheme="https://plusnan.me/tags/%E6%B2%9F%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>基于Spring Boot和若依框架实现可灵活配置的动态接口</title>
    <link href="https://plusnan.me/2022/06/08/dynamic-controller/"/>
    <id>https://plusnan.me/2022/06/08/dynamic-controller/</id>
    <published>2022-06-07T16:00:00.000Z</published>
    <updated>2023-11-04T09:33:13.488Z</updated>
    
    <content type="html"><![CDATA[<p>很多业务都是以增删改查为基础，利用若依框架，已经能够实现代码的快速生成，但需要在后端部署一些VO、Controller和Service，如需维护，依然要修改多个文件，而且要升级和重启后端系统。</p><p>如果业务只是简单的SQL或脚本，我们能否进一步简化，实现接口动态维护，不停机就能快速配置好系统接口呢？</p><span id="more"></span><p>下面以若依的<span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20veV9wcm9qZWN0L1J1b1lpLVZ1ZQ==">前后分离版本<i class="fa fa-external-link-alt"></i></span>为例来实现这个功能。</p><h1 id="功能设计"><a href="#功能设计" class="headerlink" title="功能设计"></a>功能设计</h1><p>系统主要实现以下功能：</p><ol><li>接口管理：向开发者提供接口信息管理功能，能够创建和维护接口，动态管理接口名称、接口URL、接口类型、输入参数、代码等信息。当接口数量较多时，可通过整理分组来保持可维护性。</li><li>接口调用：在接口管理功能设置好接口后，开发者无需重启后端应用，即可调用相应接口。调用时，系统后台对调用者身份和权限进行校验，校验通过后执行相应代码，返回运行结果。</li></ol><p>接口支持以下技术特性：</p><ol><li>快速配置，保存即更新，无需停机维护。</li><li>可根据需要设置或更改接口URL。</li><li>可设置或限制接口的访问方式，如GET、POST。</li><li>支持提供输入参数，并支持通过URL、JSON、form等多种方式传入参数。</li><li>支持SQL和JavaScript（要求Java版本小于15）两种类型的代码。SQL支持MyBatis的动态标签，JavaScript可获取Spring对象。</li><li>支持授权和权限验证。</li><li>支持切换数据源。</li></ol><h1 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h1><p>设计两张表，一个为接口内容（interface_item），存储所有接口的代码；另一个为接口分组（interface_group），便于归类管理所有接口。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> interface_item<span class="token punctuation">(</span>    id          <span class="token keyword">BIGINT</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'主键'</span>        <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name        <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'名称'</span><span class="token punctuation">,</span>    code        <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'接口名'</span><span class="token punctuation">,</span>    <span class="token keyword">type</span>        <span class="token keyword">TINYINT</span>       <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'类型，1-sql，2-js'</span><span class="token punctuation">,</span>    description <span class="token keyword">TEXT</span>          <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'描述'</span><span class="token punctuation">,</span>    method      <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'GET'</span> <span class="token keyword">COMMENT</span> <span class="token string">'请求方式,GET/POST'</span><span class="token punctuation">,</span>    group_id    <span class="token keyword">BIGINT</span>        <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'分组'</span><span class="token punctuation">,</span>    group_code  <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>  <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'分组'</span><span class="token punctuation">,</span>    datasource  <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>  <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'数据源'</span><span class="token punctuation">,</span>    is_enable   <span class="token keyword">TINYINT</span>       <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span> <span class="token keyword">COMMENT</span> <span class="token string">'是否启用'</span><span class="token punctuation">,</span>    is_log      <span class="token keyword">TINYINT</span>       <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token keyword">COMMENT</span> <span class="token string">'是否记录调用日志'</span><span class="token punctuation">,</span>    permission  <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>  <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'权限标识,*表示免登录'</span><span class="token punctuation">,</span>    param       <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'输入参数'</span><span class="token punctuation">,</span>    program        <span class="token keyword">TEXT</span>       <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'代码内容'</span><span class="token punctuation">,</span>    create_by   <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>  <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建人'</span><span class="token punctuation">,</span>    create_time <span class="token keyword">DATETIME</span>      <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建时间'</span><span class="token punctuation">,</span>    update_by   <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>  <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'更新人'</span><span class="token punctuation">,</span>    update_time <span class="token keyword">DATETIME</span>      <span class="token boolean">NULL</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">'更新时间'</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'接口项目'</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> interface_group<span class="token punctuation">(</span>    id          <span class="token keyword">BIGINT</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'主键'</span>        <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name        <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>                       <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'名称'</span><span class="token punctuation">,</span>    code        <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>                       <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'url'</span><span class="token punctuation">,</span>    icon        <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>                       <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'图标'</span><span class="token punctuation">,</span>    description <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>                       <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'描述'</span><span class="token punctuation">,</span>    parent_id   <span class="token keyword">BIGINT</span>                             <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'上级节点id'</span><span class="token punctuation">,</span>    create_by   <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>                       <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建人'</span><span class="token punctuation">,</span>    create_time <span class="token keyword">DATETIME</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建时间'</span><span class="token punctuation">,</span>    update_by   <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>                       <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'更新人'</span><span class="token punctuation">,</span>    update_time <span class="token keyword">DATETIME</span>                           <span class="token boolean">NULL</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">'更新时间'</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'接口分组'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设计完成后，可使用平台的“代码生成”功能生成相应的VO、Vue等文件，并将菜单权限导入到数据库中。</p><h1 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h1><p>下面介绍核心部分代码，完整代码参见<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2luZm5hbi9keW5hbWljLWNvbnRyb2xsZXItZGVtbw==">GitHub<i class="fa fa-external-link-alt"></i></span>。</p><h2 id="解析动态SQL"><a href="#解析动态SQL" class="headerlink" title="解析动态SQL"></a>解析动态SQL</h2><p>利用MyBatis的相应方法，可解析MyBatis标签：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 将SQL中的绑定参数传入到该paramMap中</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> paramMap<span class="token punctuation">;</span><span class="token comment">// 解析SQL</span><span class="token class-name">SqlSource</span> sqlSource <span class="token operator">=</span> sqlSessionTemplate<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLanguageDriver</span><span class="token punctuation">(</span><span class="token class-name">XMLLanguageDriver</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createSqlSource</span><span class="token punctuation">(</span>sqlSessionTemplate<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rawSql<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">BoundSql</span> boundSql <span class="token operator">=</span> sqlSource<span class="token punctuation">.</span><span class="token function">getBoundSql</span><span class="token punctuation">(</span>paramMap<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> parsedSql <span class="token operator">=</span> boundSql<span class="token punctuation">.</span><span class="token function">getSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// SQL语句解析完成</span>ptst <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>parsedSql<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 传入参数</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ParameterMapping</span><span class="token punctuation">></span></span> parameterMappings <span class="token operator">=</span> boundSql<span class="token punctuation">.</span><span class="token function">getParameterMappings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>parameterMappings <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> parameterMappings<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ParameterMapping</span> parameterMapping <span class="token operator">=</span> parameterMappings<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>parameterMapping<span class="token punctuation">.</span><span class="token function">getMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">ParameterMode</span><span class="token punctuation">.</span>OUT<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> propertyName <span class="token operator">=</span> parameterMapping<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Object</span> value <span class="token operator">=</span> paramMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>propertyName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">TypeHandler</span> typeHandler <span class="token operator">=</span> parameterMapping<span class="token punctuation">.</span><span class="token function">getTypeHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">JdbcType</span> jdbcType <span class="token operator">=</span> parameterMapping<span class="token punctuation">.</span><span class="token function">getJdbcType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> jdbcType <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                jdbcType <span class="token operator">=</span> sqlSessionTemplate<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getJdbcTypeForNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            typeHandler<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span>ptst<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> value<span class="token punctuation">,</span> jdbcType<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 准备完成，执行SQL</span><span class="token class-name">ResultSet</span> result <span class="token operator">=</span> ptst<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// ...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取SQL执行结果中的字段名"><a href="#获取SQL执行结果中的字段名" class="headerlink" title="获取SQL执行结果中的字段名"></a>获取SQL执行结果中的字段名</h2><p>ResultSet中有一个getMetaData函数，通过该函数可获取到查询结果中的各字段名：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ResultSet</span> result <span class="token operator">=</span> ptst<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">ResultSetMetaData</span> md <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getMetaData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> columnCount <span class="token operator">=</span> md<span class="token punctuation">.</span><span class="token function">getColumnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> rowData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> columnCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 获取字段名称和结果</span>        rowData<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>md<span class="token punctuation">.</span><span class="token function">getColumnLabel</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>rowData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="动态运行JavaScript代码"><a href="#动态运行JavaScript代码" class="headerlink" title="动态运行JavaScript代码"></a>动态运行JavaScript代码</h2><p>Java自带一个名为Nashorn的JavaScript引擎（备注：从Java 15开始已经移除），可通过以下代码运行：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> code<span class="token punctuation">;</span>                        <span class="token comment">// 代码</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> paramMap<span class="token punctuation">;</span>       <span class="token comment">// 用户传入的参数</span><span class="token comment">// ...</span><span class="token class-name">ScriptEngine</span> engine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScriptEngineManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEngineByName</span><span class="token punctuation">(</span><span class="token string">"JavaScript"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 将一些Java对象传入到JS引擎中，以便在JS代码内直接调用</span>engine<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">,</span> xxxObj<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// ...</span><span class="token comment">// 将代码封装至 Main 函数中，在JS代码中可通过 paramMap 获取参数。</span>code <span class="token operator">=</span> <span class="token string">"load(\"nashorn:mozilla_compat.js\"); function Main(paramMap) &#123;\n"</span> <span class="token operator">+</span> code <span class="token operator">+</span> <span class="token string">"\n&#125;"</span><span class="token punctuation">;</span><span class="token comment">// 编译并运行脚本</span><span class="token class-name">CompiledScript</span> script <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Compilable</span><span class="token punctuation">)</span> engine<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>script<span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Invocable</span> inv2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Invocable</span><span class="token punctuation">)</span> engine<span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 调用函数并传入参数</span>    <span class="token keyword">return</span> inv2<span class="token punctuation">.</span><span class="token function">invokeFunction</span><span class="token punctuation">(</span><span class="token string">"Main"</span><span class="token punctuation">,</span> paramMap<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchMethodException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ScriptException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="身份和权限校验"><a href="#身份和权限校验" class="headerlink" title="身份和权限校验"></a>身份和权限校验</h2><p>若依已经将身份和权限校验封装为两个Service，引用即可：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 定义部分</span><span class="token annotation punctuation">@Resource</span><span class="token keyword">private</span> <span class="token class-name">TokenService</span> tokenService<span class="token punctuation">;</span><span class="token annotation punctuation">@Resource</span><span class="token keyword">private</span> <span class="token class-name">PermissionService</span> ss<span class="token punctuation">;</span><span class="token comment">// ...</span><span class="token comment">// 校验是否登录</span><span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> <span class="token class-name">ServletUtils</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">LoginUser</span> user <span class="token operator">=</span> tokenService<span class="token punctuation">.</span><span class="token function">getLoginUser</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 设置为当前用户</span>    tokenService<span class="token punctuation">.</span><span class="token function">setLoginUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token string">"认证失败"</span><span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span>UNAUTHORIZED<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 接口限制权限</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>permission<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 进行校验</span>    <span class="token keyword">boolean</span> hasPermission <span class="token operator">=</span> ss<span class="token punctuation">.</span><span class="token function">hasPermi</span><span class="token punctuation">(</span>permission<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasPermission<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token string">"无访问权限"</span><span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span>FORBIDDEN<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 未抛出异常则校验成功</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="支持多种请求方式"><a href="#支持多种请求方式" class="headerlink" title="支持多种请求方式"></a>支持多种请求方式</h2><p>很简单，在Controller中把各种请求方式都写上即可。如果限定了请求方式，可以在调用invoke之后再进行校验：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/&#123;code&#125;"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> <span class="token class-name">AjaxResult</span> <span class="token function">processGet</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> code<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> paramMap<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// GET方式</span>    <span class="token keyword">return</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> code<span class="token punctuation">,</span> paramMap<span class="token punctuation">,</span> <span class="token string">"GET"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/&#123;code&#125;"</span><span class="token punctuation">,</span>        consumes <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_VALUE<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        produces <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_VALUE<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> <span class="token class-name">AjaxResult</span> <span class="token function">processPost</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> code<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">JSONObject</span> body<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// POST json</span>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> key <span class="token operator">:</span> body<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> body<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> code<span class="token punctuation">,</span> params<span class="token punctuation">,</span> <span class="token string">"POST+json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/&#123;code&#125;"</span><span class="token punctuation">,</span>        consumes <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_FORM_URLENCODED_VALUE<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        produces <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_VALUE<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> <span class="token class-name">AjaxResult</span> <span class="token function">processPost</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> code<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> params<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// POST x-www-form-urlencoded</span>    <span class="token keyword">return</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> code<span class="token punctuation">,</span> params<span class="token punctuation">,</span> <span class="token string">"POST+form"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// ...</span><span class="token keyword">private</span> <span class="token class-name">AjaxResult</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">String</span> group<span class="token punctuation">,</span> <span class="token class-name">String</span> subgroup<span class="token punctuation">,</span> <span class="token class-name">String</span> code<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> params<span class="token punctuation">,</span> <span class="token class-name">String</span> method<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Object</span> result <span class="token operator">=</span> interfaceService<span class="token punctuation">.</span><span class="token function">invokeInterface</span><span class="token punctuation">(</span>group<span class="token punctuation">,</span> subgroup<span class="token punctuation">,</span> code<span class="token punctuation">,</span> params<span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="切换数据源"><a href="#切换数据源" class="headerlink" title="切换数据源"></a>切换数据源</h2><p>一句话：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 数据源名称参见 application.yaml 配置</span><span class="token class-name">DynamicDataSourceContextHolder</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"数据源名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="JavaScript工具类"><a href="#JavaScript工具类" class="headerlink" title="JavaScript工具类"></a>JavaScript工具类</h2><p>为使JavaScript代码能够操作数据库或其他目标，需将常用函数封装到一个工具类中，并暴露给JavaScript运行环境。具体代码参见<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2luZm5hbi9keW5hbWljLWNvbnRyb2xsZXItZGVtby9ibG9iL21hc3Rlci9ydW95aS1zeXN0ZW0vc3JjL21haW4vamF2YS9jb20vcnVveWkvc3lzdGVtL3NlcnZpY2UvaW1wbC9JbnRlcmZhY2VVdGlsSW1wbC5qYXZh">InterfaceUtilImpl<i class="fa fa-external-link-alt"></i></span>。</p><h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><h2 id="接口设置"><a href="#接口设置" class="headerlink" title="接口设置"></a>接口设置</h2><p>接口设置界面如下：</p><p><img src="/img/2022-06-08-dynamic-controller/1.png" alt="接口列表"></p><p>当接口数量较多时，为便于维护，可先设置分组，将不同业务的接口组织到不同分组中。</p><p>选择分组，点击添加按钮，录入接口信息：</p><p><img src="/img/2022-06-08-dynamic-controller/2.png" alt="接口信息"></p><p>主要参数说明：</p><ul><li>接口分组、接口代号：决定接口的URL</li><li>请求方式：限制GET、POST（JSON格式）、POST（x-www-form-urlencoded），或不限制请求方式</li><li>输入参数：如接口需要输入参数，可在此处设置。例如输入参数为<code>name,id</code>，那么前端调用时需要传入name和id两个参数，在SQL中则需要通过<code>#&#123;name&#125;</code>和<code>#&#123;id&#125;</code>进行引用。</li><li>权限标识：校验接口调用者是否具有权限，即“菜单管理”中的权限标志。<code>*</code>表示无需token，留空表示需要验证Token但不限制权限。</li><li>数据源：即<code>application.yaml</code>中配置的数据源。</li></ul><p>系统提供测试功能，方便开发人员调试接口。接口的返回值为JSON，以便前端使用，具体格式类似：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"操作成功"</span><span class="token punctuation">,</span>    <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"test"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SQL配置"><a href="#SQL配置" class="headerlink" title="SQL配置"></a>SQL配置</h2><p>像MyBatis一样配置即可。纯SQL可直接输入，带逻辑的SQL则需要用<code>&lt;script&gt;</code>包围，例如：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">table</span> <span class="token keyword">WHERE</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">'name != ""'</span><span class="token operator">></span><span class="token operator">AND</span> name <span class="token operator">LIKE</span> CONCAT<span class="token punctuation">(</span><span class="token comment">#&#123;name&#125;, '%')</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="JavaScript配置"><a href="#JavaScript配置" class="headerlink" title="JavaScript配置"></a>JavaScript配置</h2><p>Nashorn引擎支持ES5的大部分特性，可通过ES5语法编程。其代码差异之处，以及Java代码调用方法，可参见<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vZW4vamF2YS9qYXZhc2UvMTQvc2NyaXB0aW5nL2luZGV4Lmh0bWw=">Oracle手册<i class="fa fa-external-link-alt"></i></span>。</p><p>Java的包和类可用JS代码直接导入并调用，例如：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 导入包</span><span class="token function">importPackage</span><span class="token punctuation">(</span>com<span class="token punctuation">.</span>xxx<span class="token punctuation">.</span>service<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 导入类</span><span class="token function">importClass</span><span class="token punctuation">(</span>com<span class="token punctuation">.</span>xxx<span class="token punctuation">.</span>service<span class="token punctuation">.</span>TabService<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> serv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TabService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 导入后，可以像Java一样new实例，或者在JS环境中调用Java方法与函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在本系统中，可通过<code>paramMap</code>获取用户的请求参数，通过<code>AppUtil</code>来调用Java函数，例如：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 获取请求参数</span><span class="token keyword">var</span> name <span class="token operator">=</span> paramMap<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">'未命名'</span><span class="token punctuation">;</span><span class="token comment">// 执行SQL</span><span class="token keyword">var</span> list <span class="token operator">=</span> AppUtil<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token string">'select * from sys_user'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>AppUtil<span class="token punctuation">.</span><span class="token function">executeSql</span><span class="token punctuation">(</span><span class="token string">'update tab set name = ? where id = ?'</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获取Spring Bean并调用</span><span class="token keyword">var</span> tabService <span class="token operator">=</span> AppUtil<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">'tabService'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> list <span class="token operator">=</span> tabService<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="进一步思考"><a href="#进一步思考" class="headerlink" title="进一步思考"></a>进一步思考</h1><p>由于接口配置功能可以输入任意代码，因此当然不能向一般用户开放，否则系统会被恶意代码损毁。</p><p>输入参数往往是由用户提供的，因此应当假定每个输入参数都带有恶意，例如SQL注入、超出长度范围、超出权限范围（例如将URL中的<code>?id=3</code>改为<code>?id=4</code>）等等，。SQL或JavaScript代码也应注意限制执行时间和查询结果数量，以免数据溢出或造成阻塞。</p><p>动态的接口维护功能主要目的是便利开发人员，降低维护成本，但是本代码缺少对高并发的优化，因此不建议在高并发情况下使用。</p><h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><ol><li>查阅接口调用日志</li><li>Swagger接口文档</li><li>Kotlin语言支持</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;很多业务都是以增删改查为基础，利用若依框架，已经能够实现代码的快速生成，但需要在后端部署一些VO、Controller和Service，如需维护，依然要修改多个文件，而且要升级和重启后端系统。&lt;/p&gt;
&lt;p&gt;如果业务只是简单的SQL或脚本，我们能否进一步简化，实现接口动态维护，不停机就能快速配置好系统接口呢？&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="数据库" scheme="https://plusnan.me/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="Spring Boot" scheme="https://plusnan.me/tags/Spring-Boot/"/>
    
    <category term="接口" scheme="https://plusnan.me/tags/%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>使用nginx配置天地图缓存</title>
    <link href="https://plusnan.me/2022/05/06/tianditu-cache/"/>
    <id>https://plusnan.me/2022/05/06/tianditu-cache/</id>
    <published>2022-05-05T16:00:00.000Z</published>
    <updated>2023-07-24T06:30:49.648Z</updated>
    
    <content type="html"><![CDATA[<p>由于天地图有时访问速度缓慢，加上接口访问数量限制，可借助nginx对天地图进行缓存，提高访问速度。</p><span id="more"></span><h1 id="配置文件内容"><a href="#配置文件内容" class="headerlink" title="配置文件内容"></a>配置文件内容</h1><pre class="line-numbers language-conf" data-language="conf"><code class="language-conf"># ...http &#123;    # ...    resolver 114.114.114.114 ipv6&#x3D;off;    # 此处换成实际的缓存路径    proxy_temp_path &#x2F;var&#x2F;cache&#x2F;tianditu_temp;    proxy_cache_path &#x2F;var&#x2F;cache&#x2F;tianditu levels&#x3D;1:2 keys_zone&#x3D;cache_one:200m inactive&#x3D;1d max_size&#x3D;30g;    upstream tianditu_server &#123;        server t0.tianditu.gov.cn:443 weight&#x3D;1 max_fails&#x3D;2 fail_timeout&#x3D;30s;        server t1.tianditu.gov.cn:443 weight&#x3D;1 max_fails&#x3D;2 fail_timeout&#x3D;30s;        server t2.tianditu.gov.cn:443 weight&#x3D;1 max_fails&#x3D;2 fail_timeout&#x3D;30s;        server t3.tianditu.gov.cn:443 weight&#x3D;1 max_fails&#x3D;2 fail_timeout&#x3D;30s;        server t4.tianditu.gov.cn:443 weight&#x3D;1 max_fails&#x3D;2 fail_timeout&#x3D;30s;        server t5.tianditu.gov.cn:443 weight&#x3D;1 max_fails&#x3D;2 fail_timeout&#x3D;30s;        server t6.tianditu.gov.cn:443 weight&#x3D;1 max_fails&#x3D;2 fail_timeout&#x3D;30s;    &#125;    server &#123;        # 此处需修改成实际端口        listen 5000 default_server;        server_name _;        location &#x2F; &#123;            add_header Access-Control-Allow-Origin *;            add_header Access-Control-Allow-Headers X-Requested-With;            add_header Access-Control-Allow-Methods GET,POST,OPTIONS;            proxy_ssl_name t0.tianditu.gov.cn;            proxy_ssl_server_name on;                        proxy_cache cache_one;            proxy_cache_key $uri$is_args$args;                        proxy_pass https:&#x2F;&#x2F;tianditu_server;            proxy_set_header Host t0.tianditu.gov.cn;            proxy_set_header User-Agent &quot;Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;103.0.0.0 Safari&#x2F;537.36&quot;;            proxy_ignore_headers Set-Cookie;            proxy_ignore_headers Cache-Control;            proxy_cache_valid 200 302 7d;                        expires 7d;                    add_header X-Proxy-Cache $upstream_cache_status;        &#125;    &#125;    # ...&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>将天地图域名换成服务器地址即可，例如将<code>https://t0.tianditu.gov.cn/img_w/wmts</code>替换成<code>http://172.16.0.100:5000/img_w/wmts</code>。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;由于天地图有时访问速度缓慢，加上接口访问数量限制，可借助nginx对天地图进行缓存，提高访问速度。&lt;/p&gt;</summary>
    
    
    
    <category term="记录" scheme="https://plusnan.me/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="nginx" scheme="https://plusnan.me/tags/nginx/"/>
    
    <category term="天地图" scheme="https://plusnan.me/tags/%E5%A4%A9%E5%9C%B0%E5%9B%BE/"/>
    
    <category term="缓存" scheme="https://plusnan.me/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>若依（芋道）框架完善记录</title>
    <link href="https://plusnan.me/2022/04/15/ruoyi-fix/"/>
    <id>https://plusnan.me/2022/04/15/ruoyi-fix/</id>
    <published>2022-04-14T16:00:00.000Z</published>
    <updated>2023-06-06T03:53:38.292Z</updated>
    
    <content type="html"><![CDATA[<p>版本：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1l1bmFpVg==">芋道源码<i class="fa fa-external-link-alt"></i></span> 2022年4月15日</p><p>由于芋道基于若依修改，所以此处改动可能也适用于若依。</p><span id="more"></span><h1 id="修正系统bug"><a href="#修正系统bug" class="headerlink" title="修正系统bug"></a>修正系统bug</h1><h2 id="多租户模式无法登录"><a href="#多租户模式无法登录" class="headerlink" title="多租户模式无法登录"></a>多租户模式无法登录</h2><p>前端<code>login.vue</code>增加<code>tenantId !== null</code>判断：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function-variable function">validator</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">rule<span class="token punctuation">,</span> value<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// debugger</span>    <span class="token function">getTenantIdByName</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> tenantId <span class="token operator">=</span> res<span class="token punctuation">.</span>data    <span class="token comment">// 修改下面代码</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>tenantId <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> tenantId <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 设置租户</span>        Cookies<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'tenantId'</span><span class="token punctuation">,</span> tenantId<span class="token punctuation">)</span>        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token string">'租户不存在'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="前端标签页切换后，无法保存标签页状态"><a href="#前端标签页切换后，无法保存标签页状态" class="headerlink" title="前端标签页切换后，无法保存标签页状态"></a>前端标签页切换后，无法保存标签页状态</h2><h3 id="表结构调整"><a href="#表结构调整" class="headerlink" title="表结构调整"></a>表结构调整</h3><p><code>system_menu</code>表增加一个字段：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> map<span class="token punctuation">.</span>system_menu <span class="token keyword">add</span> component_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>同时在<code>sql.vm</code>增加相应字段。</p><h3 id="后端调整"><a href="#后端调整" class="headerlink" title="后端调整"></a>后端调整</h3><p><code>MenuDO.java</code>增加</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 组件名称 */</span><span class="token keyword">private</span> <span class="token class-name">String</span> componentName<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>AuthMenuRespVO.java</code>增加</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"组件名称"</span><span class="token punctuation">)</span><span class="token keyword">private</span> <span class="token class-name">String</span> componentName<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>MenuBaseVO.java</code>增加</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"组件名称"</span><span class="token punctuation">,</span> example <span class="token operator">=</span> <span class="token string">"post"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Size</span><span class="token punctuation">(</span>max <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">"组件路径不能超过255个字符"</span><span class="token punctuation">)</span><span class="token keyword">private</span> <span class="token class-name">String</span> componentName<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="前端调整"><a href="#前端调整" class="headerlink" title="前端调整"></a>前端调整</h3><p><code>store/modules/permission.js</code>，修改<code>filterAsyncRouter</code>函数:</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">filterAsyncRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// ...</span>  route<span class="token punctuation">.</span>meta <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">title</span><span class="token operator">:</span> route<span class="token punctuation">.</span>name<span class="token punctuation">,</span>    <span class="token literal-property property">icon</span><span class="token operator">:</span> route<span class="token punctuation">.</span>icon<span class="token punctuation">,</span>    <span class="token comment">// 下方增加新代码</span>    <span class="token literal-property property">componentName</span><span class="token operator">:</span> route<span class="token punctuation">.</span>componentName    <span class="token punctuation">&#125;</span>  <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>store/modules/tagsView.js</code>增加代码：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function-variable function">ADD_CACHED_VIEW</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> view</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token punctuation">.</span>cachedViews<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>componentName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>view<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>noCache<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    state<span class="token punctuation">.</span>cachedViews<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>componentName<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">DEL_CACHED_VIEW</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> view</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> index <span class="token operator">=</span> state<span class="token punctuation">.</span>cachedViews<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>componentName<span class="token punctuation">)</span>  index <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> state<span class="token punctuation">.</span>cachedViews<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>system/menu/index.vue</code>增加两个输入框：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span> <span class="token attr-name">...</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 权限标识下方增加 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span>    <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>componentName<span class="token punctuation">"</span></span>    <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>组件名称<span class="token punctuation">"</span></span>    <span class="token attr-name">:show-overflow-tooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span>...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">...<span class="token comment">&lt;!-- 添加或修改菜单对话框 --></span><span class="token comment">&lt;!-- 菜单名称下增加 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>组件名称<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>componentName<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span>      <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.componentName<span class="token punctuation">"</span></span>      <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入组件名称<span class="token punctuation">"</span></span>    <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="功能调整"><a href="#功能调整" class="headerlink" title="功能调整"></a>功能调整</h3><p>修改完成后，菜单管理的对话框中会多出一个“组件名称”输入框，将其设置为Vue组件的name即可：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'与此处name保持一致'</span><span class="token punctuation">,</span>  <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="svg-icon图标颜色问题"><a href="#svg-icon图标颜色问题" class="headerlink" title="svg-icon图标颜色问题"></a>svg-icon图标颜色问题</h2><p>定位到<code>src/assets/icons/svg</code>，通过正则搜索所有svg中的<code>fill=&quot;.*?&quot;</code>，删除。</p><h2 id="字体尺寸错误问题"><a href="#字体尺寸错误问题" class="headerlink" title="字体尺寸错误问题"></a>字体尺寸错误问题</h2><p>定位到<code>src/components/bpmnProcessDesigner/package/theme/process-designer.scss</code>，将其中的</p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token keyword">@import</span> <span class="token string">"~bpmn-js-token-simulation/assets/css/normalize.css"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>删除。</p><h2 id="标签页“关闭左侧”不起作用"><a href="#标签页“关闭左侧”不起作用" class="headerlink" title="标签页“关闭左侧”不起作用"></a>标签页“关闭左侧”不起作用</h2><p>定位到<code>store/modules/tagsView.js</code>，可以发现里面只有<code>delRightTags</code>，缺少<code>delLeftTags</code>，将其补全即可。</p><h2 id="生成代码中出现编译错误"><a href="#生成代码中出现编译错误" class="headerlink" title="生成代码中出现编译错误"></a>生成代码中出现编译错误</h2><p>如果有DECIMAL类型字段，会出现编译错误，因为未import BigDecimal类型，将其补全即可。</p><p>修改<code>src/resources/codegen/java/dal/do.vm</code>:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再修改<code>src/resources/codegen/java/controller/vo</code>中的每个vm：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="代码质量优化"><a href="#代码质量优化" class="headerlink" title="代码质量优化"></a>代码质量优化</h1><h2 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h2><p>使用工具重新生成</p><h2 id="前端jsconfig-json"><a href="#前端jsconfig-json" class="headerlink" title="前端jsconfig.json"></a>前端jsconfig.json</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"compilerOptions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"baseUrl"</span><span class="token operator">:</span> <span class="token string">"./"</span><span class="token punctuation">,</span>    <span class="token property">"paths"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token property">"@/*"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src/*"</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"target"</span><span class="token operator">:</span> <span class="token string">"ES2015"</span><span class="token punctuation">,</span>    <span class="token property">"lib"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"ES2021"</span><span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"include"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"./src/**/*"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"exclude"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"dist"</span><span class="token punctuation">,</span> <span class="token string">"node_modules"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="前端代码格式化"><a href="#前端代码格式化" class="headerlink" title="前端代码格式化"></a>前端代码格式化</h2><p>使用eslint和prettier批量格式化，保持代码整洁</p><h2 id="清理console-log"><a href="#清理console-log" class="headerlink" title="清理console.log"></a>清理console.log</h2><p>使用查找功能搜索代码中的<code>console.log</code>，将其删除。</p><h2 id="request超时"><a href="#request超时" class="headerlink" title="request超时"></a>request超时</h2><p>找到<code>request.js</code>，增加超时时间的判断：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 创建axios实例</span><span class="token keyword">const</span> service <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">// axios中请求配置有baseURL选项，表示请求URL公共部分</span>  <span class="token literal-property property">baseURL</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_BASE_API</span> <span class="token operator">+</span> <span class="token string">'/admin-api/'</span><span class="token punctuation">,</span> <span class="token comment">// 此处的 /admin-api/ 地址，原因是后端的基础路径为 /admin-api/</span>  <span class="token comment">// 超时</span>  <span class="token literal-property property">timeout</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">'development'</span> <span class="token operator">?</span> <span class="token number">1000000</span> <span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="功能完善"><a href="#功能完善" class="headerlink" title="功能完善"></a>功能完善</h1><h2 id="提高系统响应速度"><a href="#提高系统响应速度" class="headerlink" title="提高系统响应速度"></a>提高系统响应速度</h2><p>将动画速度调快，或者直接删除，从而提高感官上的响应速度。</p><h3 id="前端index-html"><a href="#前端index-html" class="headerlink" title="前端index.html"></a>前端index.html</h3><p>把转圈动画直接删掉</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loader-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loader<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loader-section section-left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loader-section section-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>load_title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>正在加载系统资源，请耐心等待<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="前端transition-scss"><a href="#前端transition-scss" class="headerlink" title="前端transition.scss"></a>前端transition.scss</h3><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>全部替换成</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">transition</span><span class="token punctuation">:</span> all .1s<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>增加：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.el-loading-spinner .circular</span> <span class="token punctuation">&#123;</span>  <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> loading-rotate 0.25s linear infinite<span class="token punctuation">;</span>  <span class="token property">animation</span><span class="token punctuation">:</span> loading-rotate 0.25s linear infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>加快按钮的转圈速度。</p><h2 id="字典数据项维护"><a href="#字典数据项维护" class="headerlink" title="字典数据项维护"></a>字典数据项维护</h2><p>定位到<code>views/system/dict/index.vue</code>，增加按钮：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span>  <span class="token attr-name">v-hasPermi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>system:dict:update<span class="token punctuation">'</span>]<span class="token punctuation">"</span></span>  <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>  <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>el-icon-notebook-2<span class="token punctuation">"</span></span>  <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$router.push(<span class="token punctuation">'</span>/dict/type/data/<span class="token punctuation">'</span> + scope.row.id)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  数据项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="完善系统报错与日志查询"><a href="#完善系统报错与日志查询" class="headerlink" title="完善系统报错与日志查询"></a>完善系统报错与日志查询</h2><h3 id="前端报错提示优化"><a href="#前端报错提示优化" class="headerlink" title="前端报错提示优化"></a>前端报错提示优化</h3><p>修改<code>request.js</code>，根据实际情况调整报错内容，例如：</p><ul><li>会话超时：您长时间未操作，已自动注销，请重新登录</li><li>网络异常：网络连接错误，请检查网络连接，然后重试</li><li>超时：系统响应超时，请稍后重试</li><li>502:</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'Request failed with status code'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'502'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    message <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">系统正在升级，请稍候。</span><span class="token template-punctuation string">`</span></span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> code <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span>    message <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">系统访问异常，请向客服提供错误代码：HTTP </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>code<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="后端报错向用户提供日志ID"><a href="#后端报错向用户提供日志ID" class="headerlink" title="后端报错向用户提供日志ID"></a>后端报错向用户提供日志ID</h3><p><code>GlobalExceptionHandler.java</code>修改代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 处理系统异常，兜底处理所有的一切 */</span><span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">CommonResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token function">defaultExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"[defaultExceptionHandler]"</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> message <span class="token operator">=</span> INTERNAL_SERVER_ERROR<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 插入异常日志</span>    <span class="token comment">// 如果能获取到事件id，则直接展示id，方便在系统中查询；如果获取不到id，则提供时间，方便去后台翻日志</span>    <span class="token class-name">Long</span> errId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createExceptionLog</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>errId <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        message <span class="token operator">+=</span> <span class="token string">"（日志编号：#"</span> <span class="token operator">+</span> errId <span class="token operator">+</span> <span class="token string">"）"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">DateTimeFormatter</span> dtf <span class="token operator">=</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">"ddHHmmss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        message <span class="token operator">+=</span> <span class="token string">"（日志编号：$"</span> <span class="token operator">+</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>dtf<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 返回 ERROR CommonResult</span>    <span class="token keyword">return</span> <span class="token class-name">CommonResult</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>INTERNAL_SERVER_ERROR<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">private</span> <span class="token class-name">Long</span> <span class="token function">createExceptionLog</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 插入错误日志</span>    <span class="token class-name">ApiErrorLogCreateReqDTO</span> errorLog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ApiErrorLogCreateReqDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Long</span> result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 初始化 errorLog</span>        <span class="token function">initExceptionLog</span><span class="token punctuation">(</span>errorLog<span class="token punctuation">,</span> req<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 执行插入 errorLog</span>        <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">></span></span> errId <span class="token operator">=</span> apiErrorLogFrameworkService<span class="token punctuation">.</span><span class="token function">createApiErrorLogAsync</span><span class="token punctuation">(</span>errorLog<span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> errId<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">TimeoutException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> th<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"[createExceptionLog][url(&#123;&#125;) log(&#123;&#125;) 发生异常]"</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">JsonUtils</span><span class="token punctuation">.</span><span class="token function">toJsonString</span><span class="token punctuation">(</span>errorLog<span class="token punctuation">)</span><span class="token punctuation">,</span> th<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>ApiErrorLogFrameworkService.java</code>修改<code>createApiErrorLogAsync</code>返回类型：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 创建 API 错误日志 * * @param createDTO 创建信息 * @return 日志ID */</span><span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">></span></span> <span class="token function">createApiErrorLogAsync</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">ApiErrorLogCreateReqDTO</span> createDTO<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>ApiErrorLogServiceImpl.java</code>修改：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token annotation punctuation">@Async</span><span class="token keyword">public</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">></span></span> <span class="token function">createApiErrorLogAsync</span><span class="token punctuation">(</span><span class="token class-name">ApiErrorLogCreateReqDTO</span> createDTO<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ApiErrorLogDO</span> apiErrorLog <span class="token operator">=</span> <span class="token class-name">ApiErrorLogConvert</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>createDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>    apiErrorLog<span class="token punctuation">.</span><span class="token function">setProcessStatus</span><span class="token punctuation">(</span><span class="token class-name">ApiErrorLogProcessStatusEnum</span><span class="token punctuation">.</span>INIT<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    apiErrorLogMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>apiErrorLog<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AsyncResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>apiErrorLog<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="完善日志查询，允许按ID查询日志"><a href="#完善日志查询，允许按ID查询日志" class="headerlink" title="完善日志查询，允许按ID查询日志"></a>完善日志查询，允许按ID查询日志</h3><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h4><p><code>ApiAccessLogPageReqVO.java</code>、<code>ApiErrorLogPageReqVO.java</code>、<code>LoginLogPageReqVO.java</code>、<code>OperateLogPageReqVO.java</code>增加:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"日志编号"</span><span class="token punctuation">,</span> example <span class="token operator">=</span> <span class="token string">"666"</span><span class="token punctuation">)</span><span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>ApiAccessLogMapper.java</code>、<code>ApiErrorLogMapper.java</code>、<code>LoginLogMapper.java</code>、<code>OperateLogMapper.java</code>增加:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">selectPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>内加一行<span class="token punctuation">.</span><span class="token function">eqIfPresent</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> reqVO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h4><p><code>src/views/infra/apiAccessLog/index.vue</code>、<code>apiErrorLog/index.vue</code>、<code>operatelog/index.vue</code>、<code>loginlog/index.vue</code>分别加入：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>日志编号<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span>    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>queryParams.id<span class="token punctuation">"</span></span>    <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入日志编号<span class="token punctuation">"</span></span>    <span class="token attr-name">clearable</span>    <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>    <span class="token attr-name">@keyup.enter.native</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleQuery<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">...</span><span class="token literal-property property">queryParams</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span>  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>  <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="防止对话框意外关闭"><a href="#防止对话框意外关闭" class="headerlink" title="防止对话框意外关闭"></a>防止对话框意外关闭</h2><p>前端全局搜索<code>el-dialog</code>，在每个<code>el-dialog</code>中加入</p><pre class="line-numbers language-none"><code class="language-none">:close-on-click-modal&#x3D;&quot;false&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改后端的<code>src/resources/codegen/vue/views/index.vue.vm</code>，在<code>el-dialog</code>后面增加：</p><pre class="line-numbers language-none"><code class="language-none">:close-on-click-modal&#x3D;&quot;false&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样再生成代码就不会遇到相同问题了。</p><h2 id="处理前端列表页面，搜索条件文字宽度太窄问题"><a href="#处理前端列表页面，搜索条件文字宽度太窄问题" class="headerlink" title="处理前端列表页面，搜索条件文字宽度太窄问题"></a>处理前端列表页面，搜索条件文字宽度太窄问题</h2><p>前端全局搜索<code>label-width=&quot;68px&quot;</code>，将数字改得大一些，例如75px。</p><p>修改后端的<code>src/resources/codegen/vue/views/index.vue.vm</code>，将68px换成相同的数字。</p><h2 id="向前端提供username字段"><a href="#向前端提供username字段" class="headerlink" title="向前端提供username字段"></a>向前端提供username字段</h2><p>修改后端<code>AuthPermissionInfoRespVO.java</code>：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">UserVO</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"用户名"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> example <span class="token operator">=</span> <span class="token string">"pdiwt源码"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改<code>AuthConvert.java</code>，增加<code>username</code>：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">default</span> <span class="token class-name">AuthPermissionInfoRespVO</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">AdminUserDO</span> user<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RoleDO</span><span class="token punctuation">></span></span> roleList<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MenuDO</span><span class="token punctuation">></span></span> menuList<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token class-name">AuthPermissionInfoRespVO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token class-name">AuthPermissionInfoRespVO<span class="token punctuation">.</span>UserVO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nickname</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getNickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">avatar</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getAvatar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">username</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">convertSet</span><span class="token punctuation">(</span>roleList<span class="token punctuation">,</span> <span class="token class-name">RoleDO</span><span class="token operator">::</span><span class="token function">getCode</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">permissions</span><span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">convertSet</span><span class="token punctuation">(</span>menuList<span class="token punctuation">,</span> <span class="token class-name">MenuDO</span><span class="token operator">::</span><span class="token function">getPermission</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="系统安全"><a href="#系统安全" class="headerlink" title="系统安全"></a>系统安全</h1><h2 id="log4j漏洞"><a href="#log4j漏洞" class="headerlink" title="log4j漏洞"></a>log4j漏洞</h2><p>定位<code>pom.xml</code>，将log4j版本直接改为最新版即可。</p><h2 id="生产系统禁用Swagger"><a href="#生产系统禁用Swagger" class="headerlink" title="生产系统禁用Swagger"></a>生产系统禁用Swagger</h2><p>修改后端的<code>application-prod.yaml</code>，增加：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">knife4j</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">production</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果是前后分离项目，也可以通过配置nginx等方式，将<code>/doc.html</code>地址屏蔽掉。</p><h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><h2 id="替换图像"><a href="#替换图像" class="headerlink" title="替换图像"></a>替换图像</h2><p>前端<code>src/assets/images</code>，替换登录背景图片与默认头像。</p><p>删除admin头像：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> map<span class="token punctuation">.</span><span class="token keyword">system_user</span> <span class="token keyword">set</span> avatar<span class="token operator">=</span><span class="token string">''</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="改包名"><a href="#改包名" class="headerlink" title="改包名"></a>改包名</h2><p>在代码中改完包名之后，还需要执行一个sql（将下面的<code>com.xxx</code>换成实际包名），以免启动报错：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> map<span class="token punctuation">.</span>pay_channel <span class="token keyword">set</span> config<span class="token operator">=</span><span class="token keyword">replace</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span><span class="token string">'cn.iocoder'</span><span class="token punctuation">,</span> <span class="token string">'com.xxx'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="修改租户名"><a href="#修改租户名" class="headerlink" title="修改租户名"></a>修改租户名</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> map<span class="token punctuation">.</span>system_tenant <span class="token keyword">set</span> name<span class="token operator">=</span><span class="token string">'app'</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在前端<code>login.vue</code>中将“租户”的输入框隐藏，并设置默认值。</p><h1 id="前端nginx通用配置"><a href="#前端nginx通用配置" class="headerlink" title="前端nginx通用配置"></a>前端nginx通用配置</h1><pre class="line-numbers language-none"><code class="language-none">upstream backend &#123;    # TODO 后端服务器地址    server xxx:48080;&#125;map $http_upgrade $connection_upgrade &#123;    default upgrade;    &#39;&#39;      close;&#125;server &#123;    listen 80 default_server;    listen [::]:80 default_server;    gzip on;    gzip_min_length 1k;    gzip_comp_level 1;    gzip_vary on;    gzip_proxied any;    gzip_disable &quot;MSIE [1-6]\.&quot;;    gzip_buffers 32 4k;    gzip_http_version 1.1;    gzip_types text&#x2F;plain application&#x2F;javascript application&#x2F;x-javascript text&#x2F;css application&#x2F;xml text&#x2F;javascript application&#x2F;x-httpd-php;    # TODO 设置成前端地址    root &#x2F;var&#x2F;www&#x2F;html;    # 上传大小限制    client_max_body_size 500m;    # 错误页，让403返回404（以应对扫测）    error_page 403 &#x3D;404 &#x2F;404;    error_page 404 &#x2F;404;    location &#x3D; &#x2F;404 &#123;        internal;    &#125;    # 安全设置    add_header X-Content-Type-Options nosniff;    add_header X-XSS-Protection 1;    # 管理后台    location ^~ &#x2F;api&#x2F; &#123; try_files &#x2F;dev&#x2F;null @backend; &#125;    location ^~ &#x2F;admin-api&#x2F; &#123; try_files &#x2F;dev&#x2F;null @backend; &#125;    location ^~ &#x2F;infra-api&#x2F; &#123; try_files &#x2F;dev&#x2F;null @backend; &#125;    location @backend &#123;        proxy_pass http:&#x2F;&#x2F;backend;        proxy_http_version 1.1;        proxy_buffering off;        proxy_set_header Upgrade $http_upgrade;        proxy_set_header Connection &quot;upgrade&quot;;        proxy_set_header X-Real-IP $remote_addr;        proxy_set_header Host $http_host;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_intercept_errors off;    &#125;    # TODO 注意：以下是开发工具，应根据实际需要启停    # Spring Boot监测    # location &#x2F;admin &#123; try_files &#x2F;dev&#x2F;null @backend; &#125;    # location &#x2F;druid &#123; try_files &#x2F;dev&#x2F;null @backend; &#125;    # Swagger    # location &#x3D; &#x2F;doc.html &#123; try_files &#x2F;dev&#x2F;null @backend; &#125;    # location &#x2F;webjars&#x2F; &#123; try_files &#x2F;dev&#x2F;null @backend; &#125;    # location &#x3D; &#x2F;swagger-resources &#123; try_files &#x2F;dev&#x2F;null @backend; &#125;    # location &#x2F;v2&#x2F; &#123; try_files &#x2F;dev&#x2F;null @backend; &#125;    # 前端    location &#x2F; &#123;        try_files $uri $uri&#x2F; &#x2F;index.html;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;版本：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL1l1bmFpVg==&quot;&gt;芋道源码&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; 2022年4月15日&lt;/p&gt;
&lt;p&gt;由于芋道基于若依修改，所以此处改动可能也适用于若依。&lt;/p&gt;</summary>
    
    
    
    <category term="记录" scheme="https://plusnan.me/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="ruoyi" scheme="https://plusnan.me/tags/ruoyi/"/>
    
    <category term="若依" scheme="https://plusnan.me/tags/%E8%8B%A5%E4%BE%9D/"/>
    
    <category term="芋道" scheme="https://plusnan.me/tags/%E8%8A%8B%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>如何正确使用信用卡</title>
    <link href="https://plusnan.me/2022/02/22/credit-card/"/>
    <id>https://plusnan.me/2022/02/22/credit-card/</id>
    <published>2022-02-21T16:00:00.000Z</published>
    <updated>2023-08-30T08:49:26.171Z</updated>
    
    <content type="html"><![CDATA[<p>学会正确使用信用卡，让自己不会成为“卡奴”。</p><span id="more"></span><h1 id="如果你不知道信用卡能做什么事情，那么不要办信用卡"><a href="#如果你不知道信用卡能做什么事情，那么不要办信用卡" class="headerlink" title="如果你不知道信用卡能做什么事情，那么不要办信用卡"></a>如果你不知道信用卡能做什么事情，那么不要办信用卡</h1><p>信用卡能做什么事情呢？</p><p><strong>如果你不清楚这个问题，那么说明你完全不需要信用卡。</strong>这种情况下，即使银行会给你各种好处，你也不应该去办理任何信用卡，而且应该抓紧去银行把已经办过的信用卡全部注销。</p><p>如果你还是想了解信用卡的作用，这里可以简单解释一下：</p><ul><li>在国内，有支付宝和微信支付就足够了，缺钱的话，你还可以用花呗和借呗，所以你不需要信用卡。</li><li>在国外，以及需要支付的国外网站，你需要指定标志（例如Visa、Mastercard）的信用卡，所以你不需要纯银联的信用卡。</li></ul><h1 id="如果你要办信用卡，那么要熟悉信用卡的一些概念"><a href="#如果你要办信用卡，那么要熟悉信用卡的一些概念" class="headerlink" title="如果你要办信用卡，那么要熟悉信用卡的一些概念"></a>如果你要办信用卡，那么要熟悉信用卡的一些概念</h1><p>很多人都有储蓄卡，规范说法叫做借记卡。储蓄卡的用法很简单，需要存钱时可以直接往里面存钱，需要消费或取钱时可以往外取钱，而且只要卡片和密码不丢，钱就不会丢，也不会产生额外费用。</p><p>但信用卡不同于借记卡，信用卡有一系列麻烦的概念。如果你不清楚这些词语的含义，不能正确使用卡片，轻者增加花销，重者影响征信。</p><ul><li>额度：额度指信用卡最多能花多少钱。额度是银行的钱，不是你的钱，所以额度高只是表示你能多借点钱，该还的钱还是要还的。假如你的额度是10000元，查询到当前额度是3000元，说明你现在欠银行7000元。</li><li>年费：<strong>持有信用卡，每年会产生一笔持有的费用，所以办卡时务必和银行确认年费金额</strong>。虽然有些卡片是免年费的，或者带条件免年费，例如消费满多少之后免年费，但你也不要直接拿剪刀把卡片“咔嚓”掉，而是及时去银行注销不再使用的卡片，彻底消除隐患。</li><li>账单日和还款日：<ul><li>账单日：到账单日时，银行会把上一个月的消费记录固定下来，形成账单，并且告诉你欠了多少钱。这个时候你还有大约半个月的准备时间，银行不会计算利息，只要在到达还款日之前还款即可。</li><li>还款日：账单日过了大约半个月时间以后，会到达还款日，这是你还钱的最后期限。<strong>如果你过了还款日还没还钱，那么会影响征信，而且银行会开始收利息。</strong></li><li>每张卡的账单日和还款日都不一样，具体日期需要和银行确认。另外建议开启自动还款功能，以免因为不小心忘记还款而影响征信。</li></ul></li><li>最低还款：在账单日之后，除了全额还款，你也可以只还一部分。例如账单金额是欠1000元，最低还款额是100元，你只要还款超过100元，就不会影响征信。但是需要注意，<strong>最低还款只是不影响征信，剩下的钱还是要还的，而且过了还款日之后，银行也会开始计算利息</strong>。</li><li>CVV（安全码）：指卡片背后的数字。信用卡和储蓄卡不一样，只要知道正面的卡号与日期，以及背面的安全码，无需密码也可以消费。因此<strong>不要随意让别人看到你的信用卡卡面</strong>。</li><li>人民币账单和美元账单：如果是外币卡，会产生两种账单，人民币账单和美元账单要分别用两种货币还款。如果你不介意汇率问题，而且觉得购汇还款麻烦，可以开通美元账单用人民币记账，这样的话，到账单日的时候，直接用人民币就能把两种欠款还清。</li><li>银联、Visa、Mastercard等：卡面上的标志决定了它能在哪里使用。例如带Visa或Mastercard标志的，可以在国外很多国家使用，但是只有银联一种标志的，基本上只能在国内使用了。</li></ul><p>如果看到上面这些词语之后一头雾水，感觉无法理解，正好说明你不应该办理信用卡。</p><h1 id="无论什么情况，都要量力而行"><a href="#无论什么情况，都要量力而行" class="headerlink" title="无论什么情况，都要量力而行"></a>无论什么情况，都要量力而行</h1><p>信用卡的本质是向银行借钱，是你的债务之一。既然是欠别人的钱，那么你迟早要还钱，因此，你手头应该准备比账单支出还要多的存款，不然的话，你拿什么去还呢？</p><p>如果你没有足够的存款，那么你需要评估自己的收入情况，保证剩余存款加上本月的收入能还得上信用卡和其他债务的支出。</p><p>在疫情两年折腾之下，有些单位已经开始不能正常发放工资，因此你要慎重考虑自己的财务情况。如果你背上了房贷车贷，收入开始变得不稳定，又没有足够的存款，那么即使靠信用卡做资金周转，也改变不了它是压垮你的众多石头之一的事实。</p><h1 id="有些操作，这辈子永远都不要碰"><a href="#有些操作，这辈子永远都不要碰" class="headerlink" title="有些操作，这辈子永远都不要碰"></a>有些操作，这辈子永远都不要碰</h1><h2 id="最低还款和分期还款"><a href="#最低还款和分期还款" class="headerlink" title="最低还款和分期还款"></a>最低还款和分期还款</h2><p>最低还款和分期还款，因为你的欠款没有还清，所以都会计算利息。利息的计算方式比较复杂，而且利息是按照账单金额而非实际欠款计算的，也就是说，你欠了1000，还了900，利息还是用1000来计算的。</p><p>那么如何规避这里面的陷阱呢？</p><p>很简单，只要你每次都是全额还款，也永远不做分期还款，你就永远不需要关心这个问题了。</p><h2 id="取现"><a href="#取现" class="headerlink" title="取现"></a>取现</h2><p>信用卡可以合法地取现，但是银行会收取手续费，并且利息从取现开始就立即计算，而不是等到还款日才计算。因此除非迫不得已，不要使用信用卡取现。</p><h2 id="套现"><a href="#套现" class="headerlink" title="套现"></a>套现</h2><p>很多人申请信用卡其实是为了能周转资金。由于信用卡取现手续费和利息都比较高，而刷POS机属于消费，手续费低，而且还款日之前没有利息，所以你会发现街头到处都有办POS机的小广告。</p><p>然而信用卡套现是违法的，而且错误地刷POS机容易触发银行风控，导致锁卡。出现问题时，你也不能用合法途径来维护自己的权益，因为这样做等于投案自首。</p><p>如果你现在经济状况还能说得过去，在大额消费（例如贷款）之前，你就应该思考一下，是不是本可以降低杠杆率（少贷款），或者暂缓消费计划，减少不必要的支出，从而避免把自己逼到需要靠信用卡套现周转的绝境呢？</p><p>如果已经山穷水尽，沦落到不得不靠信用卡套现的程度，你需要思考，能不能选择割肉，先变卖手中的一些资产，哪怕亏本卖掉，先把总负债降下去再说？</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;学会正确使用信用卡，让自己不会成为“卡奴”。&lt;/p&gt;</summary>
    
    
    
    <category term="一点人生的经验" scheme="https://plusnan.me/categories/%E4%B8%80%E7%82%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="信用卡" scheme="https://plusnan.me/tags/%E4%BF%A1%E7%94%A8%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>小心你的数据库查询窗口，以免误操作</title>
    <link href="https://plusnan.me/2021/12/16/db-console/"/>
    <id>https://plusnan.me/2021/12/16/db-console/</id>
    <published>2021-12-15T16:00:00.000Z</published>
    <updated>2023-07-24T15:08:15.777Z</updated>
    
    <content type="html"><![CDATA[<p>如果你的数据库查询窗口的第一行是<code>DROP DATABASE</code>，你又不小心点击了执行按钮……</p><p>有些数据库软件能够智能地执行光标所在行的指令，但有些数据库软件没那么智能，或者需要配置才能变聪明，一不小心，就会把窗口里面的所有SQL都执行一遍，所以使用数据库软件时要注意防范误操作。</p><span id="more"></span><h1 id="先检查再操作"><a href="#先检查再操作" class="headerlink" title="先检查再操作"></a>先检查再操作</h1><ul><li>执行UPDATE和DELETE之前，检查是否写了WHERE条件，并用同样条件执行一遍SELECT查询，检查条件是否正确。</li><li>执行选择或光标处SQL语句时，检查SQL语句是否选择完整。</li></ul><h1 id="及时清理破坏性SQL"><a href="#及时清理破坏性SQL" class="headerlink" title="及时清理破坏性SQL"></a>及时清理破坏性SQL</h1><p>在操作数据库时，如果需要执行有副作用的指令，例如DROP、DELETE、INSERT、UPDATE、TRUNCATE等，记得在执行完成后及时清理掉这些语句。可以用以下方式操作：</p><ul><li>每执行完一个SQL，就立刻把它删掉。</li><li>为了方便查找或记录，不希望把SQL删掉，可以在执行完SQL之后立刻把它注释掉。</li><li>在SQL窗口第一行放一个会报错的SQL，如果不小心点了执行，可以让数据库客户端在第一行就停下来。需要注意，有些数据库客户端在失败后会继续执行后面的指令，所以还要慎重。</li></ul><h1 id="连接生产系统，不要图方便"><a href="#连接生产系统，不要图方便" class="headerlink" title="连接生产系统，不要图方便"></a>连接生产系统，不要图方便</h1><p>生产系统权限意味着巨大的责任，而连接生产系统的方式越容易，犯错误的几率就越大，所以不要为了图方便把自己置于危险境地。可以用以下方法来防范：</p><ul><li>不要在同一个系统、同一个数据库软件中同时连接开发系统和生产系统，避免弄错环境。</li><li>连接生产系统之前总是手工输入账号密码，不要自动连接，使自己清晰地意识到自己在连接生产系统，同时防止无关人员盗用。</li><li>批量执行语句，或导入SQL文件时，先检查SQL内容，确认是否有破坏性指令（例如有些软件生成的导入SQL会先删表），确认无误后再执行。</li><li>把在生产系统执行的每条SQL都做好记录，包括执行时间、执行人、操作目的，以备事后追溯。</li><li>及时清理生产系统的数据库操作界面里的SQL。</li><li>操作完成后及时关闭数据库软件。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;如果你的数据库查询窗口的第一行是&lt;code&gt;DROP DATABASE&lt;/code&gt;，你又不小心点击了执行按钮……&lt;/p&gt;
&lt;p&gt;有些数据库软件能够智能地执行光标所在行的指令，但有些数据库软件没那么智能，或者需要配置才能变聪明，一不小心，就会把窗口里面的所有SQL都执行一遍，所以使用数据库软件时要注意防范误操作。&lt;/p&gt;</summary>
    
    
    
    <category term="一点人生的经验" scheme="https://plusnan.me/categories/%E4%B8%80%E7%82%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="数据库" scheme="https://plusnan.me/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>如果你的Web应用出现了莫名其妙的问题，你可以怀疑是否被WAF设备拦截</title>
    <link href="https://plusnan.me/2021/11/19/waf/"/>
    <id>https://plusnan.me/2021/11/19/waf/</id>
    <published>2021-11-18T16:00:00.000Z</published>
    <updated>2023-06-07T02:26:01.722Z</updated>
    
    <content type="html"><![CDATA[<p>有些时候，你的Web应用明明正常，但是突然有一天，它出现了莫名其妙的问题，无法定位到是哪一行代码错误，而且检查服务器配置也没有问题。这种情况下，可能是WAF安全设备在作怪。</p><p>本文用几个案例，讲一讲这种“莫名其妙”问题的现象如何，以及如何定位到WAF。</p><span id="more"></span><h1 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h1><ul><li>业务操作A从某时起突然开始提示“操作失败”，且更换账号、清理缓存、更换浏览器等方案皆无效，用户反馈显示所有人都无法成功办理业务。</li><li>业务操作B从差不多的时间开始出故障，点击按钮没有反应，更换账号或浏览器同样无效。</li><li>业务操作C也没有反应，后台抓包显示发生HTTP 418错误，而且有一个错误页面。跟开发人员确认，页面不是他们系统的。</li><li>其他业务未反馈异常。</li><li>询问实施与运维人员，确认近期没有碰过生产应用、生产数据库或其他相关服务器。</li></ul><h1 id="系统部署架构"><a href="#系统部署架构" class="headerlink" title="系统部署架构"></a>系统部署架构</h1><p>业务系统采用了既经典又传统的Web应用部署架构：</p><pre class="line-numbers language-none"><code class="language-none">  Internet     |                    机房               |用户 ← CDN ← 网关 ← 负载均衡 ← 应用服务器（集群） ← 数据库服务器               |                     ↑               |                 Redis服务器               |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据架构图，询问各环节是否靠谱：</p><ul><li>用户经常“出故障”，然而本次已确认是系统问题，不是用户环境或操作问题。</li><li>CDN由一家比较靠谱的第三方公司提供，出故障机率不大。</li><li>负载均衡设备由一家比较靠谱的厂商生产，没有故障记录。</li><li>Redis服务器、数据库服务器偶尔出故障，但本次业务问题应该与数据库无关（猜测，需要进一步确认）。</li><li>应用服务器集群，每个节点部署的应用完全相同。应用服务器有故障记录，而且有些不靠谱的开发人员会把bug带到生产系统。</li></ul><h1 id="检查过程"><a href="#检查过程" class="headerlink" title="检查过程"></a>检查过程</h1><p>因故障发生前后未对生产系统服务器进行操作，首先排除自己人操作导致故障的可能性。</p><p>接下来排除集群节点故障，因为集群各节点应用相同，且只有特定功能失败，其他功能正常，不会是节点卡死导致的。</p><p>然后又排除了CDN的原因——通过修改自己电脑的hosts文件绕过了CDN，直接与服务器原始IP连接，问题依旧。</p><p>向开发人员确认两业务的代码：操作A是Ajax请求，操作B是普通的form表单提交。</p><p>下面分别分析A与B两个业务的情况。</p><h2 id="业务A"><a href="#业务A" class="headerlink" title="业务A"></a>业务A</h2><p>使用浏览器控制台观察请求，发现业务A在Networks页面现象如下：</p><p><img src="/img/2021-11-19-waf/a-1.png" alt="a-1"></p><p>其他请求正常，说明应用服务器没挂，唯独这个个别业务可能有bug。需要登录服务器检查应用后台日志。</p><p>登录到服务器，对每个节点的应用日志进行检查，未发现报错。重复操作几遍之后再检查日志，仍然未发现报错。我们怀疑程序未打错误日志。</p><p>然而再仔细观察浏览器抓包的内容：</p><p><img src="/img/2021-11-19-waf/a-2.png" alt="a-2"></p><p>从图中可以发现，在Header里面未找到“Response Headers”，没有返回内容，“General”中也没有找到“Status Code”，说明甚至没有HTTP状态码。看来连接可能是被“掐断”了。</p><p>再用curl测试一下。本地调用的话是：</p><pre class="line-numbers language-none"><code class="language-none">$ curl -v -X POST -H &quot;Content-Type: application&#x2F;json&quot; -b &quot;JSESSIONID&#x3D;从服务器拷过来的cookie&quot; -d &quot;从浏览器抓到的AJAX提交的内容&quot; http:&#x2F;&#x2F;www.xxx.com&#x2F;business&#x2F;submit*   Trying xxx.xxx.xxx.xxx...* TCP_NODELAY set* Connected to www.xxx.com (xxx.xxx.xxx.xxx) port 80 (#0)&gt; POST &#x2F;business&#x2F;submit HTTP&#x2F;1.1&gt; Host: www.xxx.com&gt; User-Agent: curl&#x2F;7.58.0&gt; Accept: *&#x2F;*&gt; Cookie: JSESSIONID&#x3D;xxxxxxx&gt; Content-Type: application&#x2F;json&gt; Content-Length: xxx&gt;* upload completely sent off: xxx out of xxx bytes* Empty reply from server* Connection #0 to host xxx.xxx.xxx.xxx left intactcurl: (52) Empty reply from server* Closing connection 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>未返回任何数据。</p><p>但登录到服务器里面操作就能返回HTTP 200 OK，还能看到JSON串，说明应用能正常响应：</p><pre class="line-numbers language-none"><code class="language-none"># curl -v -X POST -H &quot;Content-Type: application&#x2F;json&quot; -b &quot;JSESSIONID&#x3D;从服务器拷过来的cookie&quot; -d &quot;从浏览器抓到的AJAX提交的内容&quot; http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;business&#x2F;submit*   Trying 127.0.0.1...* TCP_NODELAY set* Connected to 127.0.0.1 port 8080 (#0)&gt; POST &#x2F;business&#x2F;submit HTTP&#x2F;1.1&gt; Host: 127.0.0.1:8080&gt; User-Agent: curl&#x2F;7.58.0&gt; Accept: *&#x2F;*&gt; Cookie: JSESSIONID&#x3D;xxxxxxx&gt; Content-Type: application&#x2F;json&gt; Content-Length: xxx&gt;&lt; HTTP&#x2F;1.1 200 OK&lt; Cache-Control: no-cache&lt; Connection: keep-alive&lt; Content-Length: xxx&lt; Content-Type: application&#x2F;json&lt; Date: xxx, xx xxx xxxx xx:xx:xx GMT&lt;一个乱七八糟的JSON串* Connection #0 to host 127.0.0.1 left intact* Closing connection 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将127.0.0.1:1080换成负载均衡地址，重复操作几遍，仍然返回200 OK，说明负载均衡设备应该没有问题。另外对JSON串的内容进行检查，发现提示“办理“成功”或“办理失败！请勿重复办理！”，说明数据库也是正常的，否则不可能校验出“重复办理”。</p><h2 id="业务B"><a href="#业务B" class="headerlink" title="业务B"></a>业务B</h2><p>在进入B业务页面时，浏览器控制台显示oper.js有JavaScript语法错误：</p><p><img src="/img/2021-11-19-waf/b.png" alt="oper.js"></p><p>直接用浏览器查看oper.js内容，发现JavaScript脚本并未完整加载。分别在本地和服务器上使用curl命令获取oper.js内容：</p><pre class="line-numbers language-none"><code class="language-none">在本地操作：$ curl http:&#x2F;&#x2F;www.xxx.com&#x2F;static&#x2F;js&#x2F;oper.jscurl: (18) transfer closed with outstanding read data remaining一堆不完整的js代码登录到服务器：# curl http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;static&#x2F;js&#x2F;oper.js一堆完整的js代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现：在我们电脑上执行curl，脚本还没加载完整，网络连接就被“掐断”了；在服务器上执行curl（域名分别使用127.0.0.1:8080与负载均衡地址），脚本内容能完整加载。</p><h2 id="业务C"><a href="#业务C" class="headerlink" title="业务C"></a>业务C</h2><p>跟开发人员确认，他们的系统不会返回HTTP 418错误，而且错误页面与他们系统设计风格不符。说明错误页面不是该系统产生，而是由其他系统产生，例如CDN，但CDN表示这个错误页面也不是他们产生的。</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>根据上面一系列现象判断，我们确认现有系统与设备未发生故障，可能某个环节调整了安全策略，导致正常请求被错误拦截。</p><p>和甲方负责人员沟通之后，得知机房近期部署了WAF，但甲方既未通知各相关单位，也未派人观察WAF拦截记录。我们直接和WAF负责人员沟通，维护白名单之后问题解决。</p><h1 id="类似事件"><a href="#类似事件" class="headerlink" title="类似事件"></a>类似事件</h1><p>到了另一个项目，该项目使用HTTPS网站。证书即将过期时，登录到nginx服务器替换新证书，浏览器验证时却发现证书有效期未更新，仍为原证书的有效期。</p><p>仔细检查服务器，发现证书文件已正确替换、nginx配置正确，而且服务器内只有一个nginx实例，并已正确重启。</p><p>但是在测试时意外发现，在服务器上使用<code>curl -vIk https://127.0.0.1</code>查看证书有效期已经更新，但是使用<code>curl -vIk https://xxx.xxx.xxx.xxx</code>（外网地址）时证书有效期未更新，说明服务器和外网之间应该有某类设备。</p><p>经确认，该项目服务器与外网之间也是有一个WAF，联系相应部门在WAF上配置新证书，证书有效期问题就解决了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;有些时候，你的Web应用明明正常，但是突然有一天，它出现了莫名其妙的问题，无法定位到是哪一行代码错误，而且检查服务器配置也没有问题。这种情况下，可能是WAF安全设备在作怪。&lt;/p&gt;
&lt;p&gt;本文用几个案例，讲一讲这种“莫名其妙”问题的现象如何，以及如何定位到WAF。&lt;/p&gt;</summary>
    
    
    
    <category term="系统运维" scheme="https://plusnan.me/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="WAF" scheme="https://plusnan.me/tags/WAF/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7安全等保整改记录</title>
    <link href="https://plusnan.me/2021/10/24/centos-security/"/>
    <id>https://plusnan.me/2021/10/24/centos-security/</id>
    <published>2021-10-23T16:00:00.000Z</published>
    <updated>2023-06-06T03:32:47.588Z</updated>
    
    <content type="html"><![CDATA[<p>为满足等保测评要求，对CentOS 7服务器进行了统一整改，整改命令记录如下。</p><span id="more"></span><h1 id="升级SSH"><a href="#升级SSH" class="headerlink" title="升级SSH"></a>升级SSH</h1><p>网上教程太多了，此处不再提供。</p><p>如果从7.x旧版升级到8.x或9.x，需要注意几个问题：</p><ol><li>禁用SELinux：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">setenforce <span class="token number">0</span><span class="token function">sed</span> -i <span class="token string">'s/=enforcing/=disabled/'</span> /etc/selinux/config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="2"><li>删除旧的key：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> -f /etc/ssh/ssh*key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>允许root登录：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"PermitRootLogin yes"</span> <span class="token operator">>></span> /etc/ssh/sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="升级curl（需要网络）"><a href="#升级curl（需要网络）" class="headerlink" title="升级curl（需要网络）"></a>升级curl（需要网络）</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rpm</span> -Uvh http://www.city-fan.org/ftp/contrib/yum-repo/city-fan.org-release-3-4.rhel7.noarch.rpm<span class="token function">sed</span> -i <span class="token string">'s/enabled=0/enabled=1/g'</span> /etc/yum.repos.d/city-fan.org.repo<span class="token function">sed</span> -i <span class="token string">'s/gpgcheck=1/gpgcheck=0/g'</span> /etc/yum.repos.d/city-fan.org.repoyum update -y --nogpgcheck <span class="token function">curl</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># shell不记录历史命令</span><span class="token function">sed</span> -i <span class="token string">'s/HISTSIZE=1000/HISTSIZE=0/g'</span> /etc/profile<span class="token comment"># shell自动超时</span><span class="token builtin class-name">echo</span> <span class="token string">'export TMOUT=600'</span> <span class="token operator">>></span> /etc/profile<span class="token comment"># 密码复杂度规则、账号锁定规则</span><span class="token function">sed</span> -i <span class="token string">'s/authtok_type=/authtok_type= minlen=12 lcredit=-1 ucredit=-1 dcr+++edit=-1 ocredit=-1 enforce_for_root/'</span> /etc/pam.d/system-auth<span class="token function">sed</span> -i <span class="token string">'s/99999/120/g'</span> /etc/login.defs<span class="token builtin class-name">echo</span> <span class="token string">'auth required pam_tally.so onerr=fail no_magic_root'</span> <span class="token operator">>></span> /etc/pam.d/system-auth<span class="token builtin class-name">echo</span> <span class="token string">'account required pam_tally.so deny=5 unlock_time=300 root_unlock_time=300 no_magic_root even_deny_root_account per_user reset'</span> <span class="token operator">>></span> /etc/pam.d/system-auth<span class="token comment"># SSH加密算法</span><span class="token builtin class-name">echo</span> <span class="token string">'KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521'</span> <span class="token operator">>></span> /etc/ssh/sshd_configsystemctl restart sshd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;为满足等保测评要求，对CentOS 7服务器进行了统一整改，整改命令记录如下。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="CentOS" scheme="https://plusnan.me/tags/CentOS/"/>
    
    <category term="安全" scheme="https://plusnan.me/tags/%E5%AE%89%E5%85%A8/"/>
    
    <category term="等保" scheme="https://plusnan.me/tags/%E7%AD%89%E4%BF%9D/"/>
    
  </entry>
  
  <entry>
    <title>用Docker快速为办公室搭建VPN</title>
    <link href="https://plusnan.me/2021/09/10/remote-vpn/"/>
    <id>https://plusnan.me/2021/09/10/remote-vpn/</id>
    <published>2021-09-09T16:00:00.000Z</published>
    <updated>2023-06-06T12:38:13.763Z</updated>
    
    <content type="html"><![CDATA[<p>由于武汉肺炎疫情原因，随时可能会封城，导致无法前往办公室办公。如果公司没有提供VPN，为了在居家办公时能有一个连接办公室资源的方法，可以考虑自己搭一个简易的VPN。</p><span id="more"></span><h1 id="搭建VPN"><a href="#搭建VPN" class="headerlink" title="搭建VPN"></a>搭建VPN</h1><h2 id="服务器准备"><a href="#服务器准备" class="headerlink" title="服务器准备"></a>服务器准备</h2><p>准备一个服务器，能够访问公司办公室各资源，而且能连接互联网。配置好之后，安装Docker，并开放服务器443端口。</p><h2 id="安装容器和VPN配置"><a href="#安装容器和VPN配置" class="headerlink" title="安装容器和VPN配置"></a>安装容器和VPN配置</h2><p>前往<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dwcHVya2luZy9vY3NlcnYtZG9ja2Vy">https://github.com/wppurking/ocserv-docker<i class="fa fa-external-link-alt"></i></span>，将内容全部下载。也可以直接输入命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/wppurking/ocserv-docker.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>进入<code>ocserv-docker/ocserv</code>目录，清空<code>ocpasswd</code>文件内容，删除默认账号。</p><p>再修改<code>ocserv.conf</code>，在结尾增加：</p><pre class="line-numbers language-none"><code class="language-none">route &#x3D; 192.168.0.0&#x2F;255.255.255.0custom-header &#x3D; &quot;X-CSTP-Client-Bypass-Protocol: true&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>route后面的IP需要根据实际情况配置。例如公司内网采用192.168网段，那么就是<code>192.168.0.0/255.255.255.0</code>。如果不确定，也可以不增加route这行配置，这样连上VPN后所有流量都会通过VPN访问。</p><h2 id="启动VPN"><a href="#启动VPN" class="headerlink" title="启动VPN"></a>启动VPN</h2><p>下载完成后，进入该目录并启动容器：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ocserv-docker<span class="token function">docker</span> run -d --privileged --restart unless-stopped --name ocserv-docker -v ~/ocserv-docker/ocserv:/etc/ocserv -p <span class="token number">443</span>:443/tcp wppurking/ocserv<span class="token comment"># 查看日志，检查是否正常运行</span><span class="token function">docker</span> logs ocserv-docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分配账号密码"><a href="#分配账号密码" class="headerlink" title="分配账号密码"></a>分配账号密码</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> -it ocserv-docker ocpasswd 用户名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入两遍密码，修改立即生效，无需重启VPN服务器。</p><h1 id="公网映射"><a href="#公网映射" class="headerlink" title="公网映射"></a>公网映射</h1><p>VPN搭好之后，需要将该VPN服务器的443端口映射到公网上面。如果公司有公网IP，而且能够进行配置，可找相应部门把端口配置好。如果没有相应资源，可参考<a href="/2018/07/14/tunnel/">内网穿透教程</a>进行配置。</p><h1 id="VPN客户端"><a href="#VPN客户端" class="headerlink" title="VPN客户端"></a>VPN客户端</h1><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY2lzY28uY29tL2MvZW4vdXMvc3VwcG9ydC9zZWN1cml0eS9hbnljb25uZWN0LXNlY3VyZS1tb2JpbGl0eS1jbGllbnQtdjQteC9tb2RlbC5odG1sI350YWItZG93bmxvYWRz">下载Cisco AnyConnect客户端<i class="fa fa-external-link-alt"></i></span>，下载完成后进行安装。</p><p>第一次启动时，需要进入设置页面，将“Block connections to untrusted servers”前面的勾取消。</p><p>输入VPN公网映射之后的地址和端口，点击Connect即可连接。启动后会出现安全提示，点击“Connect Anyway”连接，然后输入账号密码即可连接VPN。</p><h1 id="扩展思考：能不能用来翻墙？"><a href="#扩展思考：能不能用来翻墙？" class="headerlink" title="扩展思考：能不能用来翻墙？"></a>扩展思考：能不能用来翻墙？</h1><p>当然可以，在国外服务器上用相同方式部署一套VPN软件即可，但是由于Cisco AnyConnect的流量特征太明显，所以建议用其他更可靠的方式翻墙。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;由于武汉肺炎疫情原因，随时可能会封城，导致无法前往办公室办公。如果公司没有提供VPN，为了在居家办公时能有一个连接办公室资源的方法，可以考虑自己搭一个简易的VPN。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="VPN" scheme="https://plusnan.me/tags/VPN/"/>
    
    <category term="远程办公" scheme="https://plusnan.me/tags/%E8%BF%9C%E7%A8%8B%E5%8A%9E%E5%85%AC/"/>
    
  </entry>
  
  <entry>
    <title>买房避坑指南（八）：要不要买车位</title>
    <link href="https://plusnan.me/2021/08/15/buy-house-8/"/>
    <id>https://plusnan.me/2021/08/15/buy-house-8/</id>
    <published>2021-08-14T16:00:00.000Z</published>
    <updated>2023-07-18T02:17:06.255Z</updated>
    
    <content type="html"><![CDATA[<p>买个房子都很费劲了，要不要继续出血，花几十万买那个只有2.5x5m=12.5m²的小方格？</p><span id="more"></span><h1 id="要不要买？"><a href="#要不要买？" class="headerlink" title="要不要买？"></a>要不要买？</h1><h2 id="什么情况下不要买车位"><a href="#什么情况下不要买车位" class="headerlink" title="什么情况下不要买车位"></a>什么情况下不要买车位</h2><h3 id="不需要车位"><a href="#不需要车位" class="headerlink" title="不需要车位"></a>不需要车位</h3><p>很明显，如果你永远都没有买车的计划，你当然不会考虑车位的问题。</p><p>另外可以考虑小区和周围环境，如果小区车位配比高于1:1.2，或者小区位于城区而非郊区，周围交通便利，生活配套丰富，那么说明车位的需求不会那么大，就可以考虑不买车位（长租别人车位），甚至不买车。</p><h3 id="投资"><a href="#投资" class="headerlink" title="投资"></a>投资</h3><p>那有些人会问，可不可以买个车位放在那里，然后当个房东去倒卖或挣租金呢？</p><p>因为车位只能租给小区内的业主，那么就会存在两种情况：</p><ul><li>如果车位配比高，那么对于业主来说不愁找不到车位，这样的话，车位租金就很难很高。</li><li>如果车位配比低，那么随着业主入住率增高，车位的需求也会增加，看起来可能会有机会提高租金。</li></ul><p>但是你还要考虑实际情况，例如：</p><ul><li>前期入住率不高的时候，车位可能也是不愁租不到的，所以前期车位租金也抬不上去；</li><li>随着时间推移，开发商也会因为车位卖不动，将剩余车位大幅降价促销，会使得新车位比你的旧车位便宜；</li><li>如果小区租户较多，特别是合租的租户较多，那么车位需求与入住率就不会成正比；</li><li>如果城市有限购，再等一段时间，有些投资客开始抛售房产，到时候房子附带的车位也就跟着以跳楼价抛售了。</li></ul><p>所以，如果你在一开始就以投资目的买车位，那么你会发现你的前期成本比较高，转手倒卖时卖不上价，而出租时租金又不一定能够回本，更别说赚钱了。</p><h2 id="什么情况下不要急着买车位"><a href="#什么情况下不要急着买车位" class="headerlink" title="什么情况下不要急着买车位"></a>什么情况下不要急着买车位</h2><p>如果小区是刚需房，车位比低于1:1，或者小区位于郊区，周围交通不便，那么你迟早要买辆车，买车位也是早晚的事儿。</p><p>不过你还是可以稍微晚一点再买车位，“早买早享受，晚买享折扣”，先租其他业主的车位。如果地方偏僻，交警都懒得贴罚单，你甚至还可以把车停到外面。这样可以等到两种结果：</p><ul><li>按照法律规定，车位是不允许“只售不租”的。如果有业主牵头维权，而且维权成功，就可以等到一些租赁车位。</li><li>因为车位只能卖给小区业主，坚持两三年之后，开发商的车位实在卖不出去，只能降价促销。</li></ul><p>如果你认为买车位的时机已经合适，但是暂时还没车，而且已经有买车的计划，也可以考虑当一段时间房东，把它暂时租出去。</p><h2 id="什么情况下要尽快买车位了"><a href="#什么情况下要尽快买车位了" class="headerlink" title="什么情况下要尽快买车位了"></a>什么情况下要尽快买车位了</h2><h3 id="新能源车"><a href="#新能源车" class="headerlink" title="新能源车"></a>新能源车</h3><p>很明显，如果你的车是新能源车，那么你就不得不尽快买个车位，除非你能找到其他地方充电。</p><h3 id="不太好租了"><a href="#不太好租了" class="headerlink" title="不太好租了"></a>不太好租了</h3><p>新小区，前期入住率不高，车位的需求自然就不高。但是随着入住率提高，车位需求就会自然提高。所以你还是需要经常留意车位出租的情况。</p><p>当你发现地下车位快要停满，车位不好租的时候，这时候就该考虑买车位，不过这都是交房几年之后的事情了。</p><h3 id="交警开始频繁贴罚单"><a href="#交警开始频繁贴罚单" class="headerlink" title="交警开始频繁贴罚单"></a>交警开始频繁贴罚单</h3><p>如果小区位于郊区，一开始可能没人会去贴罚单，就算报警，交警也懒得过来贴。但是随着城市发展，有些近郊逐渐变成市区，交警就可能会来贴条了。贴的次数多了，车位的需求就会突然增加，然后你也需要结合地下车库现状考虑是否入手车位了。</p><p>需要留意的是，有些地方贴罚单的不一定是交警，而是城管。如果城管贴的罚单跟交管12123系统没有连接，大可不必管他。</p><h1 id="要买，买哪个车位？"><a href="#要买，买哪个车位？" class="headerlink" title="要买，买哪个车位？"></a>要买，买哪个车位？</h1><h2 id="买人防车位，还是产权车位？"><a href="#买人防车位，还是产权车位？" class="headerlink" title="买人防车位，还是产权车位？"></a>买人防车位，还是产权车位？</h2><p>车位按产权可以分为两种，一种是产权车位，产权归业主，能办理房产证；另一种是人防车位，产权归国家，业主只有使用权，不能办房产证。</p><p>有人会说，人防车位有个“战时征用”的问题，所以不适合买。这种说法是不合适的，因为一旦真的“战时征用”，你要考虑的就不是车停在哪个地方的问题，而是如何逃难的问题了（而且汽车也会因为加不到油、充不了电而变为废铁）。也就是说，人防车位其实也是可以放心买的。</p><p>产权车位价格通常比人防车位贵不少，而且产权车位除了车位价格，还有公共维修基金和契税两笔费用。所以纯自住，而且图省钱的话可以考虑人防车位。</p><p>但是，由于人防车位产权不清，手续也需要靠租赁的形式来办理，未来转手时可能会遇到麻烦。如果将来有计划卖房子，还是应该去买产权清楚的产权车位。</p><p>另一方面，有些小区的人防车位不允许装充电桩，如果你计划或已经购买了新能源车，务必问清楚充电桩的安装问题。</p><h2 id="如果还能选车位，选哪个位置？"><a href="#如果还能选车位，选哪个位置？" class="headerlink" title="如果还能选车位，选哪个位置？"></a>如果还能选车位，选哪个位置？</h2><p>选车位时，当然是选离家近的车位。在此大原则之下，还有一些细节，可以让你未来使用车位时更舒服：</p><h3 id="优选独立车位"><a href="#优选独立车位" class="headerlink" title="优选独立车位"></a>优选独立车位</h3><p><img src="/img/2021-08-15-buy-house-8/1.png" alt="独立车位"></p><p><img src="/img/2021-08-15-buy-house-8/5.png" alt="独立车位"></p><p>独立车位是最好的位置了，爱怎么停就怎么停，不跟任何业主冲突。</p><p>但是，如果车位两侧挨着墙或柱子，则需要问清楚车位宽度、车位边缘与墙的距离，如果离得太近，上下车会很困难。</p><h3 id="优选车头靠柱车位"><a href="#优选车头靠柱车位" class="headerlink" title="优选车头靠柱车位"></a>优选车头靠柱车位</h3><p><img src="/img/2021-08-15-buy-house-8/2.png" alt="车头靠柱"></p><p>车头靠柱也是个好位置，柱子作为天然的屏障，无需担心其他业主挤你。车辆入库之后，你也可以放心地开关车门，不存在剐蹭的问题。</p><h3 id="次选靠边车位"><a href="#次选靠边车位" class="headerlink" title="次选靠边车位"></a>次选靠边车位</h3><p><img src="/img/2021-08-15-buy-house-8/3.png" alt="三车车位"></p><p>如果没有靠柱车位，那么也应该选择一个靠边的车位，给自己留出上下车的空间。</p><h3 id="避免中间车位"><a href="#避免中间车位" class="headerlink" title="避免中间车位"></a>避免中间车位</h3><p><img src="/img/2021-08-15-buy-house-8/3.png" alt="三车车位"></p><p>中间车位就有“左右夹击”的问题。如果左侧车停得太靠右，右侧车停得太靠左，你自己还是个大SUV，那么你别想上下车了。</p><h3 id="避免墙角车位"><a href="#避免墙角车位" class="headerlink" title="避免墙角车位"></a>避免墙角车位</h3><p>如果车位离墙角太近，那么就非常考验车技，例如需要借助其他车位才能倒车入库，或者出库时需要比其他车位更加小心，等等。</p><h3 id="避免柱子靠车门车位"><a href="#避免柱子靠车门车位" class="headerlink" title="避免柱子靠车门车位"></a>避免柱子靠车门车位</h3><p><img src="/img/2021-08-15-buy-house-8/4.png" alt="车门靠柱"></p><p>如果车位旁边有柱子，但没有紧靠车头，那么选择时要加小心，尽量避免左侧有柱子的车位，不然的话有可能是个紧靠车门的柱子，使得上下车困难。</p><h2 id="选位置的坑"><a href="#选位置的坑" class="headerlink" title="选位置的坑"></a>选位置的坑</h2><h3 id="斜坡车位"><a href="#斜坡车位" class="headerlink" title="斜坡车位"></a>斜坡车位</h3><p>如果车位价格比较便宜，特别是比旁边车位便宜，你需要留意车位是否带斜坡。</p><p>虽然斜坡停车并不会比普通车位恶心多少，但是如果你的车技不好，或者是在毫不知情的情况下买到斜坡车位，这就非常恶心了。如果你还是个经常忘拉手刹的新手，那你的预算就需要多出一笔修车费用。</p><h3 id="不是图上离家近，就是真的离家近"><a href="#不是图上离家近，就是真的离家近" class="headerlink" title="不是图上离家近，就是真的离家近"></a>不是图上离家近，就是真的离家近</h3><p>在交房之前买车位，你需要仔细观察小区车位分布图，注意单元门是否直通车位。有的时候，车位看起来挨着住宅，但是可能实际上在楼后面，或者有墙体、栅栏阻隔，需要绕个圈才能过去，所以要把从单元门到车位的动线问清楚。</p><p>交房之后再买车位就不存在这个问题，因为你可以实地考察了。</p><h3 id="离车库出入口、拐弯处、单元门太近"><a href="#离车库出入口、拐弯处、单元门太近" class="headerlink" title="离车库出入口、拐弯处、单元门太近"></a>离车库出入口、拐弯处、单元门太近</h3><p>选车位时，需要注意车位在车库的整体布局。如果车位离车库出入口、拐弯处、单元门太近，发生剐蹭的概率就会比其他位置高，而且你自己车出库时，也需要比其他位置更加小心，否则也是容易剐蹭。</p><p>如果挨单元门太近，车位还有可能被其他低素质业主占用。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ul><li><a href="/2020/11/22/buy-house-0/">总述</a></li><li><a href="/2020/11/29/buy-house-1/">购房资格</a></li><li><a href="/2020/12/05/buy-house-2/">地产项目情况</a></li><li><a href="/2020/12/12/buy-house-3/">项目周围环境</a></li><li><a href="/2020/12/19/buy-house-4/">售楼处里的套路</a></li><li><a href="/2020/12/26/buy-house-5">关于合同</a></li><li><a href="/2020/12/28/buy-house-6/">不要买公寓！</a></li><li><a href="/2021/07/12/buy-house-7/">房贷贷多少合适</a></li><li><strong>要不要买车位</strong></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;买个房子都很费劲了，要不要继续出血，花几十万买那个只有2.5x5m=12.5m²的小方格？&lt;/p&gt;</summary>
    
    
    
    <category term="楼市" scheme="https://plusnan.me/categories/%E6%A5%BC%E5%B8%82/"/>
    
    
    <category term="买房" scheme="https://plusnan.me/tags/%E4%B9%B0%E6%88%BF/"/>
    
  </entry>
  
  <entry>
    <title>买房避坑指南（七）：房贷贷多少合适</title>
    <link href="https://plusnan.me/2021/07/12/buy-house-7/"/>
    <id>https://plusnan.me/2021/07/12/buy-house-7/</id>
    <published>2021-07-11T16:00:00.000Z</published>
    <updated>2023-06-05T09:52:37.957Z</updated>
    
    <content type="html"><![CDATA[<p>询问买房贷款问题，年纪稍大的人会建议多贷款，“跑赢通胀”，现在还是这样吗？</p><span id="more"></span><h1 id="“跑赢通胀”的背景"><a href="#“跑赢通胀”的背景" class="headerlink" title="“跑赢通胀”的背景"></a>“跑赢通胀”的背景</h1><p>在过去那个年代：</p><ol><li>经济形势整体乐观，经济增长带动民众生活水平提高</li><li>靠自己的工资，二三十年能比较容易还清贷款</li><li>工作前景向好，收入水平逐步提高</li></ol><p>而现在呢</p><ol><li>经济形势下行，加上疫情影响，形势不再像以前乐观</li><li>靠“六个钱包”凑齐首付都困难</li><li>工作996、007，收入却不见涨，而且还有随时被裁员的风险</li></ol><p>在这个背景下，你觉得现在的重点还是跑赢通胀吗？</p><h1 id="所以这个时候要想什么"><a href="#所以这个时候要想什么" class="headerlink" title="所以这个时候要想什么"></a>所以这个时候要想什么</h1><h2 id="不要强行上车"><a href="#不要强行上车" class="headerlink" title="不要强行上车"></a>不要强行上车</h2><p>如果你家“六个钱包”真的连凑齐首付都困难，那么不要买房。</p><p>一旦强行上车，这意味着你的家庭已经没有任何保险，而且你们全家必须至少维持现有收入水平不下降，甚至要继续上升，才能还得起后面的本金和利息。很明显，经济高速增长的时代已经结束，所以不要拿不确定的未来去赌。</p><h2 id="尽量降低杠杆"><a href="#尽量降低杠杆" class="headerlink" title="尽量降低杠杆"></a>尽量降低杠杆</h2><p>尽量减少贷款的量。可以从两方面入手，一方面是提高首付比例，另一方面是降低预算。</p><p>提高首付比例，也就是在家庭承受范围之内，尽可能多用现金，少贷款。而且目前利率也比较高，少贷款就能有效减少月供压力以及贷款总利息的支出。经济上行的时候，利息可以被增长的工资给稀释掉，但现在情况正好反过来，收入不仅有可能下降，而且会被利息给稀释掉，给自己带来更大压力。</p><p>降低预算，也是降低杠杆的有效方法。假如你家里现在能掏出300万，并且你家庭年收入50万，那么你就不要加压买600万的房子，而是把预算控制在400万以内，或者进一步压低预算，只买300万甚至200万的房子。如果没有符合条件的新房，就考虑二手的老房子，或者继续租房。因为你的杠杆率不高，只要家里省吃俭用，两三年之内还能攒到一些钱，这样即便未来收入下降，甚至失业，你也不会有太大负担。</p><p>在贷款方式上，可以考虑选择等额本金，而非等额本息。虽然前期还款压力会大一些，但是总利息相对较低，而且一旦家庭财务状况缓解，你就可以提前还贷，甚至直接还清，进一步减少利息支出。</p><h2 id="考虑断供风险"><a href="#考虑断供风险" class="headerlink" title="考虑断供风险"></a>考虑断供风险</h2><p>即使经过计算，你发现你的压力还能接受，你也不要把家中存款全部花光。你需要尽量攒钱，保证一旦出现状况（失业、生病、发生事故等），你们家庭的存款还可以维持一两年时间。失业之后，既不会因为没钱而被迫断供，又能维持基本生活，这样在找新工作的时候就不会有那么大的压力了。</p><h2 id="及时止损"><a href="#及时止损" class="headerlink" title="及时止损"></a>及时止损</h2><p>如果你家庭在三四线城市甚至更低线城市有多余房产，可以考虑及时抛售掉，增加家中的现金数量。</p><p>由于未来人口会向大城市和省会城市集中，所以其他城市的房产总体上是要贬值的。像鹤岗这样的地方，如果不是网红帮忙，甚至连接盘侠都找不到，所以不要再考虑能多挣多少钱，而是考虑能少亏多少钱，及时抛售。亏得比别人少，从相对意义上讲，就是比别人挣得多了。</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>量力而行，而且要给未来留出足够的保险空间。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ul><li><a href="/2020/11/22/buy-house-0/">总述</a></li><li><a href="/2020/11/29/buy-house-1/">购房资格</a></li><li><a href="/2020/12/05/buy-house-2/">地产项目情况</a></li><li><a href="/2020/12/12/buy-house-3/">项目周围环境</a></li><li><a href="/2020/12/19/buy-house-4/">售楼处里的套路</a></li><li><a href="/2020/12/26/buy-house-5">关于合同</a></li><li><a href="/2020/12/28/buy-house-6/">不要买公寓！</a></li><li><strong>房贷贷多少合适</strong></li><li><a href="/2021/08/15/buy-house-8/">要不要买车位</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;询问买房贷款问题，年纪稍大的人会建议多贷款，“跑赢通胀”，现在还是这样吗？&lt;/p&gt;</summary>
    
    
    
    <category term="楼市" scheme="https://plusnan.me/categories/%E6%A5%BC%E5%B8%82/"/>
    
    
    <category term="买房" scheme="https://plusnan.me/tags/%E4%B9%B0%E6%88%BF/"/>
    
    <category term="房贷" scheme="https://plusnan.me/tags/%E6%88%BF%E8%B4%B7/"/>
    
  </entry>
  
  <entry>
    <title>疫情囤货指南</title>
    <link href="https://plusnan.me/2021/06/16/supplies/"/>
    <id>https://plusnan.me/2021/06/16/supplies/</id>
    <published>2021-06-15T16:00:00.000Z</published>
    <updated>2023-11-04T09:41:02.036Z</updated>
    
    <content type="html"><![CDATA[<p>近些月来，虽然国内的武汉肺炎疫情得到了基本控制，但是这种控制是通过强硬封城实现的。在封城期间，正常的生活会被打断，而且封城时间不可预测，恢复时间也无法确定，因此平时在家就需要适当做一些准备，以免遇到困难。</p><span id="more"></span><h2 id="物资准备"><a href="#物资准备" class="headerlink" title="物资准备"></a>物资准备</h2><h3 id="食品"><a href="#食品" class="headerlink" title="食品"></a>食品</h3><p>食品是最关键的事情。一旦封城，家中没有食品，你基本上会饿肚子，严重的话甚至可能会饿死，而且对于外面执行封城的人来说，你死了，只是少了个病原体而已，对他们只有好处，没有坏处，所以根本不会去关心你的死活。</p><p>尽管如此，大量囤积食品也是不科学的，因为食品会过期变质。所以要考虑合理配置食品，既能保证封城时不会缺少食物，又不会造成浪费。</p><p>家中准备食品时，可以进行“三级储备”，具体为以下三种：</p><ul><li>层级一：保质期短的食物，例如各种蔬菜。因为这类食物保质期不长，所以不要大量购买，只保持一个星期左右的量即可。</li><li>层级二：保质期稍长的食物，例如肉类、鸡蛋，可保持两星期至一个月的量。</li><li>层级三：保质期很长的食物，例如方便面、罐头、压缩饼干。这些食物也要保持半个月左右的量。</li></ul><p>至于饮用水，因为自来水烧开以后也是能喝的，所以能烧水的水壶当然是必需品，另外可以适当准备桶装水，但数量不必太多。</p><p>做三级储备还要注意三点：</p><ol><li>要注意各种食品的保质期和储存方法，以免还没开始吃就放坏了。</li><li>要进行动态更新，也就是平时要主动吃掉一些放的时间比较长的食品，再补充新的食品。</li><li>要增加食品的多样性，例如方便面和罐头准备不同的种类、口味。一旦真的封城了，连续吃几天方便面，会让你再也不想碰方便面。</li></ol><h3 id="药品"><a href="#药品" class="headerlink" title="药品"></a>药品</h3><p>家中应该预备一个应急药箱，其中包含感冒药、退烧药、拉肚子药、创可贴、红药水（或酒精）等药品，以及体温计等工具。</p><p>如果没有退烧药，应该趁疫情管控比较松的时候，想办法去弄一些，以免因为得了普通感冒而被拉去隔离。</p><p>如果有需要定期服用的药品，则要设法提前准备一个月的量，动态更新，以免封城时候买不到药。</p><p>不要指望封城开始之后能买到药或打到120。西安封城的教训告诉我们，真正封城的时候，医院领导更在乎的是自己的乌纱帽，所以即使你马上要死了，医院也会因为你没做核酸检测而拒绝救命。</p><h3 id="生活必需品"><a href="#生活必需品" class="headerlink" title="生活必需品"></a>生活必需品</h3><p>除了食品药品，生活必需品也应该有备用的份儿。建议每一种用品都多买一套，例如厕所的香皂、肥皂、洗发水、卫生纸，厨房的盐、酱油、醋、洗洁精等，女性的卫生巾，还有通用的塑料袋，等等。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="关于“保供”"><a href="#关于“保供”" class="headerlink" title="关于“保供”"></a>关于“保供”</h3><p>有些地方在封城时，会提供一些“保供通道”，说封城期间可以去这些商家购买生活物品。但是，一旦真正封城，我们不能指望真的从这些渠道买到东西，必须平时就做好准备。</p><p>正常的状态下，多数人不需要集中地采购物资，需要时可以去楼下小卖店，可以叫外卖，可以网购快递配送，不会产生集中的购物需求，但是一旦封城，这些分散的渠道都会被关闭，而且不少人要囤积物资，整个城市的需求都会集中到那么几家保供单位，结果你会发现所有有用的物资都会被抢光，连下单的机会都没有，更别说及时配送了。</p><p>基于同样的原因，封城期间，外卖、快递和各种配送也会被迫中断，因此不能指望外卖来维持生活。</p><h3 id="邻里互助"><a href="#邻里互助" class="headerlink" title="邻里互助"></a>邻里互助</h3><p>平时要留意所在的小区是否有业主群。封城之后，有些人可能会有多余物资，或者在业主群，利用自己的渠道来售卖物资。尽管价格可能会贵些，总比没有强。</p><h3 id="小道消息"><a href="#小道消息" class="headerlink" title="小道消息"></a>小道消息</h3><p>封城之前，业主群或各种地方会出现小道消息，甚至出现抢购潮，遇到这种情况要抓紧进行准备。</p><p>注意官方“辟谣”的内容。实践证明，被官方认证的“谣言”经常是领先的预言，因此既不要轻信官方消息，也不要无视“谣言”和小道消息。</p><h3 id="个人技能"><a href="#个人技能" class="headerlink" title="个人技能"></a>个人技能</h3><p>很明显，如果你到现在还不会做饭，应该尽快学会如何做饭。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;近些月来，虽然国内的武汉肺炎疫情得到了基本控制，但是这种控制是通过强硬封城实现的。在封城期间，正常的生活会被打断，而且封城时间不可预测，恢复时间也无法确定，因此平时在家就需要适当做一些准备，以免遇到困难。&lt;/p&gt;</summary>
    
    
    
    <category term="一点人生的经验" scheme="https://plusnan.me/categories/%E4%B8%80%E7%82%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="疫情" scheme="https://plusnan.me/tags/%E7%96%AB%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>浅谈社招招聘（四）：面试的安排</title>
    <link href="https://plusnan.me/2021/05/12/interview/"/>
    <id>https://plusnan.me/2021/05/12/interview/</id>
    <published>2021-05-11T16:00:00.000Z</published>
    <updated>2023-10-27T04:28:09.348Z</updated>
    
    <content type="html"><![CDATA[<p>前文谈到了笔试，本文继续谈一谈面试的经验。</p><span id="more"></span><h2 id="面试的目的"><a href="#面试的目的" class="headerlink" title="面试的目的"></a>面试的目的</h2><p>面试是了解一个人的重要途径。通过面试过程的言谈举止，可以大体了解到应聘者性格、思维，也能从应聘者反应当中看出他对技术与非技术问题的理解情况。因此招聘可以没有笔试，但无论是现场面试，还是远程面试，招聘一定要安排面试。</p><p>有些公司规模较大，会安排两轮或多轮面试。这种情况下，每轮面试通常会由不同的部门主导，或者带有不同的目的，例如第一轮由人事部门主导，考察基本情况与基本能力。第二轮由具体开发部门主导，考察具体的技术能力，能否与开发团队有效配合，甚至讨论薪资待遇，等等。</p><h2 id="面试问题设计"><a href="#面试问题设计" class="headerlink" title="面试问题设计"></a>面试问题设计</h2><p>设计面试问题时，要考虑自己面试的目的：</p><ul><li>假如团队已经成型，只需要一些按命令干活的人，那么面试问题可以围绕团队现有技术路线展开，考察应聘者是否掌握相应的工具，以及能否理解你的命令。</li><li>假如业务发展，需要做一些新技术的尝试，那么面试问题就不应局限于某个框架的用法，而是考察应聘者是否理解框架深层次的东西，以及思维能力如何。</li><li>假如业务发展，需要分拆团队，那么面试问题又需要考察应聘者是否具备一定的管理经验。鉴于本系列文章主要招聘初中级开发人员，本文不再详细讨论如何考察管理能力。</li></ul><h3 id="必问题"><a href="#必问题" class="headerlink" title="必问题"></a>必问题</h3><p>有三个问题是务必要问的，一个是自我介绍，一个是（社招）离职原因，还有一个是面试结束之前，让应聘者反问招聘者。</p><h4 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h4><p>自我介绍是最常用的开场白，可以让招聘者和应聘者共同进入状态。通过应聘者简历和自我介绍，我们可以大概了解他们基本工作经历和语言表达能力。</p><h4 id="离职原因（社招）"><a href="#离职原因（社招）" class="headerlink" title="离职原因（社招）"></a>离职原因（社招）</h4><p>离职原因不光是公司考察员工的问题，其实也是员工考察公司的问题。</p><p>虽然聪明的应聘者往往不会直说上家公司问题，也不会直说想涨工资，但如果他们提出了具体的原因（例如上家工作压力过大，或者通勤太远），招聘者在后面就可以和应聘者共同探讨，判断新的岗位能否满足应聘者，不合适的话就可以尽快结束面试，否则的话，就算勉强发了offer，早晚还是要跳槽的。</p><p>如果碰到多次换工作的，可以进一步问频繁离职的原因，是主观原因还是客观原因，从而判断能否录用。</p><h4 id="你还有什么问题要问吗"><a href="#你还有什么问题要问吗" class="headerlink" title="你还有什么问题要问吗"></a>你还有什么问题要问吗</h4><p>面试结束之前，可以向应聘者抛出这个问题，让他们反问招聘者。通过他们提出的问题，来了解到他们对新工作的关注点，例如薪资待遇、晋升机会等。</p><h3 id="选问题"><a href="#选问题" class="headerlink" title="选问题"></a>选问题</h3><p>面试是随机性很强的事情，而且很多时候也是“随缘”的事情，所以你的问题都可能会变成“选问题”。</p><p>即便如此，招聘者也应当事先准备一个题库，记录自己的关注点、考察点，这样在面试时候才能随机应变，否则的话容易让应聘者困扰。</p><p>在事先准备好题目之后，可以从以下角度来发问，从而从不同角度来考察应聘者：</p><h4 id="直接从题库提问"><a href="#直接从题库提问" class="headerlink" title="直接从题库提问"></a>直接从题库提问</h4><p>如果只是马上招人干活，不需要员工有太多的主观能动性，那么可以考察一些有固定答案的死问题。但是，如果有笔试环节，还是建议把这类问题放到笔试中提问，以免浪费时间。</p><p>另外招聘者需要注意，你知道去网上搜题库，聪明的应聘者当然也知道提前找题库背答案。</p><h4 id="从简历和自我介绍来提问"><a href="#从简历和自我介绍来提问" class="headerlink" title="从简历和自我介绍来提问"></a>从简历和自我介绍来提问</h4><p>可以从简历和应聘者的自我介绍中选取一些点来进行提问，例如：</p><ul><li>你在简历中提到熟练使用MySQL数据库，那么（从题库里找一些跟MySQL有关系的问题）</li><li>你在简历中提到了某某技术问题，你解决的思路如何，具体改了哪些参数，效果如何？</li><li>你在简历中提到搭建某某框架，你用了哪些组件，集成过程中有哪些困难？</li><li>生产系统用户规模多少，并发量多少？</li><li>你的项目规模、工作团队规模？</li><li>你在项目中的角色是什么？</li><li>你项目中XX组件的版本号是多少？</li><li>……</li></ul><p>这样一方面可以判断他的工作经历是否真实，另一方面可以判断他对相关技术或工作的了解程度如何。</p><p>对于技术路线不完全匹配的，例如项目使用React，而应聘者工作经历以Vue为主，提问时最好忽略框架的具体用法，考察原理性的东西。能够掌握原理，说明切换技术路线也不是非常困难的事情。</p><h4 id="结合实际场景提问"><a href="#结合实际场景提问" class="headerlink" title="结合实际场景提问"></a>结合实际场景提问</h4><p>可以结合具体的案例，让应聘者来设计或实现，例如某项目的总体设计，或者<span class="exturl" data-url="aHR0cHM6Ly9wcm9ncmFtLXRoaW5rLmJsb2dzcG90LmNvbS8yMDExLzEyL3ByaW1lLWFsZ29yaXRobS0xLmh0bWw=">计算质数<i class="fa fa-external-link-alt"></i></span>程序。</p><p>对于这类问题，关注点不应是对错，而是考虑问题是否周全，例如项目总体设计，需要考虑业务模块是否合理、能否支撑整个流程，计算质数程序需要考虑对输入输出范围的判断、程序运行性能，等等。</p><h4 id="提问个人看法"><a href="#提问个人看法" class="headerlink" title="提问个人看法"></a>提问个人看法</h4><p>可以做一些关于应聘者个人的开放性提问，例如：</p><ul><li>你在过去工作中遇到的最困难事情是什么，你的解决方案如何？</li><li>你在工作之余，有没有学习或研究什么内容？</li><li>你认为自己过去工作的亮点是什么？</li><li>你希望的职业发展路线是什么？</li><li>你的个人爱好是什么？</li><li>……</li></ul><p>让应聘者分享个人工作经历，从而判断应聘者是否能够融入工作团队。</p><h2 id="面试误区"><a href="#面试误区" class="headerlink" title="面试误区"></a>面试误区</h2><h3 id="十全十美"><a href="#十全十美" class="headerlink" title="十全十美"></a>十全十美</h3><p>“总想找个更好的”，这种心理预期会抬高眼光，使自己更难招到合适的人。</p><p>对于经验不足的面试者，组织面试时，建议设定预期面试次数，例如计划招2个人，那么就安排面试20个人。在这20个人中，前30%左右（6人）不会真正录用，只是用来判断应聘者的平均水平，同时调整自己的心理预期。从第7个人开始，将其与前6人进行比较，只要比前6人强，就将其列入考虑名单，以免最终一个人都招不到。</p><p>另外如果实在感觉应聘者能力一般，但又急着招人干活，那么可以适当降低薪酬待遇，先把这段时间的工作挺过去再说，等以后再招更合适的。</p><h3 id="压力面试"><a href="#压力面试" class="headerlink" title="压力面试"></a>压力面试</h3><p>招聘选择员工的时候，员工也在选择公司。特别是IT这种消耗脑力的创造性劳动，更需要相对轻松的气氛来发挥能力，因此面试时，包括未来共同工作时，应当以互相尊重的态度进行沟通交流。</p><p>因此，除非你的客户都是非常刁钻无理的人，而且未来录用之后要让他去对付这样的人，或者你只是在刷招聘的KPI，根本不想招到人，否则没有必要给应聘者做压力面试，更没必要摆出一种高高在上的态度。</p><h3 id="光让马儿跑，不让马儿吃草"><a href="#光让马儿跑，不让马儿吃草" class="headerlink" title="光让马儿跑，不让马儿吃草"></a>光让马儿跑，不让马儿吃草</h3><p>要想使员工正常工作，工资水平至少要和该城市的行业平均水平持平。如果想让员工积极工作，则要给员工开出高于前一家公司的工资水平，否则即便该员工有责任感，他也可能像职场老油条一样，出工不出力。</p><p>如果无法给出更高水平的工资，但是又想招聘该员工，你还可以结合员工离职原因，和员工简单探讨一下新的工作能否给他带来其他好处，例如通勤时间大幅缩短、有各种补贴、周末不用工作、工作气氛轻松、不需要经常出差，等等。对员工来说，如果新工作既没能涨工资，又没能解决他旧工作的痛点，你就不要指望他过来上班了。</p><h2 id="面试之后"><a href="#面试之后" class="headerlink" title="面试之后"></a>面试之后</h2><p>与笔试相同，应聘者通过面试后，也应当尽快通知应聘者进行后续工作，例如下一轮面试，或者办理入职，否则应聘者就跑了。</p><h2 id="本系列文章"><a href="#本系列文章" class="headerlink" title="本系列文章"></a>本系列文章</h2><ul><li><a href="/2020/08/16/resume-filtering/">作为招聘者，筛选简历的关注点</a></li><li><a href="/2020/08/20/resume-improvement/">来自招聘者的建议——如何优化简历</a></li><li><a href="/2020/08/29/bad-resume/">迷惑简历大赏</a></li><li><a href="/2021/02/12/hiring-test-paper/">笔试的设计</a></li><li><strong>面试的安排</strong></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;前文谈到了笔试，本文继续谈一谈面试的经验。&lt;/p&gt;</summary>
    
    
    
    <category term="一点人生的经验" scheme="https://plusnan.me/categories/%E4%B8%80%E7%82%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="招聘" scheme="https://plusnan.me/tags/%E6%8B%9B%E8%81%98/"/>
    
    <category term="面试" scheme="https://plusnan.me/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>控制团队内部的负面言论</title>
    <link href="https://plusnan.me/2021/04/01/expression-control/"/>
    <id>https://plusnan.me/2021/04/01/expression-control/</id>
    <published>2021-03-31T16:00:00.000Z</published>
    <updated>2023-06-06T00:29:40.356Z</updated>
    
    <content type="html"><![CDATA[<p>在开发团队中，不当的负面言论很容易打击成员的积极性，降低生产力，甚至对团队文化造成不可逆的破坏。因此需要对负面言论进行识别和判断，过滤掉有害言论，调整本质上有益但形式上不恰当的言论。</p><span id="more"></span><h2 id="本文不是……"><a href="#本文不是……" class="headerlink" title="本文不是……"></a>本文不是……</h2><p>本文目标读者主要为软件开发团队的管理者，因此本文不是：</p><ul><li>本文不是介绍（政府）如何言论审查。</li><li>本文不是介绍如何应对（来自用户的）负面舆情。</li></ul><h2 id="负面言论的危害"><a href="#负面言论的危害" class="headerlink" title="负面言论的危害"></a>负面言论的危害</h2><p>没有人喜欢被责骂、被否定，即使是个M（受虐狂），也得是被自己喜欢的异性施虐才能兴奋，所以不要随便对员工讲负面的话。</p><p>负面言论的影响包括以下几个方面：</p><ul><li>员工经常被上级训的话，容易消极怠工，或者“破罐子破摔”。</li><li>员工经常被同级训的话，容易成为团队内的“背锅侠”，从而心灰意冷。</li><li>团队/部门/公司经常被说坏话的话，员工会质疑自己工作的意义，然后选择混日子，“反正好好干活也没用”。如果一半以上的人都开始混日子，这个团队恐怕就没救了。</li></ul><p>不同年龄层的承受能力是不一样的。一般来讲，80后或者年龄更大的员工，可能会因为要养家糊口而选择忍耐一时，但是对于90后甚至未来的00后员工，他们很可能会直接撂挑子走人，“老子不伺候你了”。</p><h2 id="识别与处理负面言论"><a href="#识别与处理负面言论" class="headerlink" title="识别与处理负面言论"></a>识别与处理负面言论</h2><p>管理者要调整自己的心态，通过以下三个思路来处理负面言论：</p><ol><li>将负面语气转变正面语气</li><li>将“背锅”、“追责”转变为“解决/预防问题”</li><li>屏蔽掉不解决问题的言论</li></ol><h3 id="负面语气-→-正面语气"><a href="#负面语气-→-正面语气" class="headerlink" title="负面语气 → 正面语气"></a>负面语气 → 正面语气</h3><p>即使你的本意是为了改善员工工作方式，提升员工个人能力，也不要用否定、反问的语气与同事或下属说话。用微信、钉钉等文字聊天工具时，要更加注意措辞，以免被误认为是责备。例如：</p><ul><li>员工开发了一个功能，却延期了一两天才完成。这时候不要训“你怎么做的这么慢”、“怎么才干完”，而是从两方面入手，一方面是调整任务排期（例如安排加班），尽量抵消延期的影响，另一方面，管理者要帮他分析延期的原因，然后提醒他，“你在xxx方面应该再努力/注意一下”。</li><li>员工开发了一个功能，但是性能很差，而且还有SQL注入问题，这时候不要说“你怎么连这么低级的错误都犯”，而是直接点明问题，让他们“继续优化完善”。</li><li>员工提出了一个idea，但是不符合实际情况，或者实现的代价太大，这时候不要说“你的想法不行”，而是先顺着他的idea，代入到项目中进行分析，逐步推导出“不合适”的结论（如果结论正好相反，也可以考虑采用，然后公开表扬奖励），从而使员工信服。</li><li>员工认为应该按A方案工作，而管理者认为应该按B方案工作，并且经验证明B确实可行而A确实不可行，这时候不要说“你就是不行，就是得听我的”，而是要稍微解释一下，“以我的实践经验，B方案是更加合适的，我们应该先尝试B”。</li></ul><p>说话要给员工留面子，员工做了好事则要给他们挣面子。纯负面的话不讲，批评的话私下讲，表扬的话公开讲。</p><p>不要因为员工做得不好，就把员工的活抢过来亲自去做（除非任务非常紧急），一方面会让员工觉得自己不受信任，尊严受到打击，另一方面会让自己变得很忙很累。这种情况下，还是应该审视他们的工作，哪怕自己做起来效率更高、质量更好，也要把该做的事情指出来，交给员工自己完成改进，实在不行再考虑换人。</p><h3 id="背锅、追责-→-解决、预防问题"><a href="#背锅、追责-→-解决、预防问题" class="headerlink" title="背锅、追责 → 解决、预防问题"></a>背锅、追责 → 解决、预防问题</h3><p>发生事故的时候，不要追问或暗示“是哪个混蛋干的好事”，而是要尽快定位问题、解决问题，先把窟窿堵上再说。</p><p>如果追责，肯定是先追究领导责任，所以领导也应当先背锅，而不是把责任推给下属。就算是下属故意搞破坏，领导责任也只能说是减轻而不是完全消失。如果坚持找个人毛病，以后团队成员做事会变得畏手畏脚，担心惹事生非，与他人沟通也会采取踢皮球的策略，这就是一种无形之中的打击。</p><p>除了不轻易追究个人责任，更重要的还是分析如何预防问题，让同样的问题不再发生，这才是领导应该做的事情。</p><h3 id="屏蔽无意义言论"><a href="#屏蔽无意义言论" class="headerlink" title="屏蔽无意义言论"></a>屏蔽无意义言论</h3><p>什么算是无意义言论呢？光抱怨不努力，光提问题不解决，光制造矛盾不收拾，这样的言论都是无意义言论。</p><p>应该通过适当的管理来屏蔽这类言论，例如：</p><ul><li>管理者应该对经常发牢骚的人提出要求，要么闭嘴好好干活，要么找个没人的地方随便发泄，不要在工作场合影响其他人工作。</li><li>管理者应当要求，无论是谁，如果想否定他人观点、推翻他人工作，那么就必须提出一套可行的解决方案，否则就视为不尊重他人。</li><li>管理者应该私下提醒说闲话的人，不要评论跟本职工作无关的事情，例如公司高层内斗、市场机会丢失、xx领导是傻逼等等。如果是自己听到了，就当作没听见，还能保平安。</li></ul><h2 id="除了处理言论，还应当更进一步"><a href="#除了处理言论，还应当更进一步" class="headerlink" title="除了处理言论，还应当更进一步"></a>除了处理言论，还应当更进一步</h2><p>处理言论是“治标不治本”的方式。为了使团队可持续地走下去，管理者最终还是要从团队文化建设方面下手，建设积极正向的氛围，使成员自发地朝着目标努力，这样负面言论自然而然就少了。</p><p>团队文化建设是一个复杂的问题，本文只挑几个方面进行讨论：</p><h3 id="互相尊重"><a href="#互相尊重" class="headerlink" title="互相尊重"></a>互相尊重</h3><p>在建设团队文化过程中，一个简单而重要的做法是彼此之间互信尊重、坦诚相待，不要用斗争哲学来处事。</p><p>可以不定期分批次地、小范围地、非正式地与员工进行一些交流，交换彼此的看法，增强互信，减少误判。特别是90后甚至即将步入职场的00后年轻员工，斗争哲学容易把他们赶跑，而坦诚相待可以使他们主动靠过来。谁都不用防备谁，工作可以更轻松。</p><h3 id="言而有信"><a href="#言而有信" class="headerlink" title="言而有信"></a>言而有信</h3><p>大家都知道“狼来了”的故事。如果管理者屡次失信，那么大家就不会再相信你了，而且这种信任危机是很难挽救的。</p><p>言而有信就是说到做到，但是，换个角度来想，也可以是“做不到就不说”，不要提出无法兑现的承诺，不要给员工画吃不到的饼。</p><h3 id="适当激励"><a href="#适当激励" class="headerlink" title="适当激励"></a>适当激励</h3><p>激励是促使员工积极工作的有效手段。鉴于激励的复杂性，以及很多公司事实上难以落实物质激励，本文就不再详细讨论了。</p><h2 id="反例"><a href="#反例" class="headerlink" title="反例"></a>反例</h2><p>控制负面言论，不代表不能进行批评，例如员工经常消极工作，领导仍然应该及时“敲打敲打”（为了留面子，可以私下敲打）。如果严重违背原则，甚至违反了法律法规，这时候还是要公开批评，防止更多人走歪路。</p><p>负面言论虽然不适合对员工讲，但是适合自己对自己讲，自我批评，鞭策自己进步。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><span class="exturl" data-url="aHR0cDovL3d3dy5uZXRraWxsZXIuY24vbWFuYWdlbWVudA==">Netkiller管理手札<i class="fa fa-external-link-alt"></i></span></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在开发团队中，不当的负面言论很容易打击成员的积极性，降低生产力，甚至对团队文化造成不可逆的破坏。因此需要对负面言论进行识别和判断，过滤掉有害言论，调整本质上有益但形式上不恰当的言论。&lt;/p&gt;</summary>
    
    
    
    <category term="项目管理" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
    <category term="团队建设" scheme="https://plusnan.me/tags/%E5%9B%A2%E9%98%9F%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>软件工程避坑指南（一）——需求调研</title>
    <link href="https://plusnan.me/2021/03/06/requirement-trap-1/"/>
    <id>https://plusnan.me/2021/03/06/requirement-trap-1/</id>
    <published>2021-03-05T16:00:00.000Z</published>
    <updated>2022-02-15T02:00:15.196Z</updated>
    
    <content type="html"><![CDATA[<p>做软件项目，为了不被甲方拖入无尽的深渊，在初期需求工作上就要稳扎稳打，躲避陷阱。</p><span id="more"></span><h2 id="先做计划再去调研"><a href="#先做计划再去调研" class="headerlink" title="先做计划再去调研"></a>先做计划再去调研</h2><p>调研之前，要了解目标用户的群体类型、组织架构、主要业务职责，确定系统建设需要哪些群体参与，同时在沟通过程中要了解用户的信息化经验。</p><p>需求调研，应该要求用户选择一段相对集中的时间。制定需求调研计划时，应当包含计划调研时间、地点、调研单位/部门、主题等，而且计划要留有一定的灵活性，以便用户协调安排。</p><p>调研时要重点记录用户的组织架构、工作流程、现有信息化系统使用情况、现有业务痛点、工作关注点，以及用户自己提出的有效需求。</p><h2 id="先提方案再做确认"><a href="#先提方案再做确认" class="headerlink" title="先提方案再做确认"></a>先提方案再做确认</h2><p>如果用户信息化经验丰富，能够提出一套实施方案，那么可让业主先梳理系统总体需求、主要功能模块，并且与开发单位进行一次或多次沟通，确定主体框架，然后以此为基础，组织后续需求调研工作。</p><p>对于几乎没有信息化经验的用户，即便去现场进行调研，可能也得不到多少有价值的信息。对于这种情况，可以先按自己的理解，提前制定一套或多套方案，启发用户思路，从而主动引导用户需求。</p><h2 id="现场留证据！"><a href="#现场留证据！" class="headerlink" title="现场留证据！"></a>现场留证据！</h2><p>每一次调研都应当进行记录，保留证据，证明需求工作翔实有效。</p><p>前往调研时，应派人保留现场照片、录音，并用签到表完整记录在场人员（含单位部门、职务、联系方式等）。</p><p>每次调研要立即形成现场记录，记录当次调研工作的主要调研内容，为后续需求分析工作提供有效依据。不要拖到第二天或更长时间以后才整理，否则容易丢三落四。</p><h2 id="打破神话"><a href="#打破神话" class="headerlink" title="打破神话"></a>打破神话</h2><p>对于缺乏信息化经验的用户，对软件工程会有以下几个常见的误解：</p><ul><li>软件系统可以解决一切问题！</li><li>软件开发又不像硬件那样大张旗鼓，根本不需要那么多费用。</li><li>增加某某某功能，不就是加个按钮的事儿吗？</li><li>系统原型都做好了，开发应该很快了吧。</li><li>……</li></ul><p>因此，在与用户交流的时候，既要让他们相信开发人员有能力解决问题，又要向用户讲明实际情况，让用户意识到软件虽然看不见、摸不着，其复杂度不亚于硬件或其他类型的工程。</p><h2 id="不要随意承诺"><a href="#不要随意承诺" class="headerlink" title="不要随意承诺"></a>不要随意承诺</h2><p>在调研期间，不要随意答应用户的需求，哪怕是看起来很容易解决的问题，或者群众意见强烈的问题，也只是先将他们的需求记录下来，回去再对用户提出的需求进行评估，因为其中有可能会涉及到利益问题甚至体制问题，并不能靠软件解决。承诺一件事情，后面却发现做不到，这样会失信于人，而且硬着头皮干，轻则提高无效成本，重则卷入复杂利益关系，解决不了问题还要得罪用户。</p><p>基于同样道理，不要随意答应在系统中预留东西，以免因标准模糊导致后续扯皮。</p><h2 id="不必完全满足用户需求"><a href="#不必完全满足用户需求" class="headerlink" title="不必完全满足用户需求"></a>不必完全满足用户需求</h2><p>如果能当场判断出用户需求不合理，就应当现场积极回应，有理有据地否决用户需求，或要求用户将需求调整至合理范围。例如：</p><ol><li>性价比低（对用户而言作用不大，但开发成本过高）：否决——软件工程是工程，所以也受“项目铁三角”质量、进度、成本三要素制约。</li><li>用户管理方式问题：系统顶多是在现有制度框架下稍作优化，根本问题需要用户自行解决——软件系统是管理方式的体现，所以优化系统之前要先优化管理流程。</li><li>含糊的需求：引导用户将需求具体化，例如提供详细的业务资料，进一步明确用户群体、系统输入、系统输出。如果用户无法提供更详细的信息，则进行否决——软件系统无法实现一个模糊的东西。</li><li>未确定的需求：要求用户尽快确定需求，如果在指定期限内无法确定，系统只能先不实现，后续根据成本选择补充开发或走需求变更流程——软件系统无法实现一个未确定的东西。</li><li>将简单问题复杂化的需求：分析用户的实际痛点，引导用户以解决问题为目标，要求用户做出一些妥协，采用更加合适的方案来解决问题——软件系统的根本目的是解决问题，而不是制造新的问题。</li></ol><p>对于有一定意义，但仍然存在风险的需求，可以要求用户进一步提供支持，例如二次调研、提供指定资料、提供人员参与需求过程等。同时也要让用户意识到，只有用户充分配合开发人员，软件开发人员才能确定系统需求。</p><h2 id="约定好如何变更需求"><a href="#约定好如何变更需求" class="headerlink" title="约定好如何变更需求"></a>约定好如何变更需求</h2><p>没有不变的需求，哪怕你“干一票就走”，也不一定能躲掉用户的需求变更。需求变更控制得不好，后面容易卷入到无限的事务之中，难以脱身。</p><p>为了将需求变更控制在可接受范围内，必须和用户建立一套明确的、规范的需求变更流程，强化需求变更控制，让用户为需求变更承担成本。只要超过特定时间节点（需求评审通过），需求就处于冻结状态，后续的需求变更无论大小，必须走约定的流程，以此让用户意识到，软件工程与其他工程一样，需求变更也会产生成本，影响交付进度和交付质量，而且提出需求变更的节点越晚，变更代价越大，由此产生的费用绝不可能是捞钱骗钱。</p><p>需求变更的管理是一项复杂而细致的工作，后面将进行专题讨论。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;做软件项目，为了不被甲方拖入无尽的深渊，在初期需求工作上就要稳扎稳打，躲避陷阱。&lt;/p&gt;</summary>
    
    
    
    <category term="项目管理" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
    <category term="需求" scheme="https://plusnan.me/tags/%E9%9C%80%E6%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>浅谈社招招聘（四）：笔试的设计</title>
    <link href="https://plusnan.me/2021/02/12/hiring-test-paper/"/>
    <id>https://plusnan.me/2021/02/12/hiring-test-paper/</id>
    <published>2021-02-11T16:00:00.000Z</published>
    <updated>2023-02-05T11:02:05.199Z</updated>
    
    <content type="html"><![CDATA[<p>有些单位在招聘时，会安排一轮笔试。本文谈一谈笔试的经验。</p><span id="more"></span><h1 id="笔试的目的"><a href="#笔试的目的" class="headerlink" title="笔试的目的"></a>笔试的目的</h1><p>笔试最大的特点就是省事，只要事先把题目设计好，让应聘者过来答题就OK，因此适合应聘者比较多的情况。</p><p>笔试应当放在招聘的第一环节，以便“筛掉一大批垃圾”。为了筛掉明显不合适的应聘者，笔试的题目还要有一定的区分度，不然的话，所有人都拿到满意的成绩，笔试就没意义了。</p><p>笔试不能代替面试。笔试只适合考察技术问题，心理素质、团队意识、个人素养等非技术特性是无法通过笔试考查出来的。</p><h1 id="笔试的内容"><a href="#笔试的内容" class="headerlink" title="笔试的内容"></a>笔试的内容</h1><p>笔试题建议分为三部分：送分题、经验题、实战题。</p><h2 id="送分题"><a href="#送分题" class="headerlink" title="送分题"></a>送分题</h2><p>笔试题中，应该包含一些送分题，既是给应聘者一点信心，又能筛掉明显不适合开发工作的人——如果连送分题都答不上来，赶紧回家躺平去吧。</p><p>就像高考数学卷，满分150分，对于冲985、211重点的考生来说，其中100分都是白送分的信心题，必须全部拿到手，剩下50分才是重点大学的入场券，拿得越多越容易进重点。然而高考也要照顾大多数人，如果每道题都是奥林匹克竞赛水平，那就几乎没人能考大学了，即使有能力，一大片答不上的空白也会挫败考生信心。</p><p>送分题，题型可以是简单的选择、填空，内容可以简单到只要学过编程就能答上，最后评卷的时候把没答上的人给PASS掉就行。</p><h2 id="经验题"><a href="#经验题" class="headerlink" title="经验题"></a>经验题</h2><p>前面提到了“送分题”，那么“经验题”难度就要比送分题高一些了。这部分问题建议设计成问答题，挑取开发中常见的一些技术问题，以考察应聘者是否具备一定的开发经验。</p><p>例如MySQL并发事务容易出现问题，所以可以考察应聘者对脏读、不可重复读、幻读的理解，并要求应聘者回答如何规避。</p><p>这部分问题既可以是有标准答案的死问题，也可以是开放的活问题。建议少出一些死问题，多出一些活问题，以免某些应聘者靠背答案来蒙混过关。</p><h2 id="实战题"><a href="#实战题" class="headerlink" title="实战题"></a>实战题</h2><p>最后要设计一两道实战题。可以以公司业务场景为基础，做一些设计或编码工作，重点考察应聘者是否逻辑清晰、思维缜密。同时可以在题目中设置一点陷阱，考察应聘者是否细心。</p><p>以信息管理系统为例，考虑一个特定的业务场景，要求应聘者设计表结构，至少可以考察到以下几个方面：</p><ul><li>是否设计了主键？</li><li>表和字段的命名习惯如何，是汉语拼音，还是英文单词？</li><li>数据类型是否规范？长度和类型是否够用？是否用NOT NULL？</li><li>（MySQL）是否考虑并发读写的问题？</li><li>是否考虑了业务变化的需要？</li></ul><p>通过一个题，既考察了技术水平，也在一定程度上考察了非技术水平。</p><p>出题者还可以在此基础上扩展，例如要求应聘者写SQL语句，或者提出性能要求，这样就能进一步了解他对SQL的熟悉程度。</p><p>再举一个案例，要求应聘者往一个树形结构中插入一个节点，可以考察到以下几个方面：</p><ul><li>能否正确地实现功能？</li><li>代码是否简洁明了？</li><li>代码格式（命名、缩进等）是否规范？</li><li>是否有防御性编程意识，例如检查边界、空指针等低级错误？</li></ul><h1 id="笔试的设计"><a href="#笔试的设计" class="headerlink" title="笔试的设计"></a>笔试的设计</h1><p>考察技术能力，当然不应当局限于答案的对错。在设计题目时，除了标准答案，建议注明：</p><ol><li>每道题的考察目的，这样在整张试卷设计完成后，你就能知道考察要点是否有所遗漏。</li><li>加分点/扣分点：虽然题目没有标准答案，或者有标准答案而应聘者答案错误，但是有些要点正确，例如他考虑了有效性校验。可以将这类加分点或扣分点也明确标示出来。</li></ol><p>题目范围应当考虑公司工作实际需要。例如公司是做信息系统的，用不到复杂算法，那么别考编程竞赛那种高难的算法题；如果公司是做图像识别的，可以出一些数学方面的问题，而且要求应聘者禁止靠某些工具类来偷懒。</p><p>对技术能力的考察，应当把重点放在基本功和基本素养上面，例如问题分析能力、编程语言或框架基本原理，而非某一种高级用法、复杂逻辑。像某些特别具体的API，如果连你自己平时都要到百度查用法，拿出来考应试者显然是不合适的。</p><h1 id="笔试之后"><a href="#笔试之后" class="headerlink" title="笔试之后"></a>笔试之后</h1><p>应聘者通过笔试后，应当尽快向应聘者进行反馈。如果应聘者水平OK，建议两三天之内就通知应聘者参加面试，笔试面试间隔不超过一周，否则应聘者就跑了。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><span class="exturl" data-url="aHR0cHM6Ly9wcm9ncmFtLXRoaW5rLmJsb2dzcG90LmNvbS8yMDExLzAzL2hpcmluZy1leHBlcmllbmNlLTAuaHRtbA==">俺的招聘经验 - 编程随想的博客<i class="fa fa-external-link-alt"></i></span></li></ul><h1 id="本系列文章"><a href="#本系列文章" class="headerlink" title="本系列文章"></a>本系列文章</h1><ul><li><a href="/2020/08/16/resume-filtering/">作为招聘者，筛选简历的关注点</a></li><li><a href="/2020/08/20/resume-improvement/">来自招聘者的建议——如何优化简历</a></li><li><a href="/2020/08/29/bad-resume/">迷惑简历大赏</a></li><li><strong>笔试的设计</strong></li><li><a href="/2021/05/12/interview/">面试的安排</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;有些单位在招聘时，会安排一轮笔试。本文谈一谈笔试的经验。&lt;/p&gt;</summary>
    
    
    
    <category term="一点人生的经验" scheme="https://plusnan.me/categories/%E4%B8%80%E7%82%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="招聘" scheme="https://plusnan.me/tags/%E6%8B%9B%E8%81%98/"/>
    
    <category term="笔试" scheme="https://plusnan.me/tags/%E7%AC%94%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>在GitLab CI中构建GitBook的各种坑</title>
    <link href="https://plusnan.me/2021/01/25/gitbook-on-gitlab/"/>
    <id>https://plusnan.me/2021/01/25/gitbook-on-gitlab/</id>
    <published>2021-01-24T16:00:00.000Z</published>
    <updated>2022-01-11T02:01:56.289Z</updated>
    
    <content type="html"><![CDATA[<p>GitBook是一个好用的文档工具，然而他们已经转型在线敛财，留下的开源的框架已经弃坑。我们用GitLab CI（或其他自动构建系统）构建，则会有很多的坑。本文梳理了会遇到的各种坑。</p><span id="more"></span><h1 id="GitBook的各种坑"><a href="#GitBook的各种坑" class="headerlink" title="GitBook的各种坑"></a>GitBook的各种坑</h1><h2 id="卡在-Installing-GitBook-3-2-3"><a href="#卡在-Installing-GitBook-3-2-3" class="headerlink" title="卡在 Installing GitBook 3.2.3"></a>卡在 Installing GitBook 3.2.3</h2><p>这个是国内网络问题，直接换用淘宝源即可：</p><pre class="line-numbers language-none"><code class="language-none">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通常情况下，这样是不够过瘾的，所以要换得全一些，免得再踩坑：</p><pre class="line-numbers language-none"><code class="language-none">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.orgnpm config set disturl https:&#x2F;&#x2F;npm.taobao.org&#x2F;distnpm config set sass_binary_site https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;node-sassnpm config set electron_mirror https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;electron&#x2F;npm config set puppeteer_download_host https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrorsnpm config set chromedriver_cdnurl https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;chromedrivernpm config set operadriver_cdnurl https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;operadrivernpm config set phantomjs_cdnurl https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;phantomjsnpm config set selenium_cdnurl https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;seleniumnpm config set node_inspector_cdnurl https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;node-inspectornpm config set node_sqlite3_binary_host_mirror https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrorsyarn config set registry https:&#x2F;&#x2F;registry.npm.taobao.orgyarn config set disturl https:&#x2F;&#x2F;npm.taobao.org&#x2F;distyarn config set sass_binary_site https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;node-sassyarn config set electron_mirror https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;electron&#x2F;yarn config set puppeteer_download_host https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrorsyarn config set chromedriver_cdnurl https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;chromedriveryarn config set operadriver_cdnurl https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;operadriveryarn config set phantomjs_cdnurl https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;phantomjsyarn config set selenium_cdnurl https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;seleniumyarn config set node_inspector_cdnurl https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;node-inspectoryarn config set node_sqlite3_binary_host_mirror https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是，到了CI服务器上，这样有可能还会卡Installing，所以我们可以考虑提前手工把这个3.2.3装好（位于<code>~/.gitbook/versions/3.2.3</code>）：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> -p ~/.gitbook/versions<span class="token builtin class-name">cd</span> ~/.gitbook/versions<span class="token function">npm</span> pack gitbook@3.2.3<span class="token function">tar</span> -xvf gitbook-3.2.3.tgz<span class="token function">mv</span> package <span class="token number">3.2</span>.3<span class="token builtin class-name">cd</span> <span class="token number">3.2</span>.3<span class="token function">npm</span> i<span class="token comment"># 防止踩后文提到的一个坑</span>npx <span class="token function">npm</span> i cpr@3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安好之后把它打包上传到服务器里面，然后我们需要设法让CI每次构建之前都能找到这个文件。</p><p>假设GitLab CI Runner基于Docker，那么有两种处理方法：</p><ul><li>一种是把3.2.3文件也传到代码里，然后在构建步骤中增加类似<code>mkdir -p ~/.gitbook/versions; ln 3.2.3 ~/.gitbook/versions</code>的操作。但是大家都知道光处理一个node_modules就会耗费大量时间，所以除非没权限操作服务器，否则不太推荐。</li><li>如果有服务器权限的话，最简单的办法就是设置一个Volume，把3.2.3所有文件提前装好放到某个位置（例如<code>/data/gitlab-runner-gitbook-cache/versions/3.2.3</code>），然后修改Runner的config.toml：<pre class="line-numbers language-toml" data-language="toml"><code class="language-toml"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">runners</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">[</span><span class="token table class-name">runners.docker</span><span class="token punctuation">]</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token key property">volumes</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token string">"/data/gitlab-runner-gitbook-cache:/root/.gitbook"</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>说到config.toml，顺便提一下，<code>/root/.npm</code>和<code>/cache</code>也可以顺便在服务器本机缓存一下，避免每次创建容器时都重新下载，从而提高构建速度。</p><h2 id="报错，TypeError-cb-apply-is-not-a-function"><a href="#报错，TypeError-cb-apply-is-not-a-function" class="headerlink" title="报错，TypeError: cb.apply is not a function"></a>报错，TypeError: cb.apply is not a function</h2><p>报错全文：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;gitbook-cli&#x2F;node_modules&#x2F;npm&#x2F;node_modules&#x2F;graceful-fs&#x2F;polyfills.js:287      if (cb) cb.apply(this, arguments)                 ^TypeError: cb.apply is not a function    at &#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;gitbook-cli&#x2F;node_modules&#x2F;npm&#x2F;node_modules&#x2F;graceful-fs&#x2F;polyfills.js:287:18    at FSReqCallback.oncomplete (node:fs:194:5)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解决方法有两种：</p><ul><li>将Node.js降级为版本10.x</li><li>找到报错的源头，即polyfills.js文件的第287行，将这个函数直接改成<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">statFix</span> <span class="token punctuation">(</span><span class="token parameter">orig</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> orig<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><p>鉴于我们要通过CI来构建，推荐使用第一种解决方法。</p><h2 id="莫名其妙地找不到文件"><a href="#莫名其妙地找不到文件" class="headerlink" title="莫名其妙地找不到文件"></a>莫名其妙地找不到文件</h2><p>错误信息：</p><pre class="line-numbers language-none"><code class="language-none">Error: ENOENT: no such file or directory, stat &#39;&#x2F;builds&#x2F;xxxxx&#x2F;xxxxx&#x2F;_book&#x2F;gitbook&#x2F;gitbook-plugin-xxx&#x2F;xxx.js&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你多试几次，可能会发现每次报错的文件都不一样。</p><p>如果GitBook 3.2.3是手工安装的，需要进到安装目录里，补一条命令，例如：</p><pre class="line-numbers language-none"><code class="language-none">cd ~&#x2F;.gitbook&#x2F;versions&#x2F;3.2.3npx npm i cpr@3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>自动安装（如果你不嫌卡Installing GitBook 3.2.3）则需要提前<code>gitbook fetch 3.2.3</code>，然后在正式build之前执行上面两行命令（当然建议写成一行<code>(cd ~/.gitbook/versions/3.2.3 &amp;&amp; npx npm i cpr@3)</code>，命令两端有括号）。</p><h2 id="左侧的文档目录未更新"><a href="#左侧的文档目录未更新" class="headerlink" title="左侧的文档目录未更新"></a>左侧的文档目录未更新</h2><p>是不是使用summary插件自动生成目录了？如果是，每次build两遍就好了。</p><h1 id="参考操作"><a href="#参考操作" class="headerlink" title="参考操作"></a>参考操作</h1><h2 id="手工安装GitBook-3-2-3"><a href="#手工安装GitBook-3-2-3" class="headerlink" title="手工安装GitBook 3.2.3"></a>手工安装GitBook 3.2.3</h2><p>参见前文。</p><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><p>仅列举部分内容：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token comment">// ...</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"serve"</span><span class="token operator">:</span> <span class="token string">"gitbook serve"</span><span class="token punctuation">,</span>    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"gitbook build"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"gitbook-cli"</span><span class="token operator">:</span> <span class="token string">"^2.3.2"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-editlink"</span><span class="token operator">:</span> <span class="token string">"^1.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-prism"</span><span class="token operator">:</span> <span class="token string">"^2.4.0"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-search-pro"</span><span class="token operator">:</span> <span class="token string">"^2.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-summary"</span><span class="token operator">:</span> <span class="token string">"^1.1.0"</span><span class="token punctuation">,</span>    <span class="token comment">// 其他插件...</span>    <span class="token comment">// 唯独不能放 gitbook，否则会报错</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="gitlab-ci-yml"><a href="#gitlab-ci-yml" class="headerlink" title=".gitlab-ci.yml"></a>.gitlab-ci.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">stages</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> build  <span class="token punctuation">-</span> deploy<span class="token key atrule">variables</span><span class="token punctuation">:</span>  <span class="token key atrule">PROD_DEPLOY_USER</span><span class="token punctuation">:</span> root  <span class="token key atrule">PROD_DEPLOY_HOST</span><span class="token punctuation">:</span> x.x.x.x  <span class="token key atrule">PROD_DEPLOY_PORT</span><span class="token punctuation">:</span> <span class="token number">22</span>  <span class="token key atrule">PROD_DEPLOY_PATH</span><span class="token punctuation">:</span> /var/www/html  <span class="token comment"># PROD_DEPLOY_SSH 在 GitLab 的 Settings -> CI/CD -> Variables 中配置</span><span class="token key atrule">build</span><span class="token punctuation">:</span>  <span class="token key atrule">stage</span><span class="token punctuation">:</span> build  <span class="token key atrule">image</span><span class="token punctuation">:</span> node<span class="token punctuation">:</span><span class="token number">10</span>      <span class="token comment"># 此处要使用版本10</span>  <span class="token key atrule">script</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> npm config set registry https<span class="token punctuation">:</span>//registry.npm.taobao.org    <span class="token punctuation">-</span> npm config set disturl https<span class="token punctuation">:</span>//npm.taobao.org/dist    <span class="token punctuation">-</span> npm i    <span class="token punctuation">-</span> npm run build    <span class="token comment"># 使用summary插件生成目录的话，需要build两遍才能显示新版的目录</span>    <span class="token punctuation">-</span> npm run build  <span class="token key atrule">cache</span><span class="token punctuation">:</span>    <span class="token key atrule">paths</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> node_modules/  <span class="token key atrule">artifacts</span><span class="token punctuation">:</span>    <span class="token key atrule">paths</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> _book    <span class="token key atrule">expire_in</span><span class="token punctuation">:</span> 1 week  <span class="token key atrule">only</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> master<span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">stage</span><span class="token punctuation">:</span> deploy  <span class="token key atrule">image</span><span class="token punctuation">:</span> sebble/deploy  <span class="token key atrule">script</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> mkdir <span class="token punctuation">-</span>p ~/.ssh    <span class="token punctuation">-</span> echo "$PROD_DEPLOY_SSH" <span class="token punctuation">></span><span class="token punctuation">></span> ~/.ssh/id_dsa    <span class="token punctuation">-</span> chmod 600 ~/.ssh/id_dsa    <span class="token punctuation">-</span> echo <span class="token punctuation">-</span>e "Host <span class="token important">*\n\tStrictHostKeyChecking</span> no\n\n" <span class="token punctuation">></span> ~/.ssh/config    <span class="token punctuation">-</span> rsync <span class="token punctuation">-</span>rav <span class="token punctuation">-</span>e "ssh <span class="token punctuation">-</span>p $PROD_DEPLOY_PORT" _book/ "$PROD_DEPLOY_USER"@"$PROD_DEPLOY_HOST"<span class="token punctuation">:</span><span class="token string">"$PROD_DEPLOY_PATH"</span>  <span class="token key atrule">only</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0dpdGJvb2tJTy9naXRib29rLWNsaS9pc3N1ZXMvNTU=">https://github.com/GitbookIO/gitbook-cli/issues/55<i class="fa fa-external-link-alt"></i></span></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;GitBook是一个好用的文档工具，然而他们已经转型在线敛财，留下的开源的框架已经弃坑。我们用GitLab CI（或其他自动构建系统）构建，则会有很多的坑。本文梳理了会遇到的各种坑。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="GitLab" scheme="https://plusnan.me/tags/GitLab/"/>
    
    <category term="GitBook" scheme="https://plusnan.me/tags/GitBook/"/>
    
  </entry>
  
  <entry>
    <title>买房避坑指南（六）：不要买公寓！</title>
    <link href="https://plusnan.me/2020/12/28/buy-house-6/"/>
    <id>https://plusnan.me/2020/12/28/buy-house-6/</id>
    <published>2020-12-27T16:00:00.000Z</published>
    <updated>2023-06-05T03:30:53.751Z</updated>
    
    <content type="html"><![CDATA[<p>有些人实在没钱，凑住宅钱费劲，看到公寓价格相对便宜，想买套公寓过渡。有些女性因为属于不婚族，或者害怕被男方抛弃，也想出于防御目的买一套公寓备用。虽然想法很好，但是本文仍然要提醒，除非你真的是地产行家或投资行家，十分清楚自己要做什么事情，否则无论如何也不要买公寓！</p><span id="more"></span><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>本文所提“公寓”，指用地性质为“商务用地”、产权通常为四十年、房产证上明确为“公寓”二字的商务住宅。</p><p>另外还有一种“公寓”叫做“居住公寓”，那并不是本文所提到的“公寓”，只是采光很差的普通住宅，除此之外都一样。这种房子不在本文讨论范围内。</p><h1 id="公寓的坑"><a href="#公寓的坑" class="headerlink" title="公寓的坑"></a>公寓的坑</h1><p>公寓有很多坑，每一个坑都是性质恶劣的坑，所以无论置业顾问说得再动听，你也不要头脑一热就去买公寓。</p><h2 id="产权问题"><a href="#产权问题" class="headerlink" title="产权问题"></a>产权问题</h2><p>土地有产权期限。虽然到期之后政府不会直接把你轰出去，但是该办的手续还是要办的。住宅可以自动续期，但公寓作为商业用地，理论上讲需要重新交齐土地出让金，到时候这笔费用可能要由业主来承担。而且，产权期限从开发商拿地之后开始起算，不是从交房后开始起算，有些开发商拿到地之后捂着不开发，这样四十年产权已经白白用掉很多年了。</p><p>房产证上写着“公寓”二字是无法落户的（备注：有些城市能落）。独居的话无所谓，但是如果有孩子，孩子会因为没有户口而不能上学！有人说能上学？那应该是有人通过各种合法与非法手段争取来的，不像普通住宅一样有了户口就能轻松办理。</p><h2 id="贷款困难"><a href="#贷款困难" class="headerlink" title="贷款困难"></a>贷款困难</h2><p>公寓的性质是商业，因此贷款要比普通住宅困难。例如：</p><ul><li>不能使用公积金贷款。</li><li>首付比例比普通住宅高，撑死也只能贷到五成房款。</li><li>贷款需要在10年内还清。</li></ul><p>尽管公寓总价比住宅小得多，但是背上了贷款，会对你再次买住宅贷款造成不利影响。如果愿意全款买倒是无所谓。</p><h2 id="法律风险"><a href="#法律风险" class="headerlink" title="法律风险"></a>法律风险</h2><p>不要小瞧法律风险！如果没有合法的手续，一旦发生纠纷，打官司很难打赢，找政府他们也不会替你说话，弄不好还会把你当成维稳对象。</p><p>商住公寓毕竟还是一个合法的东西，虽然有各种坑，至少还能办得出房产证。如果是“商改住”，即商业用地改为住宅（或者按商业住宅建设，等政府验收完成后再偷偷改成公寓），这本身就有很大法律风险，容易连房产证都办不出来。</p><p>有些城市的限购限贷政策中，商住公寓也会被计入限购限贷数量当中。有置换需求的务必要留意有关政策，而且建议靠租房而非买房来过渡。</p><h2 id="被套牢"><a href="#被套牢" class="headerlink" title="被套牢"></a>被套牢</h2><p>随便上网上搜索一下，就可以发现投资公寓的收益实在不好。</p><p>公寓收益方式主要分为出租和转卖两种。</p><p>先说出租。如果公寓位于商业繁华的地带，交通便利，居住需求极高，你还能靠收租金来维持。如果公寓位于郊区，交通不便，周围荒无人烟，或者周围住宅密集，甚至藏着一个城中村，你会发现连出租都租不出去。一边要及时还房贷，另一边却收不到租金，这种感觉会非常痛苦。</p><p>即便公寓能勉强租出去，你也不能指望租客的素质有多高。租公寓的租客平均素质更低，如果经常损坏房屋设施的话，每次转手就容易产生额外维修费用。</p><p>再说转卖。如果想靠低买高卖来赚差价，会面临两个严重的问题：</p><ul><li>卖不掉：假如差不多攒够钱，急需把公寓换成现金时，你会发现你这套公寓换不出钱。要知道有些城市二手住宅都不一定好卖，甚至得赔钱卖，缺点更多的公寓也不太有理由比普通住宅好卖。</li><li>转手费用高：即便能找到接盘侠，因为公寓是商业性质，转手时要产生较高的交易税。通过中介买卖，你还要额外再付中介费。就算房子涨价，收益很容易就被这些费用给冲没了，更何况公寓是要持续贬值的。</li></ul><p>所以把钱放到银行存定期也比直接扔给公寓靠谱，虽然放着会贬值，需要取钱的时候也会损失些利息，但至少能随时取出来，不像公寓把钱扔进去就套牢了。</p><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><p>相比于以上各项，下面都是些小问题了：</p><ul><li>户型问题：不通透。</li><li>房屋质量问题：例如装修质量不好，Loft高度不够等。住宅有的维权，公寓也可以有。</li><li>挤：当你早上上班的时候，你就会感受到，你不光要在公司的写字楼挤电梯，刚出家门就要跟着一大群人挤电梯，一万人挤那三四部电梯，你甚至可能会感觉爬楼梯（就是趴在地上那个爬）都比坐电梯快。</li><li>贵：公寓水电费按商业水电收费，价格是普通水电的两三倍。</li><li>没有燃气：有燃气？那应该用不正当手段装上去的，给消防部门打电话举报一下就会被拆了。</li><li>如果物业管理差劲，你还会发现，碰上个扰民的邻居更让人痛苦。如果是美容美发还好，要是KTV、会所、酒店，或者是XXOO的场所……</li></ul><h1 id="如果还是想买一套？"><a href="#如果还是想买一套？" class="headerlink" title="如果还是想买一套？"></a>如果还是想买一套？</h1><p>关于公寓的坑，本文只是简单总结，写得很粗，如果还是想购买，请找一些写得更深入的分析文章来决策。</p><p>对于缺钱的人来说，公寓不能买，但是可以租别人的公寓。这样不仅少了大量损失，还能帮房东少赔点钱（注意租公寓往往比合租住宅贵），一举两得。不过租房之前还是建议多跑一跑，也许找合租或者老破小整租更省钱。</p><p>对于可能会进入长期单身状态的人来说，如果你还没到被轰走的时候，请把买公寓的钱放到银行里，实在到了被赶出家门的时候可以先临时找个地方租，然后再好好规划一下人生，仔细了解公寓的坑之后再掏钱出来买公寓。</p><p>对于不差钱的人来说，公寓可以买来出租，但需要仔细选择地段、产品，精细地计算房租，否则很容易得不偿失。另外也可以找一套好一点的公寓拿来当落脚点，只不过这种公寓价格通常是按一套几千万来算，普通人根本玩不起。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ul><li><a href="/2020/11/22/buy-house-0/">总述</a></li><li><a href="/2020/11/29/buy-house-1/">购房资格</a></li><li><a href="/2020/12/05/buy-house-2/">地产项目情况</a></li><li><a href="/2020/12/12/buy-house-3/">项目周围环境</a></li><li><a href="/2020/12/19/buy-house-4/">售楼处里的套路</a></li><li><a href="/2020/12/26/buy-house-5">关于合同</a></li><li><strong>不要买公寓！</strong></li><li><a href="/2021/07/12/buy-house-7/">房贷贷多少合适</a></li><li><a href="/2021/08/15/buy-house-8/">要不要买车位</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;有些人实在没钱，凑住宅钱费劲，看到公寓价格相对便宜，想买套公寓过渡。有些女性因为属于不婚族，或者害怕被男方抛弃，也想出于防御目的买一套公寓备用。虽然想法很好，但是本文仍然要提醒，除非你真的是地产行家或投资行家，十分清楚自己要做什么事情，否则无论如何也不要买公寓！&lt;/p&gt;</summary>
    
    
    
    <category term="楼市" scheme="https://plusnan.me/categories/%E6%A5%BC%E5%B8%82/"/>
    
    
    <category term="买房" scheme="https://plusnan.me/tags/%E4%B9%B0%E6%88%BF/"/>
    
  </entry>
  
  <entry>
    <title>买房避坑指南（五）：关于合同</title>
    <link href="https://plusnan.me/2020/12/26/buy-house-5/"/>
    <id>https://plusnan.me/2020/12/26/buy-house-5/</id>
    <published>2020-12-25T16:00:00.000Z</published>
    <updated>2023-06-05T03:30:55.856Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要列举合同中一些坑。虽然一般情况下购买者很难在短时间内把整个合同条文都理解清楚，而且即便知道合同内容不合理，也无法与开发商就合同内容进行谈判，但我们仍然有必要清楚我们将来会如何被开发商坑骗。</p><span id="more"></span><h1 id="合同效力"><a href="#合同效力" class="headerlink" title="合同效力"></a>合同效力</h1><p>买房当然要签合同，而且叫做《商品房买卖合同》。如果叫做认购书或其他材料（例如xx协议），那是没有法律效力的！</p><p>拿到合同，别看都不看就立刻签字。一旦在合同上签字画押，后续打官司就要以此为准。就算置业顾问催得再紧，也要先把合同条款研究明白再签字，虽然研究明白不一定能占便宜，但研究不明白将来发生纠纷你肯定吃亏。</p><p>没有白纸黑字地写到合同上面的东西，例如广告宣传，或者置业顾问口头约定，那一定都是无效的，哪怕事先拍照录音也不算数。合同没写清楚，一旦发生纠纷，只要开发商轻描淡写地说句“那是他个人行为，况且这个人早已跑路”，法律责任就可以甩得干干净净。</p><p>但是有些情况下合同本身也会无效。例如在五证不全（五证指《建设用地规划许可证》、《建设工程规划许可证》、《建筑工程施工许可证》、《国有土地使用证》和《商品房预售（或销售）许可证》）情况下买房，签订的合同是没有法律效力的，打官司也不会赢。</p><p>有些开发商会要求购房者签订阴阳合同以提高优惠、规避政策限制，也就是签两份不同的合同，其中一份是应付政府用的、形式上的合同，另一份是反映真实情况的合同。需要注意的是，在发生纠纷时，法院会根据实际情况判断合同效力，不能保证一定按实际合同进行判决，所以尽量别签阴阳合同。</p><h1 id="合同内容"><a href="#合同内容" class="headerlink" title="合同内容"></a>合同内容</h1><p>合同正文通常采用政府规定的模板编写，需要政府审核，不能随意更改，但开发商通常会让购房者签订更厚的补充协议，而且补充协议的内容是可以随意制定的。合同正文通常不会有问题，但开发商可以在补充协议中规避自己的责任，甚至将合同正文中相对公平的内容给推翻掉，因此补充协议内容不仅不能忽视，还要专门花些时间去阅读理解。</p><p>在合同正文和补充条款中，应特别留意以下内容：</p><h2 id="支付方式、期限、违约责任"><a href="#支付方式、期限、违约责任" class="headerlink" title="支付方式、期限、违约责任"></a>支付方式、期限、违约责任</h2><ul><li>如何支付？</li><li>总共多少钱？需要支付多少钱？（注意：通常情况下你已经交过定金）</li><li>支付期限是几月几号？</li><li>如果因为个人原因，未能及时批出贷款，或者被拒绝审批贷款，后果如何？能否更换支付方式？能否延期？延期违约金如何？折算成人民币是多少钱？</li></ul><p>计算违约金时要核实好是不是以全款价格为基准。</p><h2 id="交房时间与延期责任"><a href="#交房时间与延期责任" class="headerlink" title="交房时间与延期责任"></a>交房时间与延期责任</h2><ul><li>几年几月几号交房？（注意必须是准确的年月日）</li><li>交房时，完成的是“专项验收合格”，还是“竣工验收合格”、“综合验收合格”？<ul><li>“专项验收合格”、“竣工验收合格”只是“楼盖好了”，“综合验收合格”才是“小区建设好了”。</li><li>只有综合验收合格，才能开始办房产证。</li></ul></li><li>如未如期交房，开发商需要承担什么责任？每天应该赔偿多少钱？折算成人民币是多少钱？是以现金还是以其他形式补偿？</li><li>如果开发商承担责任，有没有免责期（延期多少天之后开始赔偿），或者多长时间后不再赔偿损失？（正常情况下都不应该存在）</li></ul><p>务必用计算器计算一下违约金的金额。例如万分之一还算可以，但如果写成万分之零点一，那点赔偿连住宾馆都不够。</p><h2 id="拒绝收房"><a href="#拒绝收房" class="headerlink" title="拒绝收房"></a>拒绝收房</h2><ul><li>如果交房时手续不全，能否拒绝收房？</li><li>如果房屋遭遇质量问题，或者不符合装修标准，能否拒绝收房？（备注：“房屋主体结构质量不合格”与“房屋质量问题严重影响正常居住使用”这两种情况可以拒绝收房，普通质量问题与不符合装修标准一般不能拒绝收房）</li><li>拒绝收房，我们会有什么后果？</li><li>如房屋有质量问题，能否主张赔偿，或者开发商是否承诺维修？</li></ul><p>需要留意，对开发商来讲“质量问题”通常指建筑结构质量，所以轻微裂缝、漏水、装修粗糙等都不属于“质量问题”，而且大开发商一般不会在这方面出问题（否则负责人容易进监狱），因此维权时务必精确地指明是哪方面的质量问题。</p><h2 id="办理房产证期限与延期责任"><a href="#办理房产证期限与延期责任" class="headerlink" title="办理房产证期限与延期责任"></a>办理房产证期限与延期责任</h2><ul><li>什么时间节点可以“综合验收合格”？（注意，这是办房产证的重要前提条件）</li><li>什么时间节点可以完成土地使用权变更？房屋所有权登记？</li><li>如果开发商没有如期完成以上各项，且并非我们原因耽误，开发商如何进行赔偿或补偿？</li><li>如果我们自己一直拖着不办房产证，我们是否需要赔偿损失？</li></ul><h2 id="装修标准（精装房）"><a href="#装修标准（精装房）" class="headerlink" title="装修标准（精装房）"></a>装修标准（精装房）</h2><ul><li>样板间中展示了一系列装修和家具布置，那么有没有在合同中也详细指明装修标准？</li><li>有没有精确到具体的品牌与型号？</li><li>如未使用指定品牌，替代方案如何？</li></ul><p>在装修标准方面需要留意一个坑：“XX品牌”，即便都是品牌，也有档次的区别，既可以有高端产品，也可以有低端产品，就像800块钱的华为手机与5000块钱的华为手机那样。</p><h2 id="空白处"><a href="#空白处" class="headerlink" title="空白处"></a>空白处</h2><p>所有空白处（即__________）都应使用“/”或“X”进行标记，以免被偷偷增加不利内容。</p><h1 id="降价应不应该维权"><a href="#降价应不应该维权" class="headerlink" title="降价应不应该维权"></a>降价应不应该维权</h1><p>房子买完之后，如果房子降价，维权是没有法律依据的，打官司一定会输。从道理上讲，房子降价你让开发商赔偿，难道房子涨价你要给开发商补钱吗？</p><p>如果很多业主都主张维权，而且已经策划维权行动，你可以跟着凑个热闹，没准开发商为了息事宁人而给你们提供一些补偿。但是务必记住，降价维权不是合法行为，维权得到的补偿也不能算是合法手段弄来的，所以不要当维权团体的骨干，也不要真的去法院打官司。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ul><li><a href="/2020/11/22/buy-house-0/">总述</a></li><li><a href="/2020/11/29/buy-house-1/">购房资格</a></li><li><a href="/2020/12/05/buy-house-2/">地产项目情况</a></li><li><a href="/2020/12/12/buy-house-3/">项目周围环境</a></li><li><a href="/2020/12/19/buy-house-4/">售楼处里的套路</a></li><li><strong>关于合同</strong></li><li><a href="/2020/12/28/buy-house-6/">不要买公寓！</a></li><li><a href="/2021/07/12/buy-house-7/">房贷贷多少合适</a></li><li><a href="/2021/08/15/buy-house-8/">要不要买车位</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文主要列举合同中一些坑。虽然一般情况下购买者很难在短时间内把整个合同条文都理解清楚，而且即便知道合同内容不合理，也无法与开发商就合同内容进行谈判，但我们仍然有必要清楚我们将来会如何被开发商坑骗。&lt;/p&gt;</summary>
    
    
    
    <category term="楼市" scheme="https://plusnan.me/categories/%E6%A5%BC%E5%B8%82/"/>
    
    
    <category term="买房" scheme="https://plusnan.me/tags/%E4%B9%B0%E6%88%BF/"/>
    
  </entry>
  
  <entry>
    <title>买房避坑指南（四）：售楼处里的套路</title>
    <link href="https://plusnan.me/2020/12/19/buy-house-4/"/>
    <id>https://plusnan.me/2020/12/19/buy-house-4/</id>
    <published>2020-12-18T16:00:00.000Z</published>
    <updated>2023-06-05T03:30:59.900Z</updated>
    
    <content type="html"><![CDATA[<p>确认买房之后，就要前往售楼处详细了解楼盘情况并付钱购买。但售楼处充满了经过精心布置的陷阱，本文则会讲述如何练就一副火眼金睛。</p><span id="more"></span><h1 id="务必先做好准备再去售楼处"><a href="#务必先做好准备再去售楼处" class="headerlink" title="务必先做好准备再去售楼处"></a>务必先做好准备再去售楼处</h1><h2 id="查一下网签"><a href="#查一下网签" class="headerlink" title="查一下网签"></a>查一下网签</h2><p>本节不适用新开盘的情况，因为刚开盘的话网签量肯定是零。网签与销售之间有较长的时间延迟，开过几波以后才能查到之前开盘时的网签情况。</p><p>有些城市提供了住宅项目信息公示网站（由所在城市的住房和城乡建设局提供），可通过此类网站查询网签情况。对于已经开盘一段时间的，或者分期开发的，就可以相应网站查网签情况，虽然有延迟，但其数量级仍然可以反映小区卖得好不好。在相同地段之内比较，卖得好可能是炒的，但卖得不好肯定有硬伤。</p><h2 id="了解建筑许可"><a href="#了解建筑许可" class="headerlink" title="了解建筑许可"></a>了解建筑许可</h2><p>项目必须在取得许可后方可动工，而许可是需要公示的。因此，可以前往工地门口查看公示的建筑许可和平面图，也可以提前在网上搜索建筑许可（所在城市的自然资源和规划局官方网站上面有，但可能需要借助搜索引擎搜索），名称可能是“建设工程规划许可”、“建设项目批前公示”等。</p><p>因为官方网站会提供超清版本文件下载，建议去官方网站搜索下载，但因为工程名与小区名可能不一致，可能你还是需要用其他途径来了解工程项目叫什么名字。</p><p>例如：</p><p><img src="/img/2020-12-19-buy-house-4/public1.jpg"></p><p><img src="/img/2020-12-19-buy-house-4/public2.jpg"></p><p><img src="/img/2020-12-19-buy-house-4/public3.jpg"></p><p>不要把它们当成形式主义展板。仔细看这组图，你就可以清晰地了解到土地用途、占地面积、容积率、楼盘分布、小区内物业设施、光照情况等信息，而且还能少被置业顾问忽悠。</p><h2 id="带把卷尺"><a href="#带把卷尺" class="headerlink" title="带把卷尺"></a>带把卷尺</h2><p>后文会详细讲到样板间的各种套路。预防样板间套路，你需要准备一副卷尺，而且卷尺也就几块钱，买了不会吃亏。</p><p>买完之后，拿卷尺好好测量一下你现在居住的房间的尺寸，以及主要家具的尺寸，对距离有个印象，这样到时候置业顾问跟你说两米五的时候你就知道是宽还是窄了。</p><h2 id="带上平板电脑"><a href="#带上平板电脑" class="headerlink" title="带上平板电脑"></a>带上平板电脑</h2><p>如果你手头有一个平板电脑，建议你把平板电脑带上。现场会有各类文字公示内容，特别是那种不想让你看但又不得不展示的，拿平板看会比拿手机看着舒服，也有利于深入地思考。</p><h2 id="装一个地图APP"><a href="#装一个地图APP" class="headerlink" title="装一个地图APP"></a>装一个地图APP</h2><p>区位图的尺寸是骗人的，有些不利配套也会刻意隐瞒，所以要用规范的地图APP来查看周围配套与实际距离。</p><p>当然地图APP也不是全面的，例如建设中的工地以及公墓、看守所、监狱、军事基地都不会在地图上表示，所以仍然要实地现场查看。</p><h2 id="小心车牌识别"><a href="#小心车牌识别" class="headerlink" title="小心车牌识别"></a>小心车牌识别</h2><p>你的车开进售楼处之时，也是骚扰电话登记之时：有些售楼处会安装车牌识别系统，默默地记下你的车牌号和联系方式，还会与其他开发商共享。因车辆识别这件事情难以取证，即便投诉也不太可能解决（除非你愿意耗费大量时间精力与金钱跟开发商死磕），所以建议开车来的人把车放稍微远一点的地方，别放售楼处附近，也别让售楼处保安看到你上下车。</p><p>个人建议，如果距离在接受范围之内的话，可以考虑骑车去楼盘与售楼处。与开车相比，骑车的时候，对小区位置、距离与周围环境会感受得更加直观。</p><h2 id="小心人脸识别"><a href="#小心人脸识别" class="headerlink" title="小心人脸识别"></a>小心人脸识别</h2><p>去售楼处通常要先登记，确认渠道并判断应该给你什么样的优惠。为了防止你作弊，有些开发商还会用些科技手段，在售楼处偷偷地安装人脸识别系统，然后根据人脸识别结果来确定优惠多少，而消费者对人脸识别毫不知情，即使带上口罩系统也能进行识别，只能靠戴头盔预防——</p><p><img src="/img/2020-12-19-buy-house-4/face.jpg" alt="人脸识别"></p><p>这同样是你投诉或起诉也难以自行解决的行业乱象。对此只能建议，如果想通过中介等渠道途径购房，那么不要自己前往售楼处，甚至不要靠近售楼处，否则就拿不到优惠了。</p><h2 id="提前去工地附近转一圈"><a href="#提前去工地附近转一圈" class="headerlink" title="提前去工地附近转一圈"></a>提前去工地附近转一圈</h2><p>准备进入售楼处之前，应当找到楼盘所在工地，在工地周围转一圈，并且扩大到周围2～3km范围看一下，了解周围环境如何。详细关注点可<a href="/2020/12/12/buy-house-3/">参见前文</a>。</p><p>有些售楼处和实际工地并不在一起，因此要把工地实际位置找出来。售楼处位于车水马龙的好地段，而实际的楼盘可能在一两千米之外的一片荒地之中。</p><h2 id="吃饱喝足"><a href="#吃饱喝足" class="headerlink" title="吃饱喝足"></a>吃饱喝足</h2><p>在售楼处核实信息是一场硬仗，所以先吃饱喝足之后再过去，以免体力不足而主动偷懒。当然不用喝太多水，只要不是去维权的，售楼处会主动给你端茶送水。</p><h2 id="稍微做点功课"><a href="#稍微做点功课" class="headerlink" title="稍微做点功课"></a>稍微做点功课</h2><p>售楼处销售都是“见人说人话，见鬼说鬼话”，如果你房产方面事情懂的不多，对片区也不熟悉，他们就会使劲地忽悠你。如果你做足了功课再过去，他们至少就不敢太离谱地忽悠你了。</p><h1 id="区位图与沙盘的套路"><a href="#区位图与沙盘的套路" class="headerlink" title="区位图与沙盘的套路"></a>区位图与沙盘的套路</h1><h2 id="区位图"><a href="#区位图" class="headerlink" title="区位图"></a>区位图</h2><p>区位图可以直观地展示小区所处位置，以及小区周围的配套及城市功能区域。为了外表美观、突出重点，区位图会做出一些变形调整。</p><p>但是，区位图经常是严重变形，甚至变得非常夸张。有多夸张呢？举个例子，将区位图代入到真实地图中，标记相应距离，可以得到：</p><p><img src="/img/2020-12-19-buy-house-4/map.jpg" alt="区位图"></p><p>小区距离北面的主干道看起来不远，画起来比小区宽度窄，实际上要800米，是小区宽度的2倍。向西前往“唐冶生活区”其他位置还需要至少再走2km（因为中间有山）。而“唐冶生活区”与“中央商务区”看似不远，还能互相辐射，两地实际上却相距6km以上。“中央商务区”的高新万达广场看似位于二环东路与岔路口中间，其实它距离岔路口只有1km，距离二环东路路口却有5km。所以在“唐冶生活区”或“高新东区”工作的通勤距离都不一定很近，在“中央商务区”或“龙奥政务区”工作则要仔细考虑一下通勤距离到底能不能接受了。</p><p>当然区位图的骗局也好识别，就像上面的楼盘，只要你找辆自行车从西边的二环东路沿着主干道骑到东边的售楼处，你就能深刻地感受到区位图变形得有多么夸张了。</p><h2 id="沙盘"><a href="#沙盘" class="headerlink" title="沙盘"></a>沙盘</h2><p>区位图主要用来描述小区周围的环境，而沙盘主要用来描述小区内部的环境。</p><p>为了营造一种高级小区的感觉，沙盘也会经过精心美化，例如：</p><ul><li>沙盘整体搞得郁郁葱葱，就好像进入了花园城市新加坡。实际上交付的时候只有光秃秃的六棵树。</li><li>沙盘上看各楼排布稀疏，实际上小区密密麻麻，颇有香港九龙城寨遗风。</li><li>沙盘上看周围视野开阔，实际上南边是严重挡光的高层写字楼。仔细查看，在沙盘上那栋楼只是矮矮的水晶块。</li><li>沙盘上看不到地上停车位，实际上小区内部有地上停车位，人车不分流。</li><li>你所要买的楼挨着变电站、垃圾回收站等设施，沙盘上没有体现。</li><li>跟区位图一样，沙盘的比例尺也是变形的。</li></ul><p>看沙盘时，如果小区内部或小区南部有水晶块，务必较真地问一下那是什么楼，到底是什么用途，到底有多少层。</p><p>就算沙盘所有坑都识别出来了，你可能还会碰到这种无法预防的情况——</p><p><img src="/img/2020-12-19-buy-house-4/lake.jpg" alt="人工湖"></p><h2 id="周围环境"><a href="#周围环境" class="headerlink" title="周围环境"></a>周围环境</h2><p>区位图和沙盘还有一类套路：虚假的周围配套。</p><p>虚假主要体现在三方面。</p><p>第一方面是距离作假：以地铁站为例，从区位图或沙盘来看好像在附近，实际距离2km，而且还不能走直线，需要稍微绕点路，早上上班光是走到地铁站就要花半小时。所以要用你的地图APP来核实实际距离。</p><p>第二方面是把政府规划当成既成事实：既然是规划，说明还可以“根据实际情况”调整甚至取消，而这种调整或取消不是开发商能够决定的事情。</p><p>第三方面是隐瞒不利因素，例如将南部已经建设或即将建设的大高层标记成矮矮的水晶块。</p><p>仍然以地铁为例。买不起楼的人，通常会被挤到郊区去买楼，而身重要处郊区，地铁就会变得极其重要。实际上，地铁从规划到审批再到落地可能要长达十年时间，如果国家政策收紧，地铁规划可能还会延迟或取消。因此，除非有政府正式发布的官方消息，或者亲眼看到已经开始施工或正式运营，不要相信周围一定会有地铁。否则的话，如果地铁真的改道或取消了，你就算去砸售楼处也起不到任何作用。</p><p>此外有些配套的意义是不大的，例如火车站、机场，你不会天天去坐火车飞机，但是你可以天天感受到它们的噪音；例如离市政府近，你不会天天去政府办事，但你可以感受到周围配套缺乏，毕竟市政府周围经常很空旷；例如离大学近，离得再近你也得靠高考考进去才行。这里还要点名融创文旅城（原万达文旅城），配套游乐园、商业街、酒店群，这些都是城市级的配套，旅游景点的设定，你作为小区业主，这辈子能去享受几回呢？</p><p>所以在售楼处就要意识这些问题，不要等到回家之后才想起来配套“其实并没有什么卵用”。</p><h1 id="户型图的套路"><a href="#户型图的套路" class="headerlink" title="户型图的套路"></a>户型图的套路</h1><p>户型的内容比较复杂，本文不展开讨论了，只讲几个坑。</p><p>北方人一般都讲究“南北通透”，可是你得检查一下是不是真的南北通透，例如：</p><ul><li>北边是厨房、厕所：平时不会天天开着厨房窗户或厕所窗户通风吧？</li><li>北边是连廊：中间户北边通常有连廊，而且连廊属于消防设施，建楼时候不能取消。平时楼房肯定不会天天起火，但可以有变态天天到连廊偷窥你家生活，而且连廊可能会挡光，所以打算买中间户的话要留意这个问题。</li><li>流线不畅：从南到北需要拐弯才能到达。如果住宅楼南北遮挡严重，这样通风也会不顺畅，不能算是南北通透了。</li></ul><p>户型图通常只画了单个房间情况，没有标示整体楼层的情况。所以要结合工地现场确认一下是几梯几户，户型是中间户还是边户，东西两侧是否有其他住户，中间户向外突出多少，遮挡如何。有些高层还会有腰线，腰线太长的话会稍微有些挡光，介意的话要仔细问一下腰线的问题。</p><p>户型图还经常存在一个严重问题：上面没标尺寸。对吧？看到户型图没尺寸，当然要较真地问一下尺寸。那为什么说要“较真地”问呢？别忘了墙也占尺寸。另外要留意公摊的问题，100平的房子，去掉公摊，实际上只剩70多平，如果户型设计不好，三室每个屋子会变得很挤。</p><p>有硬伤的奇葩户型（例如南北太深、房间不是长方形而是有尖角形状）就别买了，住起来不舒服的。虽然经过精心设计以后奇葩户型也可以变得精致，但改造所需的设计费和装修费一定会让你后悔当初为什么不稍微多花点钱买个好点户型的房子。</p><p>当置业顾问说长三米的时候，你说到底是宽了，还是窄了？这个无法回答，不同人感受不一样，而且跟你后续的装修风格、后续要布置的家具甚至灯光颜色都有关系，所以前文会让你提前拿尺子在自己家感受一下。</p><h1 id="样板间的套路"><a href="#样板间的套路" class="headerlink" title="样板间的套路"></a>样板间的套路</h1><p>样板间主要是用来展示房间内部情况。</p><h2 id="装修"><a href="#装修" class="headerlink" title="装修"></a>装修</h2><p>为了吸引你买房子，开发商通常会花个几十万到几百万来做装修，房间的效果变得非常高端大气上档次、低调奢华有内涵。可是，既然买不起房子，那装修肯定也要省钱，最终当然达不到样板间的效果。</p><p>参观样板间时，别拿样板间的样子想象自己未来的家，而且需要特别留意“非交付标准”五个字，毕竟去掉非交付标准设施之后剩下的样子也不见得是未来实际交付的样子。</p><p>当然你还是可以给样板间拍个照，把房间的每个方面、每个角落都拍到，虽然将来不能用于维权，但是可以在你自己装修时稍微参考参考。</p><h2 id="尺寸"><a href="#尺寸" class="headerlink" title="尺寸"></a>尺寸</h2><p>人们都喜欢大房子，为了吸引你买，样板间当然要显得宽敞。房间去掉公摊之后实际面积就那么点，想显得宽敞，那当然要在尺寸方面造假。</p><p>有些开发商比较有诚意，直接用实体样板间（样板间设置在正在修建的楼内），这样房间尺寸自然是真实的。但是，房间尺寸不造假，那家具呢？比方说，双人床尺寸是1.8x2m，开发商做成1.6x1.8m，房间长宽两个方向不就都宽出20cm了吗？</p><p>一般开发商没那么有诚意，样板间是另外订做的，那样板间的房间尺寸就经常比实际尺寸宽，例如宽20厘米，墙再比实际尺寸薄一点，床窄20厘米，床头柜窄10厘米，这样总共就多出了50厘米。不光如此，屋门拆掉，屋内再放一面镜子，你看，豪宅的效果出来了！</p><p>所以本文一开始就提醒，前往售楼处之前务必带把卷尺。虽然<span class="exturl" data-url="aHR0cHM6Ly93d3cuc29odS5jb20vYS80NDMzNDAwNTRfNzE5MTU5">卷尺也有造假版<i class="fa fa-external-link-alt"></i></span>，但你自己买的尺子肯定比做样板间时候用的尺子靠谱吧？</p><h1 id="公示栏的套路"><a href="#公示栏的套路" class="headerlink" title="公示栏的套路"></a>公示栏的套路</h1><p>按照有关部门规定，有些信息是要公示的，开发商他们不得不遵守这个规定。但是，开发商可以把这些公示信息放到角落里挂着，让你不特意找就找不到，找到了也得站着看，根本没有耐心看下去。</p><p>既然放到不起眼的地方，我们当然更要认真地看，拿手机拍下来，然后靠在舒服的沙发慢慢看，任凭置业顾问如何怂恿，先把文字看明白再说。</p><h2 id="不利因素"><a href="#不利因素" class="headerlink" title="不利因素"></a>不利因素</h2><p><a href="/2020/12/12/buy-house-3/">前文</a>已详细介绍不利因素，此处不再赘述。</p><h2 id="居住公寓"><a href="#居住公寓" class="headerlink" title="居住公寓"></a>居住公寓</h2><p>居住公寓指光照不足的房间。有些房子挡光严重，光照常年不足，甚至到了十多楼还是严重挡光，因此选较低楼层时要特别留意这个问题，介意采光的话慎买。</p><h2 id="安置房"><a href="#安置房" class="headerlink" title="安置房"></a>安置房</h2><p>有些小区会按照政府要求配建一些安置房。如果介意原住民回迁或外来租户，务必留意公示中是否有“安置房”、“保障房”、“人才公寓”等字样。</p><h2 id="合同条文"><a href="#合同条文" class="headerlink" title="合同条文"></a>合同条文</h2><p>合同通常是按政府标准制定的，并且需要在售楼处进行公示，所以一般都比较公平。但是，除了合同，开发商还会让你签订补充协议，而补充协议内容可以随意制定，要多不公平就可以有多不公平，而且这两类文件会放到让人没有兴趣留意观看的地方，让你没有心思较真。<a href="/2020/12/26/buy-house-5/">后一篇文章</a>梳理了合同条文中的坑。</p><h1 id="售楼处现场与置业顾问营造气氛的套路"><a href="#售楼处现场与置业顾问营造气氛的套路" class="headerlink" title="售楼处现场与置业顾问营造气氛的套路"></a>售楼处现场与置业顾问营造气氛的套路</h1><p>置业顾问会催你，不买就快没了，平时在朋友圈也会发朋友圈，说XX政策调整，XX区域发展，不赶紧上车就要涨价。到了售楼处，也是敲锣打鼓地宣布成交多少多少。</p><p>现在是2020年，大城市的楼市基本上都凉了，国家也在重点维稳，不少城市政策都在收紧，就算稍微想放松一点，也会很快上演政策“一日游”。小城市或许还红火但用不了多久也会跟着大城市变凉，所以这些只是吓唬人的促销套路。现在真的不用着急——如果房子好卖，他们还需要促销吗？什么事情都不做房子也不愁卖吧！正是因为卖不动，才会靠各种手段忽悠人买嘛！</p><h1 id="特价房的套路"><a href="#特价房的套路" class="headerlink" title="特价房的套路"></a>特价房的套路</h1><p>特价房，不仅便宜，还会给人“正好能捡漏”的感觉。</p><p>难道真的是让你捡漏吗？当然不是了！</p><p>既然是特价房，说明肯定有便宜的原因，例如采光很差（差到15层还是居住公寓），或者挨着设备层，或者紧邻铁路线、高架桥、垃圾场等不利因素，或者跟安置居民混住，反正绝不是开发商良心发现或者简单地进行促销。</p><p>就算手里没钱，想靠捡漏省些钱，也要打听清楚便宜的原因之后再考虑入手。</p><h1 id="关于展示、宣传资料与置业顾问介绍"><a href="#关于展示、宣传资料与置业顾问介绍" class="headerlink" title="关于展示、宣传资料与置业顾问介绍"></a>关于展示、宣传资料与置业顾问介绍</h1><p>展示、宣传资料与置业顾问介绍都不具备法律效力，拿去打官司也不能当作证据。但是，你仍然可以尽量收集宣传资料，给置业顾问偷偷录音，给售楼处展板、区位图和样板间拍照，作为日后控诉虚假宣传众多证据中的一部分呈现。</p><p>当然，你也完全可以假定置业顾问所有的话都是放屁，这样在交房的时候你就不会比其他被忽悠的业主失望了。</p><h2 id="如何了解楼盘的问题"><a href="#如何了解楼盘的问题" class="headerlink" title="如何了解楼盘的问题"></a>如何了解楼盘的问题</h2><p>其实你是可以问到到房子或开发商的负面评论的。如何操作呢？假如同一片区有A、B两家开发商的盘，你对A有意愿，那么你可以去B的售楼处，假装对B房子感兴趣，顺便跟那个B的销售说，“我朋友最近对A比较感兴趣，推荐我买A”，B的销售就会很自然地把A的问题告诉你。无论是客观事实还是恶意中伤，先记下来，然后回家再慢慢分析。</p><h1 id="不要急着交定金！"><a href="#不要急着交定金！" class="headerlink" title="不要急着交定金！"></a>不要急着交定金！</h1><p>交定金之前，开发商会想办法伺候你，让你舒舒服服地交出那笔钱。一旦交了定金，你就从爷爷变成了孙子。讨钱浪费精力，放弃又浪费金钱，只能硬着头皮继续买，很多人就这样，明知道要被坑，结果还是被坑了，所以不要急着交定金。</p><p>什么时候交定金呢？当你摸清楚所有情报，了解各种坑之后还能下定决心购买，你就可以交定金了。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ul><li><a href="/2020/11/22/buy-house-0/">总述</a></li><li><a href="/2020/11/29/buy-house-1/">购房资格</a></li><li><a href="/2020/12/05/buy-house-2/">地产项目情况</a></li><li><a href="/2020/12/12/buy-house-3/">项目周围环境</a></li><li><strong>售楼处里的套路</strong></li><li><a href="/2020/12/26/buy-house-5">关于合同</a></li><li><a href="/2020/12/28/buy-house-6/">不要买公寓！</a></li><li><a href="/2021/07/12/buy-house-7/">房贷贷多少合适</a></li><li><a href="/2021/08/15/buy-house-8/">要不要买车位</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;确认买房之后，就要前往售楼处详细了解楼盘情况并付钱购买。但售楼处充满了经过精心布置的陷阱，本文则会讲述如何练就一副火眼金睛。&lt;/p&gt;</summary>
    
    
    
    <category term="楼市" scheme="https://plusnan.me/categories/%E6%A5%BC%E5%B8%82/"/>
    
    
    <category term="买房" scheme="https://plusnan.me/tags/%E4%B9%B0%E6%88%BF/"/>
    
  </entry>
  
</feed>
