<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>plusNaN</title>
  
  
  <link href="https://plusnan.me/rss.xml" rel="self"/>
  
  <link href="https://plusnan.me/"/>
  <updated>2024-01-24T01:20:51.621Z</updated>
  <id>https://plusnan.me/</id>
  
  <author>
    <name>plusNaN</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>科普文：家庭应急储备之对讲机</title>
    <link href="https://plusnan.me/2023/02/16/emergency-walkie-talkie/"/>
    <id>https://plusnan.me/2023/02/16/emergency-walkie-talkie/</id>
    <published>2023-02-15T16:00:00.000Z</published>
    <updated>2024-01-24T01:20:51.621Z</updated>
    
    <content type="html"><![CDATA[<p>对讲机，看起来是个很简单的东西，但是，自从考了业余无线电操作证之后，才会意识到，对讲机不仅要考证，而且还有很多讲究。本文讲一讲，当家庭为了应急储备而购买对讲机时，需要考虑什么事情。</p><span id="more"></span><h1 id="对讲机的作用"><a href="#对讲机的作用" class="headerlink" title="对讲机的作用"></a>对讲机的作用</h1><p>如今4G、5G网络已经全面普及，使用手机就能很容易与人联络。然而，在手机信号不好的山区，或者在发生大型灾难时（例如汶川地震、郑州洪水），手机有可能收不到信号，这时如果有对讲机，就有更大的机会与人取得联络，了解所在地情况，或者发出求救信号。</p><h1 id="对讲机的种类"><a href="#对讲机的种类" class="headerlink" title="对讲机的种类"></a>对讲机的种类</h1><p>在购买对讲机时，要先了解对讲机的种类，以免买错无法使用。</p><h2 id="公众对讲机"><a href="#公众对讲机" class="headerlink" title="公众对讲机"></a>公众对讲机</h2><p>公众对讲机是开放给公众使用的对讲机，频率在409MHz附近，发射功率0.5W，覆盖范围比较近。频率不能调整，而且不能更换天线。但是这种对讲机既不需要考操作证，也不需要办理执照。</p><p>如果联络范围不大（1公里），而且仅限于熟人间联系，可考虑配置一对公众对讲机。</p><h2 id="业余对讲机"><a href="#业余对讲机" class="headerlink" title="业余对讲机"></a>业余对讲机</h2><p>相比于公众对讲机，这里更推荐业余对讲机，因为“业余”对讲机更加“专业”。</p><p>“业余对讲机”，其中“业余”不是指操作水平业余，而是指用途业余，也就是给无线电爱好者提供的、非工作用途的对讲机。这类对讲机可以手工设置频率，发射功率比较大，而且可以通过更换天线来改善信号质量，所以灵活性比较高，覆盖范围也比较广。</p><p>业余的核准频率是144-148MHz（VHF段）以及430-440MHz（UHF段），发射功率可以到达5W甚至更高。430-440MHz在城市传播较好，因此也被无线电爱好者广泛使用。另外，在购买对讲机之前，需要确认它的发射与接收的频率范围，范围不同则无法互相通话。</p><p>按信号类型，对讲机可分为模拟信号和数字信号。由于数字信号使用人数较少，而且数字机价格较贵、操作复杂，不建议家庭购买。后文也将按照模拟信号来讲解。</p><p>为了提高可玩性，很多对讲机都有操作屏幕，能够进行一系列灵活操作，有些还支持双守模式，即同时收听两个频道。但是，对于你的家庭成员来说，这些操作可能过于复杂了，因此建议考虑买那种简单的机器：没有屏幕，没有设置，只有音量旋钮、频道旋钮和一个PTT按钮。这样的话，你就可以告诉你的家人，在发生什么情况，把机器调到几频道，然后就可以通话了。至于频率等参数，你可以事先用配套的软件来设置好。</p><p>使用业余对讲机需要考取业余无线电台操作证书，而且需要在获得操作证之后办理电台执照，取得一个电台呼号，这样才算是合法使用。然而实际情况是一般人根本不知道对讲机需要办证，很多行业例如工地塔吊在大量滥用业余对讲机，而且只要未对其他业务造成干扰，就几乎没人管。所以建议一方面大家把操作证考出来，用合法呼号来合法通联，另一方面又不要把合法性问题太当回事。</p><h2 id="公网对讲机"><a href="#公网对讲机" class="headerlink" title="公网对讲机"></a>公网对讲机</h2><p>公网对讲机，就是利用4G/5G网络来进行联络的对讲机，因此公网对讲机可以有着比其他对讲机还要大的覆盖范围。</p><p>然而，这也说明了公网对讲机会像手机一样有流量费，而且当手机没信号时，公网对讲机也会失效，因此不适合应急使用。</p><h2 id="专业对讲机"><a href="#专业对讲机" class="headerlink" title="专业对讲机"></a>专业对讲机</h2><p>专业对讲机通常用于特定行业，例如铁路、航空、海事、公安、军事等。有些对讲机是模拟信号，有些则是数字信号。但是，它们的频率都是行业专用频率，有些领域还是加密通信，普通人使用会被视为干扰，而且涉嫌违法，因此不要购买。</p><h1 id="对讲机设置"><a href="#对讲机设置" class="headerlink" title="对讲机设置"></a>对讲机设置</h1><p>买完对讲机之后，需要进行一些设置，才能正常通话。</p><h2 id="寻找频率"><a href="#寻找频率" class="headerlink" title="寻找频率"></a>寻找频率</h2><p>对讲机至少要保存两种频率：一种是直频频率，另一种是中继台频率。前者可以理解为私聊，后者可以理解为加群。</p><p>中继台频率可以在微信小程序“业余无线电”中进行搜索，找到“中继查询”功能，然后查询自己家附近的中继台频率。</p><p>关于直频频率，只规定了频率范围在多少MHz以内，但是并没有规定说你必须用多少MHz，所以只要符合频率范围，而且不会干扰他人，这样就行了。如果不确定，可以先将对讲机设置为特定频率，然后听一段时间，假如一直没人说话，有可能是没人占用。</p><h2 id="设置频率"><a href="#设置频率" class="headerlink" title="设置频率"></a>设置频率</h2><p>下面讲述设置对讲机时需要注意的参数，具体设置方法则需要查看对讲机的说明书。</p><h3 id="中继频率"><a href="#中继频率" class="headerlink" title="中继频率"></a>中继频率</h3><p>在查询中继后，要留意一些参数：模式、频率、频差、亚音，你需要找到对讲机说明书，并找到相应的参数设置来设置对讲机：</p><ul><li>模式：要选择模拟模式，或数模混合模式的中继。如果只支持数字模式，那么可以直接略过，因为模拟信号对讲机连接不上。</li><li>频率：假如中继台频率是439.150MHz，你需要将对讲机设置为频率模式，然后输入439.150。</li><li>频差：假如频差是下差5MHz（减5MHz），需要找到类似“频差方向”、“频差频率”之类的设置，将频差方向设置为“-”，频差频率设置为5MHz。上差则是把频差方向设置为“+”。没有频差（直频）则需要把频差方向设置为“关闭”或“OFF”。</li><li>亚音：亚音分为发送亚音（编码亚音，T-CTCSS）和接收亚音（解码亚音，R-CTCSS）。需要将相应亚音设置为中继参数中的亚音，否则中继不会接收你的语音。</li></ul><p>设置完成后，你可以将其保存为频道，下次使用时，进入频道模式，切换到相应频道，对讲机会自动设置这些参数，你就不需要重复设置了。</p><p>如果对讲机有“消除尾音”或类似功能，你需要将其关闭，以便验证参数设置是否正确。操作完成后，找一个信号传播比较好的位置，例如楼顶天台，按一下发射键，然后立刻松开，如果能听到一声回响，说明信号能够打到中继。</p><h3 id="直频频率"><a href="#直频频率" class="headerlink" title="直频频率"></a>直频频率</h3><p>直频频率，进入频率模式，直接录入频率数字即可使用。有时你设置中继频率之后，频差、亚音等设置会留在对讲机内，所以不要忘记将这些设置清除。</p><p>为操作方便，可在清除设置后，再把录入的频率保存成频道，下次使用时，直接切换到频道模式，对讲机会自动清除无关设置。</p><p>除自选频率外，还可以再保存一个438.500MHz，很多无线电爱好者会将其视为测试或应急频率。如果发生紧急情况，并在此频道呼叫，可能会有更多机让人听到。</p><h2 id="写频"><a href="#写频" class="headerlink" title="写频"></a>写频</h2><p>很多对讲机支持软件写频，也就是在电脑上进行操作，把频率设置到对讲机里面。如果是没有屏幕的机器，那么你还不得不使用写频软件来设置频率。</p><p>因此在购买对讲机之前，你需要询问：</p><ol><li>是否支持软件写频</li><li>是否需要专门的写频线，写频线是否需要驱动，驱动是否支持你的电脑系统</li><li>写频软件的下载方式，以及是否支持你的电脑系统</li><li>写频软件的操作方法</li></ol><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h2 id="数量"><a href="#数量" class="headerlink" title="数量"></a>数量</h2><p>对讲机至少要买两台才能使用，其品牌型号可以不一样，但是信号类型要一致（模拟机），而且频率一定要有交集。</p><h2 id="合法性"><a href="#合法性" class="headerlink" title="合法性"></a>合法性</h2><p>如果没有合法呼号，不要随意与中继台通话，否则别人不会理你，或者会教育你去考证办证。</p><p>如果当地中继台允许小号，可与当地中继台进行联系，加入当地组织并申请小号。但是小号并不通用，有些中继也不承认小号，所以要注意通信范围。</p><h2 id="干扰"><a href="#干扰" class="headerlink" title="干扰"></a>干扰</h2><p>同一频率只能有一个人说话，如果频道内有人正在说话，那么不要按发射键，否则会干扰现有通话。</p><p>在设置频率时，有些频率不要随意占用：</p><ol><li>144～144.035MHz和145.8～146MHz</li><li>431.9～432.240MHz和435～438MHz</li><li>144.640MHz：很多无线电爱好者会当作定位频率（APRS）使用</li><li>438.500MHz：很多无线电爱好者会当作应急频率使用</li><li>当地或附近城市的中继台的频率</li><li>超出144～148MHz、430～440MHz范围的其他频率</li></ol><p>频率的影响范围通常是±25kHz（±0.025MHz），例如被要求不要占用438.500MHz，那么你不要在438.475~438.525MHz范围进行发射。</p><p>中继台通常会有频差，假如中继台频率439.000MHz，下差5MHz，那么439.000MHz与434.000MHz（439减5）附近±25kHz的频率都不要随意占用。</p><h2 id="私密性"><a href="#私密性" class="headerlink" title="私密性"></a>私密性</h2><p>对讲机通话没有任何加密，即使不知道频率，其他人也很容易找到频率并进行偷听。因此在通话期间不要暴露隐私：</p><ul><li>给每位家庭成员起一个代号，使用代号通话。</li><li>不要谈论财产、联系方式、账号密码、精确位置等敏感信息。</li><li>在平时考虑给一些敏感事项起代号，而且确保第三者听不懂、猜不到，一旦遇到紧急情况，而且不得不提及敏感事项，使用代号来谈论。</li></ul><h2 id="覆盖范围"><a href="#覆盖范围" class="headerlink" title="覆盖范围"></a>覆盖范围</h2><p>对讲机的覆盖范围并不是一个绝对的数字，主要取决于它的位置。简单来说，在楼房密集地方不如在开阔地，在地面不如在楼上，在屋内不如在窗户边，在窗户边不如在楼顶，在楼顶不如在更高的山顶。对于专业的业余无线电爱好者，配置特定的天线，只需一个瓦特，甚至可以从地球打到卫星。</p><p>对讲机要竖立使用，不要放倒，否则会影响传播。而且对讲机必须安装天线，否则不仅无法传播信号，还会把对讲机烧坏。</p><p>建议平时进行信号测试，有机会还可以考虑在相同位置、不同天气条件下进一步测试，了解哪种情况的传播效果比较好。</p><h2 id="充电"><a href="#充电" class="headerlink" title="充电"></a>充电</h2><p>对讲机要定期充电，以免过度亏电，在发生紧急情况时无法使用。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;对讲机，看起来是个很简单的东西，但是，自从考了业余无线电操作证之后，才会意识到，对讲机不仅要考证，而且还有很多讲究。本文讲一讲，当家庭为了应急储备而购买对讲机时，需要考虑什么事情。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="应急储备" scheme="https://plusnan.me/tags/%E5%BA%94%E6%80%A5%E5%82%A8%E5%A4%87/"/>
    
    <category term="对讲机" scheme="https://plusnan.me/tags/%E5%AF%B9%E8%AE%B2%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>2023新年注意事项</title>
    <link href="https://plusnan.me/2023/01/20/new-year/"/>
    <id>https://plusnan.me/2023/01/20/new-year/</id>
    <published>2023-01-19T16:00:00.000Z</published>
    <updated>2024-01-23T06:16:38.632Z</updated>
    
    <content type="html"><![CDATA[<p>疫情结束了，可是疫情还有后遗症，不仅对个人身体有影响，对经济环境也会有影响。作为普通人，在新的一年里，我们还要注意什么呢？</p><span id="more"></span><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p><strong>本文仅供参考，不作为投资理财建议。</strong></p><h1 id="不要随便折腾"><a href="#不要随便折腾" class="headerlink" title="不要随便折腾"></a>不要随便折腾</h1><p>疫情期间，由于不断地封城，经济受到了很大冲击，最终导致很多人降薪失业。</p><p>尽管疫情结束了，经济看起来即将复苏，但是毕竟复苏还尚未实现，加上中国的经济的确存在一些根本性的问题，因此现在不要急着折腾。</p><p>具体来讲：</p><ul><li>选择保守策略，假如年底形势好转，再调整决策</li><li>不要随意辞职，不要随意跳槽</li><li>不要创业</li><li>不要加杠杆（增加借贷）</li><li>在涉及个人利益的问题上，不要碰自己不熟悉的东西</li></ul><p>很多人会担心财产贬值，所以想做些什么事情，可是你会发现，如果你什么都不做，你甚至可能跑赢80%的投资者。</p><h1 id="守好自己财产"><a href="#守好自己财产" class="headerlink" title="守好自己财产"></a>守好自己财产</h1><h2 id="避免投资"><a href="#避免投资" class="headerlink" title="避免投资"></a>避免投资</h2><p>尽量用最保守的投资方式来投资，即银行存款。同时，银行存款要分散放在大银行中，不要放在小银行中，例如地方银行、城商行、农商行甚至村镇银行，河南村镇银行事件提醒我们，未来小银行很可能要出事，而且你损失的将不仅仅是存款。</p><h2 id="防范诈骗"><a href="#防范诈骗" class="headerlink" title="防范诈骗"></a>防范诈骗</h2><p>由于越来越多的人失去收入，未来会有越来越多的人走上犯罪的道路，包括盗窃、抢劫和诈骗。</p><p>由于国内广泛实行实名制，所以经常有人为了外快而将个人隐私信息卖给第三方，导致推销和诈骗更加精准、更加“智能”，所以我们需要更加提高警惕。</p><h2 id="及时止损"><a href="#及时止损" class="headerlink" title="及时止损"></a>及时止损</h2><p>如果你有借贷，而且手有余钱，因为投资的收益可能还不如贷款利息高，所以可考虑提前还款，降低损失。</p><p>如果你在股市、基金、房地产等领域有投资，建议及时退出，及时止损。房地产未来看人口，而人口总体是下降的，这意味着房地产，特别是低线城市的房地产将越来越不值钱。你现在已经挣不到钱了，但是及时出清，至少你的损失会比将来更小。</p><p>如果你现在不愿处置财产，你可以稍微等一阵子，等行情见涨之后，见好就收，马上退出。</p><h1 id="避免与人矛盾"><a href="#避免与人矛盾" class="headerlink" title="避免与人矛盾"></a>避免与人矛盾</h1><p>疫情三年，很多人因为长期封闭，生活不断受冲击，各种压力程度大增，心理状态已经不正常，甚至已经产生了心理疾病，这导致社会的极端事件也不断增多，甚至出现了很多蓄意报复社会的事件。最近网络还流行了“献忠”一词，这个词语源自明末张献忠屠蜀的历史，用来指代现在这些极端的无差别杀人事件，虽然这个词语已经被国内网络封杀，但仍然掩盖不了社会矛盾的严重性。</p><p>因此现在要特别注意自己的言行，避免无意甚至故意刺激他人，避免与人产生矛盾：</p><ul><li>保持文明，例如说话礼貌客气，不要随意插队，开车不要加塞，不给别人捅你的理由。</li><li>不要露富，不要让别人觉得你过得比别人好，更不要因为你过得好所以瞧不起别人，否则会招引不必要的仇恨，而且被捅死了别人也只会拍手称快。</li><li>不要主动惹事，特别是民工、保安、司机、外卖员、快递员、服务员等这类容易遭到歧视的社会群体。当你与他们争执时，要考虑到他们可能会当场拿刀捅你；当你按下“投诉”按钮时，要考虑到他们可能会事后提着刀子堵你家门口。</li><li>如果预感要发生矛盾，可以抓紧赶在对方仇恨值上升之前认怂。你认怂，你只是丢了面子；你争强好胜，你可能会丢掉性命。</li><li>在公共场合要更加注意安全，防止倒霉卷入危险事件。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;疫情结束了，可是疫情还有后遗症，不仅对个人身体有影响，对经济环境也会有影响。作为普通人，在新的一年里，我们还要注意什么呢？&lt;/p&gt;</summary>
    
    
    
    <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>为什么不使用GPT</title>
    <link href="https://plusnan.me/2022/12/30/why-not-gpt/"/>
    <id>https://plusnan.me/2022/12/30/why-not-gpt/</id>
    <published>2022-12-29T16:00:00.000Z</published>
    <updated>2024-01-23T06:17:59.508Z</updated>
    
    <content type="html"><![CDATA[<p>ChatGPT火了，业界甚至直呼，再不掌握人工智能，就要被时代淘汰了。</p><p>身边已经有人开始使用GPT来作为信息检索工具，并且享受到了这种有问必答的便利，那么为什么还要等着被“淘汰”呢？</p><span id="more"></span><p>从ChatGPT的原理上讲，它是基于现有的资料进行“学习”，然后形成“知识库”，因此它回答问题的质量依赖于样本的质量。</p><p>然而互联网上简体中文内容的质量是比较差劲的，在一般内容方面，一方面由于中国的网络审查，很多信息是无法正常发出，使得言论带有一定的偏向性，另一方面由于自媒体的内卷，他们大量使用“营销号”的方式生成内容，并没有提供有意义的信息；在技术内容方面，大家则总是抄来抄去，经常得不到想要的答案，从而不得不换用英文来进行检索。ChatGPT用此来作为样本进行学习，所以它的知识水平自然不会高于这些资料。</p><p>另一方面，当AI普及后，AI也有可能会反过来污染自己。当ChatGPT流行后，它能快速生成信息，而且内容看起来逻辑缜密，不像AI生成内容，所以将来会有越来越多的人使用AI来编写文章，简单改改就去发布。这些AI生成信息未来可能也会成为AI学习的样本，形成一种“内卷”，从而使AI“智力”下降。</p><p>由此可见，还是要带着一种怀疑的态度来看待ChatGPT给出的答案，并且通过自己的经验和Google搜索来判断答案的可靠性。不过，既然GPT的结果也要用Google来核实，而且Google查到的可能还是GPT的结果，那为什么不直接用Google来搜索和核实呢？</p><p>最后附一段ChatGPT提供的信息与核实的结果：</p><p><img src="/img/2022-12-30-why-not-gpt/gpt1.png" alt="example"></p><p><img src="/img/2022-12-30-why-not-gpt/gpt2.png" alt="moegirl"></p><p>备注：椎名真白是日本动漫《樱花庄的宠物女孩》的女主角，是一名绘画天才，但生活完全不能自理，需要男主照顾，其魅力在于若无其事地白给，满足了宅男们的妄想。跟《偶像大师》没有任何关系。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;ChatGPT火了，业界甚至直呼，再不掌握人工智能，就要被时代淘汰了。&lt;/p&gt;
&lt;p&gt;身边已经有人开始使用GPT来作为信息检索工具，并且享受到了这种有问必答的便利，那么为什么还要等着被“淘汰”呢？&lt;/p&gt;</summary>
    
    
    
    <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
    <category term="ChatGPT" scheme="https://plusnan.me/tags/ChatGPT/"/>
    
  </entry>
  
  <entry>
    <title>如何做PPT</title>
    <link href="https://plusnan.me/2022/11/05/how-to-make-ppt/"/>
    <id>https://plusnan.me/2022/11/05/how-to-make-ppt/</id>
    <published>2022-11-04T16:00:00.000Z</published>
    <updated>2024-01-21T09:49:58.679Z</updated>
    
    <content type="html"><![CDATA[<p>做PPT还不简单吗？拿PowerPoint（WPS演示）捅一捅，PPT不就出来了吗？</p><p>如果阅读过本系列前两篇文章《<a href="/2020/02/20/how-to-write-document/">如何写好软件文档</a>》和《<a href="/2020/10/24/how-to-draw-graph/">如何画架构图</a>》，肯定就知道把PPT做好还是需要一点经验的。下面就是PPT的经验分享。</p><span id="more"></span><h1 id="明确受众"><a href="#明确受众" class="headerlink" title="明确受众"></a>明确受众</h1><p>做PPT之前要想好目标和主题，你汇报的是什么呢？听众是谁，做什么事情的，关心什么东西呢？</p><p>受众不同，即使可以使用同一个PPT，讲法也会有所不同。以产品功能介绍为例：</p><ol><li>与外部单位交流：要点出产品的主要功能，强调公司和产品的优势，不要讲产品的技术细节或操作方法，除非客户主动提问。</li><li>向甲方汇报项目情况：产品功能点到即可，不用花太多时间去讲，要把主要精力放在如何实施、工程节点、保障措施等方面。</li><li>向用户培训：产品的主要功能也是点到即可，但是要强调产品的具体操作方法，如果有条件，最好使用真实产品进行现场演示，而不是简单地念PPT。</li></ol><h1 id="列好大纲"><a href="#列好大纲" class="headerlink" title="列好大纲"></a>列好大纲</h1><p>汇报通常按“总-分”结构进行，先介绍总体情况，然后再详细叙述。为了使思路更加清晰，可利用思维导图工具来打草稿，理清思路后再填充内容。</p><p>如果你没有做过相关汇报，不熟悉其中的套路，可找领导或同事要一些类似的资料，到网上找现成的模板，并且不要急于把PPT做出来，而是先编写大纲，跟有经验的领导和同事确认思路是否正确，然后才开始制作，以免浪费时间。</p><p>举两个例子：</p><h2 id="项目计划"><a href="#项目计划" class="headerlink" title="项目计划"></a>项目计划</h2><p>按照听众群体，可以分为对内汇报和对外汇报。对内汇报则强调内部的分工安排，明确时间节点以及团队各成员的职责，而对外汇报则需要强调时间节点，以及如何保障按时保质保量地交工。</p><p><img src="/img/2022-11-05-how-to-make-ppt/example1.png" alt="项目计划示例"></p><h2 id="年终个人总结"><a href="#年终个人总结" class="headerlink" title="年终个人总结"></a>年终个人总结</h2><p>年终个人总结的目的是向部门领导和同事介绍自己的工作情况，证明自己对团队作出了贡献，并在此基础上作出总结和展望。</p><p>作为一个小工，总体结构大致如下：</p><p><img src="/img/2022-11-05-how-to-make-ppt/example2.png" alt="年终个人总结示例"></p><h1 id="挑选设计"><a href="#挑选设计" class="headerlink" title="挑选设计"></a>挑选设计</h1><p>关于PPT模板，如果你的单位有统一模板，那么就直接用统一模板，不要再自己去设计模板。</p><p>如果没有现成模板，建议挑一些设计简洁但又不简陋的模板，无关要素越少越好，别人看的是你的汇报内容，不是看你的PPT多漂亮。</p><h2 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h2><p>由于PPT通常是利用投影仪或电视机之类设备播放的，不像看纸质文件那样清晰，所以在具体的设计方面，要注意一些细节问题：</p><ul><li>颜色：颜色要具有一定的对比度，例如白色背景可以配黑色、红色或蓝色文字，而黑色背景可以配白色、黄色或绿色文字，这样可以让人能看清楚其中的内容。</li><li>字体：文字线条不要太细。另外尽量选用电脑系统自带字体，例如微软雅黑，如果你的PPT需要用别人电脑播放，可以确保不会缺字体。</li><li>字号：字号尽量不要小于28，再小的话，距离远了看不清。如果目标听众里面有老年人，因为老年人花眼，文字要更大一些。</li></ul><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>PPT内容要尽量多样化，例如：</p><ul><li>像本段内容一样，使用项目符号和编号来编排内容，增加层次感。</li><li>配置一些图片，或者摆放一些抽象的符号，避免一味地堆砌文字，以免内容枯燥。</li><li>使用文本框、流程图等方式来重排文字，用错位排布、流程分布等形式，让内容更加直观。</li><li>使用幻灯片动画来展现内容。例如一张幻灯片内有五段话，你可以不让它们同时显示出来，而是增加动画并通过鼠标控制，每讲一个主题时才显示一段话。</li></ul><h1 id="撰写讲稿"><a href="#撰写讲稿" class="headerlink" title="撰写讲稿"></a>撰写讲稿</h1><p>讲稿是你汇报时要讲的内容。如果汇报比较重要，容不得失误，或者你的经验不足，担心讲不好，最好提前写一份讲稿，放在PPT的下方。</p><p>如果你利用了PPT下方的“单击此处添加备注”，在正式汇报时，投影仪上显示的是正式的PPT，而你的屏幕上会显示这份讲稿：</p><p><img src="/img/2022-11-05-how-to-make-ppt/report1.png" alt="report1"></p><p><img src="/img/2022-11-05-how-to-make-ppt/report2.png" alt="report2"></p><p>有些汇报总是要讲一些场面话和官话，这种话大家都不爱听，也不解决问题，但是还必须要讲，所以可以把讲稿直接写在PPT上，直接照着念就行了。</p><p>有的时候讲稿太长了，而且是一些解释性的东西，这种就不建议全部贴到PPT上，可以挑一些重点放到PPT上，其他内容等到讲的时候再详细去说。</p><h1 id="确认内容"><a href="#确认内容" class="headerlink" title="确认内容"></a>确认内容</h1><p>PPT不要赶在deadline时才完成初稿。有些情况下，你需要跟领导确认内容，所以要留出返工的时间。</p><h1 id="本系列文档"><a href="#本系列文档" class="headerlink" title="本系列文档"></a>本系列文档</h1><ul><li><a href="/2020/02/20/how-to-write-document/">如何写好软件文档</a></li><li><a href="/2020/10/24/how-to-draw-graph/">如何画架构图</a></li><li><strong>如何做PPT</strong></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;做PPT还不简单吗？拿PowerPoint（WPS演示）捅一捅，PPT不就出来了吗？&lt;/p&gt;
&lt;p&gt;如果阅读过本系列前两篇文章《&lt;a href=&quot;/2020/02/20/how-to-write-document/&quot;&gt;如何写好软件文档&lt;/a&gt;》和《&lt;a href=&quot;/2020/10/24/how-to-draw-graph/&quot;&gt;如何画架构图&lt;/a&gt;》，肯定就知道把PPT做好还是需要一点经验的。下面就是PPT的经验分享。&lt;/p&gt;</summary>
    
    
    
    <category term="一点人生的经验" scheme="https://plusnan.me/categories/%E4%B8%80%E7%82%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="文档" scheme="https://plusnan.me/tags/%E6%96%87%E6%A1%A3/"/>
    
    <category term="PPT" scheme="https://plusnan.me/tags/PPT/"/>
    
  </entry>
  
  <entry>
    <title>养成随手存档的习惯！</title>
    <link href="https://plusnan.me/2022/10/16/archive/"/>
    <id>https://plusnan.me/2022/10/16/archive/</id>
    <published>2022-10-15T16:00:00.000Z</published>
    <updated>2024-01-21T02:56:04.114Z</updated>
    
    <content type="html"><![CDATA[<p>网上的东西很容易消失，而中国网站的东西更容易“404”（“被”消失），虽然我们无法改变中国“404”的制度，但是我们仍然可以学习一些存档与找回存档的操作方法，养成随手存档的习惯，及时备份对自己有意义的内容，尽量降低损失。</p><span id="more"></span><h1 id="随手存档的重要性"><a href="#随手存档的重要性" class="headerlink" title="随手存档的重要性"></a>随手存档的重要性</h1><p>信息会随时消失！</p><p>消失与“被消失”太常见了，例如：</p><ul><li>信息爆炸：旧的信息被新的信息冲刷掉，而信息发布平台的检索功能又不好用，使得旧的信息很难再被找到了。</li><li>主动删除：信息发布者出于各种原因，主动修改甚至删除了信息。</li><li>商业利益：信息平台为了商业利益，开始给免费、公开的内容增加限制，变成“会员专享”。</li><li>违反法律：信息或平台因盗版、诽谤等原因下架。</li><li>政治敏感：信息或平台因“政治敏感”被勒令下架。很多情况下，网站为了自己生存，担心被“查水表”，即使“有关部门”不介入，他们也会主动删除某些与官方相左的信息。</li><li>运营问题：网站升级、改版，内容发生变化，历史数据丢失。再过几年，网站经营不善，公司倒闭，网站关闭了。</li></ul><p>有的时候，信息消失得还很快。当你还没看完全文的时候，审核员早已让内容消失了。手速慢一点的话，也不过是几分钟到几小时的事情。</p><p>国内网站由于各种原因，信息消失速度通常很快，但是国外网站也不代表绝对安全：例如触犯了国外平台的规则（侵权），或者信息发布者在国内，而且被警察请去喝茶了，内容也有可能消失。</p><h1 id="如何存档"><a href="#如何存档" class="headerlink" title="如何存档"></a>如何存档</h1><p>根据不同情况，可以考虑不同的存档方法。需要记住的是，如果你认为信息有意义，那么要养成随手存档的习惯，而不要简单地点赞、收藏、转发，否则等内容消失的时候就麻烦了。</p><h2 id="截屏、拍照或录像"><a href="#截屏、拍照或录像" class="headerlink" title="截屏、拍照或录像"></a>截屏、拍照或录像</h2><p>具体操作方法请自行Google搜索，这里不再解释。</p><h2 id="互联网档案馆"><a href="#互联网档案馆" class="headerlink" title="互联网档案馆"></a>互联网档案馆</h2><p><span class="exturl" data-url="aHR0cHM6Ly9hcmNoaXZlLm9yZy8=">archive.org<i class="fa fa-external-link-alt"></i></span>（互联网档案馆，又名时光机）与<span class="exturl" data-url="aHR0cDovL2FyY2hpdmUuaXMv">archive.is<i class="fa fa-external-link-alt"></i></span>是两个常用的归档网站。只要在里面输入网址，点击保存，页面内容就会被抓取下来。之后也可以通过这两个网站查阅网站存档记录。因为这样非常有利于防止“404”，所以很早就获得了墙的认证。</p><p>截图与转载都可以造假，而归档网站保存的是网页原貌、网页原始网址与原始时间，不太可能造假。</p><p>建议在浏览器安装一个归档插件，例如Save To The Wayback Machine（<span class="exturl" data-url="aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvc2F2ZS10by10aGUtd2F5YmFjay1tYWNoaS9lZWJwaW9hYWlsYmpvam1kYm1scG9tZmdpam5sY2Vtaz9obD1lbg==">Chrome版<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9hZGRvbnMubW96aWxsYS5vcmcvZW4tVVMvZmlyZWZveC9hZGRvbi9zYXZlLXRvLXRoZS13YXliYWNrLW1hY2hpbmUv">Firefox版<i class="fa fa-external-link-alt"></i></span>），这样就方便随手归档了。一旦页面404，你和其他人都可以用此插件方便地查阅档案馆记录。</p><p>如果网站需要登录才能访问，或者限制国外IP访问，那么归档起不到作用了。而且，archive.org会遵守robots规范（User-Agent: ia_archiver），如果网站在robots.txt中明确拒绝归档，那么archive.org就不会保存内容，需要改用archive.is存档。</p><h2 id="笔记软件"><a href="#笔记软件" class="headerlink" title="笔记软件"></a>笔记软件</h2><p>Evernote（中国版称作“印象笔记”，账号内容与国际版隔离）与OneNote是两个笔记软件，均具备收藏网页内容的功能。</p><p>Evernote对网页内容提取得比较好。像新闻资讯等网站，它会聪明地提取出标题与正文，基本上不需要进一步加工精炼。然而，Evernote免费账号只允许登录两个设备，笔记容量也有很大限制，而且中国版的“印象笔记”不支持分享功能。</p><p>OneNote提取，可以选择截图、纯文字或选区。个人感觉在内容提取方面不如Evernote好用，但是在笔记整理方面优于Evernote。</p><p>个人建议：如果想提取图文，不想直接截图，那么用Evernote保存、抓取内容。如果要进一步整合资源，形成论文、报告什么的，就切换到OneNote整理。</p><h2 id="下载到本地"><a href="#下载到本地" class="headerlink" title="下载到本地"></a>下载到本地</h2><p>将网上的内容下载到本地是最安全的方法之一。只要磁盘没坏，没感染病毒，没被勒索软件勒索，没有误删，资源就不会丢失。</p><p>如果要保存网页，只需轻轻地Ctrl+S，然后点击保存就可以了。</p><p>但是，保存完成后记得检查一下，因为有些网站会设法阻止你保存东西，存完也是一堆乱七八糟的程序代码。像音乐网站、视频网站等特殊网站，干脆不能Ctrl+S（除非你只想保存评论区），需要找一些专用的下载工具才行。</p><p>有些平台需要一些特殊方法下载，例如：</p><ul><li>微博帖子：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmxpdWd1b2ZlbmcuY29tL3AvNTY3MA==">Octoman<i class="fa fa-external-link-alt"></i></span></li><li>微信公众号：<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzIyMTE0NDUx">https://www.zhihu.com/question/2211445<i class="fa fa-external-link-alt"></i></span></li><li>音视频：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NvaW1vcnQveW91LWdldA==">you-get<i class="fa fa-external-link-alt"></i></span></li></ul><h2 id="爬虫程序"><a href="#爬虫程序" class="headerlink" title="爬虫程序"></a>爬虫程序</h2><p>如果你会编程，那么可以利用网络爬虫收集信息。到网上搜一些爬虫程序的案例，自己写个爬虫扒网站内容。有需要的话可以再买台服务器，或者找个闲置电脑，定时跑程序，实现自动归档。</p><p>如果要爬特定网站，也可以在搜索时把网站名加上，看看有没有现成的程序，节省时间。</p><h1 id="如何找回已删内容"><a href="#如何找回已删内容" class="headerlink" title="如何找回已删内容"></a>如何找回已删内容</h1><h2 id="互联网档案馆-1"><a href="#互联网档案馆-1" class="headerlink" title="互联网档案馆"></a>互联网档案馆</h2><p>如果你记得网站的网址，可以到<span class="exturl" data-url="aHR0cHM6Ly9hcmNoaXZlLm9yZy8=">archive.org<i class="fa fa-external-link-alt"></i></span>或<span class="exturl" data-url="aHR0cDovL2FyY2hpdmUuaXMv">archive.is<i class="fa fa-external-link-alt"></i></span>等网站碰运气，看有没有人提交过存档。</p><h2 id="Google搜索"><a href="#Google搜索" class="headerlink" title="Google搜索"></a>Google搜索</h2><p>如果你还记得资料的名字或内容，可以将名字或文章中的一两句话用作Google搜索的关键词，查看网上是否还有转载与备份。有时虽然内容已删，但Google自己还留着一个快照，可以在快照失效之前尽快把内容导出来。</p><h2 id="专项计划"><a href="#专项计划" class="headerlink" title="专项计划"></a>专项计划</h2><p>有些网站会专门搜集容易遭到删除，甚至已经遭到删除的信息：</p><ul><li><span class="exturl" data-url="aHR0cHM6Ly9jaGluYWRpZ2l0YWx0aW1lcy5uZXQvY2hpbmVzZS8=">中国数字时代<i class="fa fa-external-link-alt"></i></span>：该网站由加州大学伯克利分校信息学院“逆权力实验室”（Counter-Power Lab）提供技术支持，重点关注中国的言论审查，每天会收集一些媒体与自媒体等方面的时政类内容。有时可以在该网站找到一些已经在中国被全网删除的内容或言论。</li><li><span class="exturl" data-url="aHR0cHM6Ly9mcmVld2VpYm8uY29tLw==">自由微博<i class="fa fa-external-link-alt"></i></span>：该网站会专门搜集已经遭到屏蔽的微博内容。</li><li><span class="exturl" data-url="aHR0cHM6Ly9mcmVld2VjaGF0LmNvbS8=">自由微信<i class="fa fa-external-link-alt"></i></span>：该网站专门搜集已经遭到屏蔽的微信公众号内容。</li></ul><h1 id="不要随便分享存档"><a href="#不要随便分享存档" class="headerlink" title="不要随便分享存档"></a>不要随便分享存档</h1><p>为个人研究、收集资料而进行存档是正常操作，但是如果你计划传播资料，则要考虑传播的风险。</p><p>如果信息是因为违反法律原因消失，例如泄漏隐私、泄漏商业机密、诽谤生事等，你再将消失的信息拿出来传播，你很可能要负法律责任。另外要注意当地法律规定，某些内容（例如儿童色情）仅仅是持有就已经触犯法律了。</p><p>如果信息是因为政治原因消失，你再拿出来传播，则要小心政治后果：例如“端点星”是一个专门整理国内被删内容的网站，然而在2020年4月19日，负责运营的三个志愿者就被警方以“寻衅滋事”逮捕了。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li>《<span class="exturl" data-url="aHR0cHM6Ly90ZWxlZ3JhLnBoLyVFNyVBQyVBQyVFNSU4RCU4MSVFNCVCQSU4QyVFOCU4QSU4Mi00MDQtJUU0JUJGJUExJUU2JTgxJUFGJUU0JUJGJTlEJUU1JUFEJTk4LTAyLTIx">404信息保存<i class="fa fa-external-link-alt"></i></span>》</li><li>《<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNodXppeWltaW4ub3JnLzM2MA==">如何找回被删除的网页/新闻<i class="fa fa-external-link-alt"></i></span>》</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;网上的东西很容易消失，而中国网站的东西更容易“404”（“被”消失），虽然我们无法改变中国“404”的制度，但是我们仍然可以学习一些存档与找回存档的操作方法，养成随手存档的习惯，及时备份对自己有意义的内容，尽量降低损失。&lt;/p&gt;</summary>
    
    
    
    <category term="一点人生的经验" scheme="https://plusnan.me/categories/%E4%B8%80%E7%82%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="archive" scheme="https://plusnan.me/tags/archive/"/>
    
  </entry>
  
  <entry>
    <title>外出开个小会，领导不会教你的事情</title>
    <link href="https://plusnan.me/2022/09/11/meeting/"/>
    <id>https://plusnan.me/2022/09/11/meeting/</id>
    <published>2022-09-10T16:00:00.000Z</published>
    <updated>2024-01-21T15:42:48.900Z</updated>
    
    <content type="html"><![CDATA[<p>当你作为小工，跟着领导外出开个小会，或者你成为领导，带着一个小弟出去开会，那个当小弟的要注意什么事情呢？</p><span id="more"></span><h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><p>一般情况下，会务会组织签到工作。如果你不是会务，会议又有一定的重要意义（例如处于工程节点），可以尝试找负责人，并且给签到表拍个照，以便日后判断都有谁参会了。</p><h1 id="拍照"><a href="#拍照" class="headerlink" title="拍照"></a>拍照</h1><p>领导通常会让小工给会议拍几张照片。然而，照片不要随便拍拍就完事，因为一方面要证明开过会议，另一方面要证明谁参加过，或者谁没有参加过这场会议。因此：</p><ol><li>等大家都坐稳之后再拍照</li><li>多换几个角度拍照</li><li>力求能在照片中看清每个与会者，以便日后辨认</li><li>有姓名牌子时，可适当抬高手机镜头，把他们的名字一同拍下来</li></ol><p>如果需要用于宣传，或者未来有可能用于宣传，可以拍几种正面角度的照片，包括从正面看会场、从正面看领导的照片，不过最好让领导要求单位派专业的人来做这件事。</p><h1 id="录音"><a href="#录音" class="headerlink" title="录音"></a>录音</h1><p>会上要带一个录音设备，有条件的还可以上录音笔，甚至有转文字功能的那种。</p><p>除了录音以外，建议同时记录时间，例如9:30开始录音，9:40领导讲话，9:50张三做汇报，10:10李四发言……这样回放录音时就容易定位。</p><p>开会之前别忘了调试录音设备，以免什么都没录清楚。</p><h1 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h1><p>会议要做记录，而且尽量每个人都做记录，这样的话，当有同事溜号的时候，就能通过其他同事的记录补充完善。</p><p>开完会议要马上整理记录内容，并且提取要点，形成正式记录。不要以为有录音就没事，因为过几天你可能就会全部忘记，甚至都不记得对方领导是谢顶还是秃子了。</p><p>不要过度依赖转文字功能，如果会上有人有地方口音，再来几句方言，那么你那里出来的可能就是“乱码”。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;当你作为小工，跟着领导外出开个小会，或者你成为领导，带着一个小弟出去开会，那个当小弟的要注意什么事情呢？&lt;/p&gt;</summary>
    
    
    
    <category term="项目管理" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
    <category term="沟通" scheme="https://plusnan.me/tags/%E6%B2%9F%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>如何避免被假资讯蒙蔽</title>
    <link href="https://plusnan.me/2022/08/15/get-information/"/>
    <id>https://plusnan.me/2022/08/15/get-information/</id>
    <published>2022-08-14T16:00:00.000Z</published>
    <updated>2024-01-21T10:04:33.578Z</updated>
    
    <content type="html"><![CDATA[<p>互联网每时每刻都有海量信息，有的是真实信息，有的是虚假信息。而虚假信息又有很多类别，例如博取流量、误导他人、设置骗局、发动信息战，等等，轻者影响我们的正常认知，重者让我们蒙受各种损失。我们如何来辨别其中的虚假信息，避免自己受蒙蔽呢？</p><span id="more"></span><h1 id="从欺骗手法反向思考"><a href="#从欺骗手法反向思考" class="headerlink" title="从欺骗手法反向思考"></a>从欺骗手法反向思考</h1><p>我们可以了解一些常见的欺骗手法，如果能够识别出可疑信息，从而提高警惕，受蒙蔽的概率就会降低。</p><p>当你看到的信息具有以下特征时，就应该多加小心了：</p><h2 id="带有强烈感情色彩"><a href="#带有强烈感情色彩" class="headerlink" title="带有强烈感情色彩"></a>带有强烈感情色彩</h2><p>制造虚假信息，一种常见的方法是调动你的情绪。当你带有强烈情绪的时候，你的思维就容易变得不像平常一样理智，如果在这种情况下再给你灌输某些观点，你就更容易顺着信息发布者的意图来思考，接受他们的观点。</p><p>那么发布者如何调动你的情绪呢？诉诸感情，在信息中夹杂大量感情色彩，具体来讲，就是多谈情绪和感情，并且使用明显带有感情色彩（褒义词、贬义词）的词语来叙事，从而制造出一种倾向性。</p><p>在某些网络平台中，发布者还可以通过控制评论的方式，展示具有倾向性的评论，屏蔽理性或持不同意见的评论，使得这种感情色彩更加强烈，强化传播效果。</p><p>因此，当你看到某条信息以后心里产生了强烈的情绪，例如愤怒、激动、急躁、感动等等，你就要多加留意了。</p><h2 id="阴谋论"><a href="#阴谋论" class="headerlink" title="阴谋论"></a>阴谋论</h2><p>阴谋论有一个重要特征，就是认为众多事件都是由一个“神秘团体”来操纵的，例如具名的“共济会”，或者不具名的“个别人”、“某些势力”。这些团体会在全世界，或者世界的某个地区来“下一盘大棋”，通过一系列“操作”来达到“不可告人的目的”。由于阴谋论能够自圆其说，而且很难证实（证明它是真的）或证伪（证明它是假的），所以阴谋论往往有自己的市场。</p><p>那么如何对待阴谋论呢？</p><ul><li>首先要能够识别出阴谋论：有一个“组织”或“团体”、强调暗中“操纵”、逻辑严密、能够把各种事情串起来。</li><li>接下来要找到阴谋论的两个漏洞：缺乏具体证据，缺乏交叉验证。<ul><li>缺乏具体证据：假如信息说是“某团体暗中支持”，那么这个团体叫什么名字？负责人是谁？支持是在什么时间、以何种方式支持的？有泄漏出来的照片、文件等证据吗？如果是“外国势力”，他们不可能特意用中文，所以它们的原文是什么呢？</li><li>缺乏交叉验证：为了编造事件，有些人会另外“制造”证据。然而，一件值得关注的事情，通常会有不同的人（例如不同新闻媒体）以不同的渠道来进行调查，反过来说，如果大家对这件事情的说法都差不多，缺乏不同的口径，也会说明事情不靠谱。</li></ul></li></ul><p>如果你所看到的信息符合以上两个特点，那么当作小说来看就好，别当真。</p><h2 id="只说一半真话"><a href="#只说一半真话" class="headerlink" title="只说一半真话"></a>只说一半真话</h2><p>最近几年，网络经常出现舆论事件“反转”，甚至“反转”后再“反转”的情况。为什么会出现这种情况呢？</p><p>假设当事人没有撒谎，那么就说明当事人只选择了对自己有利的部分来进行发布，隐瞒了对自己不利的信息，而很多网民属于情绪驱动，所以事态就在未经核实的情况下发酵起来。当事件更多细节被挖出之后，网民得知了事件的全貌，于是就发生了“反转”。只说一半真话，虽然不是撒谎，但其实也属于不诚实，操作不当也会引起反噬。</p><p>再举一个例子，我们经常会知道谁谁谁创业成功，挣了多少钱，然而这种报道通常也是只讲一半真话：一方面，创业成功需要运气，甚至需要关系之类见不得人的事情，不是单纯个人努力的结果；另一方面，创业有大量的失败者，而且人数远超成功者，新闻媒体不会挑这些人来报道。</p><p>所以当你看到某类事件时，不要武断地认定对错成败，因为背后可能有着你所不知道的隐情，所以最好等了解事件的全貌之后再下结论。</p><h2 id="断章取义"><a href="#断章取义" class="headerlink" title="断章取义"></a>断章取义</h2><p>很多言论，不能单纯从言论本身来判断讲话者的看法或立场。看一段话要考虑上下文，听一段讲话要考虑说话者的背景，他可能只是在针对特定的问题来进行评论，不代表一般情况。</p><p>所以当你看到谁发表了不合常理的言论时，哪怕是“有图有真相”、“有视频有真相”，也要留意是不是被剪辑，或者被错误解读了。</p><h1 id="从信息来源思考"><a href="#从信息来源思考" class="headerlink" title="从信息来源思考"></a>从信息来源思考</h1><p>评估信息的真实性，还要看信息的来源。一般来说，信息来源越权威，信息越可靠。</p><h2 id="官方渠道"><a href="#官方渠道" class="headerlink" title="官方渠道"></a>官方渠道</h2><p>官方渠道，例如政府机构、行业协会、公司发布会，都有一些专业的消息发布者。他们在发布信息之前，要在单位内部进行审核，确认内容无误之后才会公诸于众，因此他们正式发布的内容可以代表他们的立场。</p><p>虽然官方消息通常是可靠的，但不代表一定是真实的，例如某些政府或公司会否认自己的问题，掩盖自己的丑闻，在某些问题上采用统一口径，等等。所以不能轻信官方消息，该怀疑的也要怀疑，该核实的也要核实。</p><h2 id="传统媒体"><a href="#传统媒体" class="headerlink" title="传统媒体"></a>传统媒体</h2><p>传统媒体，例如国内外的新闻机构，他们一般有专业的编辑团队，能够亲自去调查事件，并且对记者的报道内容把关，所以他们的信息往往更加可靠。</p><p>需要注意的是，<strong>媒体是可以有立场的，所以他们可能会基于自己的立场，对事件的报道进行有倾向性的加工</strong>，例如</p><ul><li>夸大或缩小影响：吹牛，或者大事化小</li><li>选择性报道：将事情简单地“二极管”化，并且只挑正面或反面，而回避另一面</li><li>在叙述手法上做手脚：不使用中立语气，而是使用明显的褒义词或贬义词来报道</li></ul><p>另一方面，媒体不光有事实报道，还会有评论内容，例如社评和个人评论，评论不是单纯的事实报道，所以看媒体报道也要看清楚作者是谁。</p><p>对于政治方面的媒体，中文维基百科用户进行了很多讨论，形成了《<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvV2lraXBlZGlhOiVFNSU4RiVBRiVFOSU5RCVBMCVFNiU5RCVBNSVFNiVCQSU5MC8lRTUlQjglQjglRTglQTclODElRTYlOUMlODklRTQlQkElODklRTglQUUlQUUlRTYlOUQlQTUlRTYlQkElOTAlRTUlODglOTclRTglQTElQTg=">常见有争议来源列表<i class="fa fa-external-link-alt"></i></span>》，由于参与讨论的用户来自不同地区，他们持有各种政治立场，甚至互相对立，讨论时常伴随各种拉锯战，但最终还能形成有意义的结果，因此可以认为这个列表的结论比较客观，不会偏袒任何一方。分析同一事件时，特别是跟政治有关的事件时，最好挑一些立场不同的媒体来进行综合评估。</p><h2 id="社交媒体"><a href="#社交媒体" class="headerlink" title="社交媒体"></a>社交媒体</h2><p>社交媒体很多，例如墙内的微博、微信、抖音、小红书、Bilibili，以及墙外的Twitter、Facebook、Telegram等。这些社交媒体，只要注册账号就能发布信息，因此里面的言论仅供参考。</p><p>有些人会根据社交媒体言论的倾向来判断形势，然而你所看到的，不能代表现实情况，因为社交媒体已经形成大大小小的“信息茧房”，平台会采用大数据技术，分析你的浏览记录，推送你经常关注的内容，甚至连评论区都选择性展示和屏蔽，使你看到的都是你所认同的信息。另外有些平台或作者也会积极地删帖封号，或者引入水军淹没评论区，使内容全部都是有特定倾向性的言论。</p><p>那么怎样比较可靠呢？一方面，可以找这些平台中的权威媒体，他们往往带有认证标志，另一方面，如果社交媒体中的提到的事情具备新闻价值，新闻媒体也会进行报道，而且他们会在核实之后才发布信息。所以遇到“爆料”时，我们可以“让子弹飞一会儿”。</p><h2 id="自媒体"><a href="#自媒体" class="headerlink" title="自媒体"></a>自媒体</h2><p>很多所谓的“媒体”其实是自媒体，从技术上讲，他们也是社交媒体中的账号，但正是因为他们比其他用户更像“媒体”，所以才得名“自媒体”。</p><p>自媒体有一个特点是门槛很低，低到注册一个账号，做一些简单的认证，就可以去平台上发布信息了。像今日头条中的“新闻”，当你仔细查看作者名字的时候，可以看到各种乱七八糟的名字，这其实就是自媒体。</p><p>自媒体可以做的事情很多，大到新闻报道，小到个人分享，使网络信息更加丰富。然而，像新闻和评论这样的信息，是需要具备一定专业水平才能做的，所以看自媒体节目时，也要了解作者的背景，例如做哪些行业的，然后再决定是否关注。</p><p>像今日头条、抖音这样的平台，不要当作权威新闻来源，就当作故事汇好了。如果作者是匿名的，从未介绍过个人经历，发的视频是机器语音，还要去报道国家大事，那么最好换一个权威一些的平台。现在人工智能技术那么发达，你怎么能保证他的内容不是AI生成出来的呢？</p><h1 id="从资讯类型思考"><a href="#从资讯类型思考" class="headerlink" title="从资讯类型思考"></a>从资讯类型思考</h1><p>信息，是一种客观性的叙述，例如什么时间在什么地点发生了什么事情。信息存在真假，不存在对错。</p><p>观点，是一种主观性的看法，例如什么事情是正确的，什么事情是错误的，应该如何，不应该如何。观点可以讨论对错，但不存在真假。</p><p>新闻也可以分为两类，一类是报道，主要目的是传递信息，另一类是评论，主要目的是发表观点。但这两者又不是割裂开的，例如评论通常要论证某个事情是正确或错误的，那么他就需要选择客观事实来进行推导、证明。</p><p>如果你想客观理性地去做分析，你就需要能够区分信息和观点。特别是当你需要做决策时，你应该全方面地选取“信息”而非“观点”来进行判断。真实的报道是你决策的依据，而评论其实是别人的推理，应当只是当做参考。</p><h1 id="查证信息"><a href="#查证信息" class="headerlink" title="查证信息"></a>查证信息</h1><h2 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h2><p>要善于使用搜索引擎来检索信息，而且要掌握一些搜索的技巧。</p><p>举个例子，当你想了解某个新闻事件的情况时，可以用“XX地区 事件”这样的关键词搜索，初步收集信息。然后再加上一些关键词，例如当事人名字，“XX地区 事件 张三”来进一步缩小范围。如果是近期发生，还可以再从搜索结果中增加时间条件。</p><p>如果你只需要在特定网站内进行搜索，可以增加“site:xxx.com”的关键词，例如“xx 事件 site:twitter.com”，这样搜索结果就都是Twitter的贴文了。</p><p>由于“谎言重复一千遍就是真理”，所以你要留意搜索结果的差异性，必要时可以通过更换语言或限制语言来进行检索。</p><p>关于搜索引擎还需要注意两个问题：</p><ol><li>搜索引擎的靠谱程度：魏则西事件揭示了莆田系的存在，还说明了“人一百度会死”。国内网站受利益驱动，加上法律限制，一碰到特定话题就直接没有结果，经常搜不到需要的内容，所以要学会翻墙搜索。</li><li>搜索的局限性：像微博、微信公众号、Facebook这样的网站会限制用户访问，甚至必须登录之后才能查看内容，所以搜索引擎也并非万能。</li></ol><h2 id="交叉验证"><a href="#交叉验证" class="headerlink" title="交叉验证"></a>交叉验证</h2><p>简单来讲，如果一个信息，被多个彼此没有关联的媒体，以不同的角度来进行了报道，也就是被交叉验证，那么它就往往比较可靠。</p><p>如何来认定交叉验证的可靠性呢？这需要一些专业知识，但是我们可以看两个极端的例子：</p><ul><li>如果几家媒体都在报道同一件事情，但是它们来自好几个国家，这些国家言论自由程度很高，而且媒体对事件报道明显不是相同的口气，甚至立场相左，说明他们没有关联。</li><li>如果几家媒体都在报道同一件事情，但是它们都是一个国家的，而且媒体发表的内容也差不多，甚至一个字都不差，那么可能是“通稿”，可能是几家媒体立场差不多，也可能是有人在带风向。</li></ul><h2 id="寻找反面信息"><a href="#寻找反面信息" class="headerlink" title="寻找反面信息"></a>寻找反面信息</h2><p>当你要进行重大决策的时候，例如买房、投资理财，你不能光从正面来思考问题，否则很可能会掉进陷阱。</p><p>以买房为例，很容易就能找到开发商和所在片区的正面评价，片区发展前景多么好，开发商多么可靠之类的，但是，事情总会有两面性，所以你要收集一些反面信息，例如片区的问题，开发商的维权事件等等。</p><p>这些反面信息可能会被压制，所以不一定能找得到，但是一旦找到了，而且不是简单的骂街，而是具备一定的信息，认真核实反面信息的内容，评估其影响程度。千万不要因为想买，就只相信自己想看到的话，必要时甚至要及时止损。</p><p>同样道理，当评论是一面倒的负面信息时，也有可能是有人在“带节奏”、“带风向”，所以要关注与其相关的正面信息。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;互联网每时每刻都有海量信息，有的是真实信息，有的是虚假信息。而虚假信息又有很多类别，例如博取流量、误导他人、设置骗局、发动信息战，等等，轻者影响我们的正常认知，重者让我们蒙受各种损失。我们如何来辨别其中的虚假信息，避免自己受蒙蔽呢？&lt;/p&gt;</summary>
    
    
    
    <category term="一点人生的经验" scheme="https://plusnan.me/categories/%E4%B8%80%E7%82%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>见人说人话，见鬼说鬼话</title>
    <link href="https://plusnan.me/2022/07/20/expression/"/>
    <id>https://plusnan.me/2022/07/20/expression/</id>
    <published>2022-07-19T16:00:00.000Z</published>
    <updated>2024-01-21T15:43:50.679Z</updated>
    
    <content type="html"><![CDATA[<p>在微博上看到了这样一个故事：</p><blockquote><p>跟讲科学的人谈科学，和信玄学的人谈玄学才是万全之策。<br>妇产科接一产妇，要求明天剖宫产，还详细到几点几分，但是她现在还没到预产期，一切都是正常指标，没有手术指征，医生不能给她提前剖，她和家人非要，说家里人找大师给算了，孩子明天那个时间出生命格好。<br>医生解释了半天，不听，非要剖，不然就去投诉医生态度不好……<br>主任听说了，来解围说：人的命格天注定，瓜熟蒂落，瓜熟蒂落，你这瓜不熟，强行摘下，也就是说想逆天改命，要不得，没那个道行，强行如此，会被反噬，到时候，你们一家都不够赔。<br>产妇和家人一商量，觉得主任说的对，走了……<br>医生说，那一刻，觉得主任万丈光芒。</p></blockquote><p>技术人员在与他人沟通时，经常会出现陷入自己逻辑的现象，导致沟通困难。本文借助这个故事，讲一讲与人沟通的一些技巧。</p><span id="more"></span><h1 id="了解对方的知识体系与话语体系"><a href="#了解对方的知识体系与话语体系" class="headerlink" title="了解对方的知识体系与话语体系"></a>了解对方的知识体系与话语体系</h1><p>技术人员之间进行沟通，由于双方对技术都有所了解，因此使用行话可以很容易沟通，但是一般人并不了解这些技术，使用行话自然会让他们困惑。</p><p>有一些人受自身所受教育限制，或者出于维护自己面子的需要，他会有一套自己的思想理论，而且会坚持这些理论。如果你的理论与他的理论发生冲突，自然容易发生争执。</p><p>因此，面对知识体系不同的人，不要急着用自己的技术理论进行沟通，更不要急着否定对方，而是先试探对方对技术的理解情况，了解他的理论和语言。</p><p>以前文故事为例，产妇家提到了“大师”，说明他们家不懂任何现代医学，而且具有封建迷信思想，因此不能用现代医学理论和术语来沟通，而是要用一些传统医学或封建迷信的语言来沟通。</p><h1 id="抓住主要矛盾，必要时切换思路"><a href="#抓住主要矛盾，必要时切换思路" class="headerlink" title="抓住主要矛盾，必要时切换思路"></a>抓住主要矛盾，必要时切换思路</h1><p>沟通的目的是解决问题，但解决问题之前需要先了解问题是什么，哪些是主要矛盾，哪些不是主要矛盾。</p><p>以前文故事为例，产妇家的诉求是早产，而做技术的人就很容易讲自己的话，然后对自己的观点进行进一步解释，例如早产需要哪些条件、对方不符合哪些条件、后果如何之类，而对方会因为听不懂，无法理解，导致沟通陷入僵局。</p><p>当沟通陷入僵局时，就不要再沿着之前的思路进行思考，而是要直接跳出这种逻辑，重新换一个思路：产妇为什么会要求早产呢？其实是因为他们听了“大师”的话，因此主要矛盾实际上不是如何否定早产，而是如何证明“大师”是错的。</p><h1 id="翻译成对方能理解的话"><a href="#翻译成对方能理解的话" class="headerlink" title="翻译成对方能理解的话"></a>翻译成对方能理解的话</h1><p>搞清楚问题之后，不要直接去解答问题，而是要把你的观点整理一下，翻译成他们能够理解的词语。特别是要否定对方时，要先顺着对方的思维说话，当对方接受以后再引出自己的观点。</p><p>主任来了，他的经验丰富，知道对方只能理解“玄学”理论，因此用玄学理论与他们沟通。主任先提出“人的命格天注定”的论断，而且不说“没到预产期”，而是将其换成“你这瓜不熟，强行摘下，也就是说想逆天改命”，让对方很容易理解。在此基础上，主任稍微恐吓一下，“要不得，没那个道行，强行如此，会被反噬”，因为大师再厉害，也不可能超越天命，所以很容易就说服了对方。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在微博上看到了这样一个故事：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;跟讲科学的人谈科学，和信玄学的人谈玄学才是万全之策。&lt;br&gt;妇产科接一产妇，要求明天剖宫产，还详细到几点几分，但是她现在还没到预产期，一切都是正常指标，没有手术指征，医生不能给她提前剖，她和家人非要，说家里人找大师给算了，孩子明天那个时间出生命格好。&lt;br&gt;医生解释了半天，不听，非要剖，不然就去投诉医生态度不好……&lt;br&gt;主任听说了，来解围说：人的命格天注定，瓜熟蒂落，瓜熟蒂落，你这瓜不熟，强行摘下，也就是说想逆天改命，要不得，没那个道行，强行如此，会被反噬，到时候，你们一家都不够赔。&lt;br&gt;产妇和家人一商量，觉得主任说的对，走了……&lt;br&gt;医生说，那一刻，觉得主任万丈光芒。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;技术人员在与他人沟通时，经常会出现陷入自己逻辑的现象，导致沟通困难。本文借助这个故事，讲一讲与人沟通的一些技巧。&lt;/p&gt;</summary>
    
    
    
    <category term="项目管理" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
    <category term="沟通" scheme="https://plusnan.me/tags/%E6%B2%9F%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>基于Spring Boot和若依框架实现可灵活配置的动态接口</title>
    <link href="https://plusnan.me/2022/06/08/dynamic-controller/"/>
    <id>https://plusnan.me/2022/06/08/dynamic-controller/</id>
    <published>2022-06-07T16:00:00.000Z</published>
    <updated>2023-11-13T13:45:38.527Z</updated>
    
    <content type="html"><![CDATA[<p>很多业务都是以增删改查为基础，利用若依框架，已经能够实现代码的快速生成，但需要在后端部署一些VO、Controller和Service，如需维护，依然要修改多个文件，而且要升级和重启后端系统。</p><p>如果业务只是简单的SQL或脚本，我们能否进一步简化，实现接口动态维护，不停机就能快速配置好系统接口呢？</p><span id="more"></span><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>如在生产系统中使用，可直接使用更为成熟的产品，例如<span class="exturl" data-url="aHR0cHM6Ly93d3cuc3Nzc3Nzc3Mub3JnLw==">magic-api<i class="fa fa-external-link-alt"></i></span>（<span class="exturl" data-url="aHR0cHM6Ly9tYWdpYy1hcGkuc3Nzc3Nzc3Mub3JnLmNuL21hZ2ljL3dlYi9pbmRleC5odG1s">在线预览<i class="fa fa-external-link-alt"></i></span>）。</p><h1 id="功能设计"><a href="#功能设计" class="headerlink" title="功能设计"></a>功能设计</h1><p>系统主要实现以下功能：</p><ol><li>接口管理：向开发者提供接口信息管理功能，能够创建和维护接口，动态管理接口名称、接口URL、接口类型、输入参数、代码等信息。当接口数量较多时，可通过整理分组来保持可维护性。</li><li>接口调用：在接口管理功能设置好接口后，开发者无需重启后端应用，即可调用相应接口。调用时，系统后台对调用者身份和权限进行校验，校验通过后执行相应代码，返回运行结果。</li></ol><p>接口支持以下技术特性：</p><ol><li>快速配置，保存即更新，无需停机维护。</li><li>可根据需要设置或更改接口URL。</li><li>可设置或限制接口的访问方式，如GET、POST。</li><li>支持提供输入参数，并支持通过URL、JSON、form等多种方式传入参数。</li><li>支持SQL和JavaScript（要求Java版本小于15）两种类型的代码。SQL支持MyBatis的动态标签，JavaScript可获取Spring对象。</li><li>支持授权和权限验证。</li><li>支持切换数据源。</li></ol><h1 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h1><p>设计两张表，一个为接口内容（interface_item），存储所有接口的代码；另一个为接口分组（interface_group），便于归类管理所有接口。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> interface_item</span><br><span class="line">(</span><br><span class="line">    id          <span class="type">BIGINT</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键&#x27;</span></span><br><span class="line">        <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    name        <span class="type">VARCHAR</span>(<span class="number">255</span>)  <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;名称&#x27;</span>,</span><br><span class="line">    code        <span class="type">VARCHAR</span>(<span class="number">255</span>)  <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;接口名&#x27;</span>,</span><br><span class="line">    type        TINYINT       <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;类型，1-sql，2-js&#x27;</span>,</span><br><span class="line">    description TEXT          <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;描述&#x27;</span>,</span><br><span class="line">    <span class="keyword">method</span>      <span class="type">VARCHAR</span>(<span class="number">255</span>)  <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;GET&#x27;</span> COMMENT <span class="string">&#x27;请求方式,GET/POST&#x27;</span>,</span><br><span class="line">    group_id    <span class="type">BIGINT</span>        <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;分组&#x27;</span>,</span><br><span class="line">    group_code  <span class="type">VARCHAR</span>(<span class="number">255</span>)  <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;分组&#x27;</span>,</span><br><span class="line">    datasource  <span class="type">VARCHAR</span>(<span class="number">255</span>)  <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数据源&#x27;</span>,</span><br><span class="line">    is_enable   TINYINT       <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">1</span> COMMENT <span class="string">&#x27;是否启用&#x27;</span>,</span><br><span class="line">    is_log      TINYINT       <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;是否记录调用日志&#x27;</span>,</span><br><span class="line">    permission  <span class="type">VARCHAR</span>(<span class="number">255</span>)  <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;权限标识,*表示免登录&#x27;</span>,</span><br><span class="line">    param       <span class="type">VARCHAR</span>(<span class="number">1000</span>) <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;输入参数&#x27;</span>,</span><br><span class="line">    program        TEXT       <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;代码内容&#x27;</span>,</span><br><span class="line">    create_by   <span class="type">VARCHAR</span>(<span class="number">255</span>)  <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建人&#x27;</span>,</span><br><span class="line">    create_time DATETIME      <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    update_by   <span class="type">VARCHAR</span>(<span class="number">255</span>)  <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新人&#x27;</span>,</span><br><span class="line">    update_time DATETIME      <span class="keyword">NULL</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span></span><br><span class="line">) COMMENT <span class="string">&#x27;接口项目&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> interface_group</span><br><span class="line">(</span><br><span class="line">    id          <span class="type">BIGINT</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键&#x27;</span></span><br><span class="line">        <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    name        <span class="type">VARCHAR</span>(<span class="number">255</span>)                       <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;名称&#x27;</span>,</span><br><span class="line">    code        <span class="type">VARCHAR</span>(<span class="number">255</span>)                       <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;url&#x27;</span>,</span><br><span class="line">    icon        <span class="type">VARCHAR</span>(<span class="number">255</span>)                       <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;图标&#x27;</span>,</span><br><span class="line">    description <span class="type">VARCHAR</span>(<span class="number">255</span>)                       <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;描述&#x27;</span>,</span><br><span class="line">    parent_id   <span class="type">BIGINT</span>                             <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;上级节点id&#x27;</span>,</span><br><span class="line">    create_by   <span class="type">VARCHAR</span>(<span class="number">255</span>)                       <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建人&#x27;</span>,</span><br><span class="line">    create_time DATETIME <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    update_by   <span class="type">VARCHAR</span>(<span class="number">255</span>)                       <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新人&#x27;</span>,</span><br><span class="line">    update_time DATETIME                           <span class="keyword">NULL</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span></span><br><span class="line">) COMMENT <span class="string">&#x27;接口分组&#x27;</span>;</span><br></pre></td></tr></table></figure><p>设计完成后，可使用平台的“代码生成”功能生成相应的VO、Vue等文件，并将菜单权限导入到数据库中。</p><h1 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h1><p>以若依的<span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20veV9wcm9qZWN0L1J1b1lpLVZ1ZQ==">前后分离版本<i class="fa fa-external-link-alt"></i></span>为例来实现这个功能。下面介绍核心部分代码，完整代码参见<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2luZm5hbi9keW5hbWljLWNvbnRyb2xsZXItZGVtbw==">GitHub<i class="fa fa-external-link-alt"></i></span>。</p><h2 id="解析动态SQL"><a href="#解析动态SQL" class="headerlink" title="解析动态SQL"></a>解析动态SQL</h2><p>利用MyBatis的相应方法，可解析MyBatis标签：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将SQL中的绑定参数传入到该paramMap中</span></span><br><span class="line">Map&lt;String, Object&gt; paramMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析SQL</span></span><br><span class="line"><span class="type">SqlSource</span> <span class="variable">sqlSource</span> <span class="operator">=</span> sqlSessionTemplate.getConfiguration().getLanguageDriver(XMLLanguageDriver.class).createSqlSource(sqlSessionTemplate.getConfiguration(), rawSql, Map.class);</span><br><span class="line"><span class="type">BoundSql</span> <span class="variable">boundSql</span> <span class="operator">=</span> sqlSource.getBoundSql(paramMap);</span><br><span class="line"><span class="type">String</span> <span class="variable">parsedSql</span> <span class="operator">=</span> boundSql.getSql();</span><br><span class="line"></span><br><span class="line"><span class="comment">// SQL语句解析完成</span></span><br><span class="line">ptst = conn.prepareStatement(parsedSql);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入参数</span></span><br><span class="line">List&lt;ParameterMapping&gt; parameterMappings = boundSql.getParameterMappings();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (parameterMappings != <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; parameterMappings.size(); i++) &#123;</span><br><span class="line">        <span class="type">ParameterMapping</span> <span class="variable">parameterMapping</span> <span class="operator">=</span> parameterMappings.get(i);</span><br><span class="line">        <span class="keyword">if</span> (parameterMapping.getMode() != ParameterMode.OUT) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">propertyName</span> <span class="operator">=</span> parameterMapping.getProperty();</span><br><span class="line">            <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> paramMap.get(propertyName);</span><br><span class="line"></span><br><span class="line">            <span class="type">TypeHandler</span> <span class="variable">typeHandler</span> <span class="operator">=</span> parameterMapping.getTypeHandler();</span><br><span class="line">            <span class="type">JdbcType</span> <span class="variable">jdbcType</span> <span class="operator">=</span> parameterMapping.getJdbcType();</span><br><span class="line">            <span class="keyword">if</span> (value == <span class="literal">null</span> &amp;&amp; jdbcType == <span class="literal">null</span>) &#123;</span><br><span class="line">                jdbcType = sqlSessionTemplate.getConfiguration().getJdbcTypeForNull();</span><br><span class="line">            &#125;</span><br><span class="line">            typeHandler.setParameter(ptst, i + <span class="number">1</span>, value, jdbcType);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 准备完成，执行SQL</span></span><br><span class="line"><span class="type">ResultSet</span> <span class="variable">result</span> <span class="operator">=</span> ptst.executeQuery();</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><h2 id="获取SQL执行结果中的字段名"><a href="#获取SQL执行结果中的字段名" class="headerlink" title="获取SQL执行结果中的字段名"></a>获取SQL执行结果中的字段名</h2><p>ResultSet中有一个getMetaData函数，通过该函数可获取到查询结果中的各字段名：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ResultSet</span> <span class="variable">result</span> <span class="operator">=</span> ptst.executeQuery();</span><br><span class="line"><span class="type">ResultSetMetaData</span> <span class="variable">md</span> <span class="operator">=</span> result.getMetaData();</span><br><span class="line"><span class="type">int</span> <span class="variable">columnCount</span> <span class="operator">=</span> md.getColumnCount();</span><br><span class="line"><span class="keyword">while</span> (result.next()) &#123;</span><br><span class="line">    Map&lt;String, Object&gt; rowData = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= columnCount; i++) &#123;</span><br><span class="line">        <span class="comment">// 获取字段名称和结果</span></span><br><span class="line">        rowData.put(md.getColumnLabel(i), result.getObject(i));</span><br><span class="line">    &#125;</span><br><span class="line">    list.add(rowData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态运行JavaScript代码"><a href="#动态运行JavaScript代码" class="headerlink" title="动态运行JavaScript代码"></a>动态运行JavaScript代码</h2><p>Java自带一个名为Nashorn的JavaScript引擎（备注：从Java 15开始已经移除），可通过以下代码运行：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">String code;                        <span class="comment">// 代码</span></span><br><span class="line">Map&lt;String, Object&gt; paramMap;       <span class="comment">// 用户传入的参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="type">ScriptEngine</span> <span class="variable">engine</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ScriptEngineManager</span>().getEngineByName(<span class="string">&quot;JavaScript&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将一些Java对象传入到JS引擎中，以便在JS代码内直接调用</span></span><br><span class="line">engine.put(<span class="string">&quot;xxx&quot;</span>, xxxObj);</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将代码封装至 Main 函数中，在JS代码中可通过 paramMap 获取参数。</span></span><br><span class="line">code = <span class="string">&quot;load(\&quot;nashorn:mozilla_compat.js\&quot;); function Main(paramMap) &#123;\n&quot;</span> + code + <span class="string">&quot;\n&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编译并运行脚本</span></span><br><span class="line"><span class="type">CompiledScript</span> <span class="variable">script</span> <span class="operator">=</span> ((Compilable) engine).compile(code);</span><br><span class="line">script.eval();</span><br><span class="line"></span><br><span class="line"><span class="type">Invocable</span> <span class="variable">inv2</span> <span class="operator">=</span> (Invocable) engine;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 调用函数并传入参数</span></span><br><span class="line">    <span class="keyword">return</span> inv2.invokeFunction(<span class="string">&quot;Main&quot;</span>, paramMap);</span><br><span class="line">&#125; <span class="keyword">catch</span> (NoSuchMethodException e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ScriptException</span>(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="身份和权限校验"><a href="#身份和权限校验" class="headerlink" title="身份和权限校验"></a>身份和权限校验</h2><p>若依已经将身份和权限校验封装为两个Service，引用即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义部分</span></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> TokenService tokenService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> PermissionService ss;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 校验是否登录</span></span><br><span class="line"><span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> ServletUtils.getRequest();</span><br><span class="line"><span class="type">LoginUser</span> <span class="variable">user</span> <span class="operator">=</span> tokenService.getLoginUser(request);</span><br><span class="line"><span class="keyword">if</span> (user != <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="comment">// 设置为当前用户</span></span><br><span class="line">    tokenService.setLoginUser(user);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(<span class="string">&quot;认证失败&quot;</span>, HttpStatus.UNAUTHORIZED);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接口限制权限</span></span><br><span class="line"><span class="keyword">if</span> (StringUtils.isNotEmpty(permission)) &#123;</span><br><span class="line">    <span class="comment">// 进行校验</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">hasPermission</span> <span class="operator">=</span> ss.hasPermi(permission);</span><br><span class="line">    <span class="keyword">if</span> (!hasPermission) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(<span class="string">&quot;无访问权限&quot;</span>, HttpStatus.FORBIDDEN);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 未抛出异常则校验成功</span></span><br></pre></td></tr></table></figure><h2 id="支持多种请求方式"><a href="#支持多种请求方式" class="headerlink" title="支持多种请求方式"></a>支持多种请求方式</h2><p>很简单，在Controller中把各种请求方式都写上即可。如果限定了请求方式，可以在调用invoke之后再进行校验：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;code&#125;&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> AjaxResult <span class="title function_">processGet</span><span class="params">(<span class="meta">@PathVariable(&quot;code&quot;)</span> String code, <span class="meta">@RequestParam</span> Map&lt;String, Object&gt; paramMap)</span> &#123;</span><br><span class="line">    <span class="comment">// GET方式</span></span><br><span class="line">    <span class="keyword">return</span> invoke(<span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, code, paramMap, <span class="string">&quot;GET&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@PostMapping(value = &quot;/&#123;code&#125;&quot;,</span></span><br><span class="line"><span class="meta">        consumes = &#123;MediaType.APPLICATION_JSON_VALUE&#125;,</span></span><br><span class="line"><span class="meta">        produces = &#123;MediaType.APPLICATION_JSON_VALUE&#125;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> AjaxResult <span class="title function_">processPost</span><span class="params">(<span class="meta">@PathVariable(&quot;code&quot;)</span> String code, <span class="meta">@RequestBody</span> JSONObject body)</span> &#123;</span><br><span class="line">    <span class="comment">// POST json</span></span><br><span class="line">    Map&lt;String, Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (String key : body.keySet()) &#123;</span><br><span class="line">        params.put(key, body.get(key));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> invoke(<span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, code, params, <span class="string">&quot;POST+json&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@PostMapping(value = &quot;/&#123;code&#125;&quot;,</span></span><br><span class="line"><span class="meta">        consumes = &#123;MediaType.APPLICATION_FORM_URLENCODED_VALUE&#125;,</span></span><br><span class="line"><span class="meta">        produces = &#123;MediaType.APPLICATION_JSON_VALUE&#125;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> AjaxResult <span class="title function_">processPost</span><span class="params">(<span class="meta">@PathVariable(&quot;code&quot;)</span> String code, <span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">    <span class="comment">// POST x-www-form-urlencoded</span></span><br><span class="line">    <span class="keyword">return</span> invoke(<span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, code, params, <span class="string">&quot;POST+form&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> AjaxResult <span class="title function_">invoke</span><span class="params">(String group, String subgroup, String code, Map&lt;String, Object&gt; params, String method)</span> &#123;</span><br><span class="line">    <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> interfaceService.invokeInterface(group, subgroup, code, params, method);</span><br><span class="line">    <span class="keyword">return</span> success(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="切换数据源"><a href="#切换数据源" class="headerlink" title="切换数据源"></a>切换数据源</h2><p>一句话：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数据源名称参见 application.yaml 配置</span></span><br><span class="line">DynamicDataSourceContextHolder.push(<span class="string">&quot;数据源名称&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="JavaScript工具类"><a href="#JavaScript工具类" class="headerlink" title="JavaScript工具类"></a>JavaScript工具类</h2><p>为使JavaScript代码能够操作数据库或其他目标，需将常用函数封装到一个工具类中，并暴露给JavaScript运行环境。具体代码参见<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2luZm5hbi9keW5hbWljLWNvbnRyb2xsZXItZGVtby9ibG9iL21hc3Rlci9ydW95aS1zeXN0ZW0vc3JjL21haW4vamF2YS9jb20vcnVveWkvc3lzdGVtL3NlcnZpY2UvaW1wbC9JbnRlcmZhY2VVdGlsSW1wbC5qYXZh">InterfaceUtilImpl<i class="fa fa-external-link-alt"></i></span>。</p><h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><h2 id="接口设置"><a href="#接口设置" class="headerlink" title="接口设置"></a>接口设置</h2><p>接口设置界面如下：</p><p><img src="/img/2022-06-08-dynamic-controller/1.png" alt="接口列表"></p><p>当接口数量较多时，为便于维护，可先设置分组，将不同业务的接口组织到不同分组中。</p><p>选择分组，点击添加按钮，录入接口信息：</p><p><img src="/img/2022-06-08-dynamic-controller/2.png" alt="接口信息"></p><p>主要参数说明：</p><ul><li>接口分组、接口代号：决定接口的URL</li><li>请求方式：限制GET、POST（JSON格式）、POST（x-www-form-urlencoded），或不限制请求方式</li><li>输入参数：如接口需要输入参数，可在此处设置。例如输入参数为<code>name,id</code>，那么前端调用时需要传入name和id两个参数，在SQL中则需要通过<code>#&#123;name&#125;</code>和<code>#&#123;id&#125;</code>进行引用。</li><li>权限标识：校验接口调用者是否具有权限，即“菜单管理”中的权限标志。<code>*</code>表示无需token，留空表示需要验证Token但不限制权限。</li><li>数据源：即<code>application.yaml</code>中配置的数据源。</li></ul><p>系统提供测试功能，方便开发人员调试接口。接口的返回值为JSON，以便前端使用，具体格式类似：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;操作成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="SQL配置"><a href="#SQL配置" class="headerlink" title="SQL配置"></a>SQL配置</h2><p>像MyBatis一样配置即可。纯SQL可直接输入，带逻辑的SQL则需要用<code>&lt;script&gt;</code>包围，例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&lt;</span>script<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">table</span> <span class="keyword">WHERE</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="operator">&lt;</span>if test<span class="operator">=</span><span class="string">&#x27;name != &quot;&quot;&#x27;</span><span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">AND</span> name <span class="keyword">LIKE</span> CONCAT(#&#123;name&#125;, <span class="string">&#x27;%&#x27;</span>)</span><br><span class="line"><span class="operator">&lt;</span><span class="operator">/</span>if<span class="operator">&gt;</span></span><br><span class="line"><span class="operator">&lt;</span><span class="operator">/</span>script<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript配置"><a href="#JavaScript配置" class="headerlink" title="JavaScript配置"></a>JavaScript配置</h2><p>Nashorn引擎支持ES5的大部分特性，可通过ES5语法编程。其代码差异之处，以及Java代码调用方法，可参见<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vZW4vamF2YS9qYXZhc2UvMTQvc2NyaXB0aW5nL2luZGV4Lmh0bWw=">Oracle手册<i class="fa fa-external-link-alt"></i></span>。</p><p>Java的包和类可用JS代码直接导入并调用，例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入包</span></span><br><span class="line">importPackage(com.<span class="property">xxx</span>.<span class="property">service</span>);</span><br><span class="line"><span class="comment">// 导入类</span></span><br><span class="line">importClass(com.<span class="property">xxx</span>.<span class="property">service</span>.<span class="property">TabService</span>);</span><br><span class="line"><span class="keyword">var</span> serv = <span class="keyword">new</span> <span class="title class_">TabService</span>();</span><br><span class="line"><span class="comment">// 导入后，可以像Java一样new实例，或者在JS环境中调用Java方法与函数</span></span><br></pre></td></tr></table></figure><p>在本系统中，可通过<code>paramMap</code>获取用户的请求参数，通过<code>AppUtil</code>来调用Java函数，例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取请求参数</span></span><br><span class="line"><span class="keyword">var</span> name = paramMap.<span class="property">name</span> || <span class="string">&#x27;未命名&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行SQL</span></span><br><span class="line"><span class="keyword">var</span> list = <span class="title class_">AppUtil</span>.<span class="title function_">executeQuery</span>(<span class="string">&#x27;select * from sys_user&#x27;</span>);</span><br><span class="line"><span class="title class_">AppUtil</span>.<span class="title function_">executeSql</span>(<span class="string">&#x27;update tab set name = ? where id = ?&#x27;</span>, name, id);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取Spring Bean并调用</span></span><br><span class="line"><span class="keyword">var</span> tabService = <span class="title class_">AppUtil</span>.<span class="title function_">getBean</span>(<span class="string">&#x27;tabService&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> list = tabService.<span class="title function_">getList</span>();</span><br></pre></td></tr></table></figure><h1 id="进一步思考"><a href="#进一步思考" class="headerlink" title="进一步思考"></a>进一步思考</h1><p>由于接口配置功能可以输入任意代码，因此当然不能向一般用户开放，否则系统会被恶意代码损毁。</p><p>输入参数往往是由用户提供的，因此应当假定每个输入参数都带有恶意，例如SQL注入、超出长度范围、超出权限范围（例如将URL中的<code>?id=3</code>改为<code>?id=4</code>）等等，。SQL或JavaScript代码也应注意限制执行时间和查询结果数量，以免数据溢出或造成阻塞。</p><p>动态的接口维护功能主要目的是便利开发人员，降低维护成本，但是本代码缺少对高并发的优化，因此不建议在高并发情况下使用。</p><h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><ol><li>查阅接口调用日志</li><li>Swagger接口文档</li><li>Kotlin语言支持</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;很多业务都是以增删改查为基础，利用若依框架，已经能够实现代码的快速生成，但需要在后端部署一些VO、Controller和Service，如需维护，依然要修改多个文件，而且要升级和重启后端系统。&lt;/p&gt;
&lt;p&gt;如果业务只是简单的SQL或脚本，我们能否进一步简化，实现接口动态维护，不停机就能快速配置好系统接口呢？&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="数据库" scheme="https://plusnan.me/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="Spring Boot" scheme="https://plusnan.me/tags/Spring-Boot/"/>
    
    <category term="接口" scheme="https://plusnan.me/tags/%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>使用nginx配置天地图缓存</title>
    <link href="https://plusnan.me/2022/05/06/tianditu-cache/"/>
    <id>https://plusnan.me/2022/05/06/tianditu-cache/</id>
    <published>2022-05-05T16:00:00.000Z</published>
    <updated>2023-07-24T06:30:49.648Z</updated>
    
    <content type="html"><![CDATA[<p>由于天地图有时访问速度缓慢，加上接口访问数量限制，可借助nginx对天地图进行缓存，提高访问速度。</p><span id="more"></span><h1 id="配置文件内容"><a href="#配置文件内容" class="headerlink" title="配置文件内容"></a>配置文件内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"># ...</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    # ...</span><br><span class="line"></span><br><span class="line">    resolver 114.114.114.114 ipv6=off;</span><br><span class="line"></span><br><span class="line">    # 此处换成实际的缓存路径</span><br><span class="line">    proxy_temp_path /var/cache/tianditu_temp;</span><br><span class="line">    proxy_cache_path /var/cache/tianditu levels=1:2 keys_zone=cache_one:200m inactive=1d max_size=30g;</span><br><span class="line"></span><br><span class="line">    upstream tianditu_server &#123;</span><br><span class="line">        server t0.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;</span><br><span class="line">        server t1.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;</span><br><span class="line">        server t2.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;</span><br><span class="line">        server t3.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;</span><br><span class="line">        server t4.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;</span><br><span class="line">        server t5.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;</span><br><span class="line">        server t6.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        # 此处需修改成实际端口</span><br><span class="line">        listen 5000 default_server;</span><br><span class="line">        server_name _;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            add_header Access-Control-Allow-Origin *;</span><br><span class="line">            add_header Access-Control-Allow-Headers X-Requested-With;</span><br><span class="line">            add_header Access-Control-Allow-Methods GET,POST,OPTIONS;</span><br><span class="line"></span><br><span class="line">            proxy_ssl_name t0.tianditu.gov.cn;</span><br><span class="line">            proxy_ssl_server_name on;</span><br><span class="line">            </span><br><span class="line">            proxy_cache cache_one;</span><br><span class="line">            proxy_cache_key $uri$is_args$args;</span><br><span class="line">            </span><br><span class="line">            proxy_pass https://tianditu_server;</span><br><span class="line">            proxy_set_header Host t0.tianditu.gov.cn;</span><br><span class="line">            proxy_set_header User-Agent &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36&quot;;</span><br><span class="line">            proxy_ignore_headers Set-Cookie;</span><br><span class="line">            proxy_ignore_headers Cache-Control;</span><br><span class="line">            proxy_cache_valid 200 302 7d;</span><br><span class="line">            </span><br><span class="line">            expires 7d;</span><br><span class="line">        </span><br><span class="line">            add_header X-Proxy-Cache $upstream_cache_status;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>将天地图域名换成服务器地址即可，例如将<code>https://t0.tianditu.gov.cn/img_w/wmts</code>替换成<code>http://172.16.0.100:5000/img_w/wmts</code>。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;由于天地图有时访问速度缓慢，加上接口访问数量限制，可借助nginx对天地图进行缓存，提高访问速度。&lt;/p&gt;</summary>
    
    
    
    <category term="记录" scheme="https://plusnan.me/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="nginx" scheme="https://plusnan.me/tags/nginx/"/>
    
    <category term="天地图" scheme="https://plusnan.me/tags/%E5%A4%A9%E5%9C%B0%E5%9B%BE/"/>
    
    <category term="缓存" scheme="https://plusnan.me/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>若依（芋道）框架完善记录</title>
    <link href="https://plusnan.me/2022/04/15/ruoyi-fix/"/>
    <id>https://plusnan.me/2022/04/15/ruoyi-fix/</id>
    <published>2022-04-14T16:00:00.000Z</published>
    <updated>2023-06-06T03:53:38.292Z</updated>
    
    <content type="html"><![CDATA[<p>版本：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1l1bmFpVg==">芋道源码<i class="fa fa-external-link-alt"></i></span> 2022年4月15日</p><p>由于芋道基于若依修改，所以此处改动可能也适用于若依。</p><span id="more"></span><h1 id="修正系统bug"><a href="#修正系统bug" class="headerlink" title="修正系统bug"></a>修正系统bug</h1><h2 id="多租户模式无法登录"><a href="#多租户模式无法登录" class="headerlink" title="多租户模式无法登录"></a>多租户模式无法登录</h2><p>前端<code>login.vue</code>增加<code>tenantId !== null</code>判断：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">validator</span>: <span class="function">(<span class="params">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// debugger</span></span><br><span class="line">    <span class="title function_">getTenantIdByName</span>(value).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> tenantId = res.<span class="property">data</span></span><br><span class="line">    <span class="comment">// 修改下面代码</span></span><br><span class="line">    <span class="keyword">if</span> (tenantId !== <span class="literal">null</span> &amp;&amp; tenantId &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 设置租户</span></span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;tenantId&#x27;</span>, tenantId)</span><br><span class="line">        <span class="title function_">callback</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(<span class="string">&#x27;租户不存在&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="前端标签页切换后，无法保存标签页状态"><a href="#前端标签页切换后，无法保存标签页状态" class="headerlink" title="前端标签页切换后，无法保存标签页状态"></a>前端标签页切换后，无法保存标签页状态</h2><h3 id="表结构调整"><a href="#表结构调整" class="headerlink" title="表结构调整"></a>表结构调整</h3><p><code>system_menu</code>表增加一个字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> map.system_menu <span class="keyword">add</span> component_name <span class="type">varchar</span>(<span class="number">255</span>);</span><br></pre></td></tr></table></figure><p>同时在<code>sql.vm</code>增加相应字段。</p><h3 id="后端调整"><a href="#后端调整" class="headerlink" title="后端调整"></a>后端调整</h3><p><code>MenuDO.java</code>增加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 组件名称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String componentName;</span><br></pre></td></tr></table></figure><p><code>AuthMenuRespVO.java</code>增加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiModelProperty(value = &quot;组件名称&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String componentName;</span><br></pre></td></tr></table></figure><p><code>MenuBaseVO.java</code>增加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiModelProperty(value = &quot;组件名称&quot;, example = &quot;post&quot;)</span></span><br><span class="line"><span class="meta">@Size(max = 255, message = &quot;组件路径不能超过255个字符&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String componentName;</span><br></pre></td></tr></table></figure><h3 id="前端调整"><a href="#前端调整" class="headerlink" title="前端调整"></a>前端调整</h3><p><code>store/modules/permission.js</code>，修改<code>filterAsyncRouter</code>函数:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">filterAsyncRouter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  route.<span class="property">meta</span> = &#123;</span><br><span class="line">    <span class="attr">title</span>: route.<span class="property">name</span>,</span><br><span class="line">    <span class="attr">icon</span>: route.<span class="property">icon</span>,</span><br><span class="line">    <span class="comment">// 下方增加新代码</span></span><br><span class="line">    <span class="attr">componentName</span>: route.<span class="property">componentName</span>  </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>store/modules/tagsView.js</code>增加代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ADD_CACHED_VIEW</span>: <span class="function">(<span class="params">state, view</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (state.<span class="property">cachedViews</span>.<span class="title function_">includes</span>(view.<span class="property">meta</span>.<span class="property">componentName</span>)) <span class="keyword">return</span></span><br><span class="line">  <span class="keyword">if</span> (!view.<span class="property">meta</span>.<span class="property">noCache</span>) &#123;</span><br><span class="line">    state.<span class="property">cachedViews</span>.<span class="title function_">push</span>(view.<span class="property">meta</span>.<span class="property">componentName</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="attr">DEL_CACHED_VIEW</span>: <span class="function">(<span class="params">state, view</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> index = state.<span class="property">cachedViews</span>.<span class="title function_">indexOf</span>(view.<span class="property">meta</span>.<span class="property">componentName</span>)</span><br><span class="line">  index &gt; -<span class="number">1</span> &amp;&amp; state.<span class="property">cachedViews</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><code>system/menu/index.vue</code>增加两个输入框：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">el-table</span> <span class="attr">...</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 权限标识下方增加 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">    <span class="attr">prop</span>=<span class="string">&quot;componentName&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">label</span>=<span class="string">&quot;组件名称&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:show-overflow-tooltip</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment">&lt;!-- 添加或修改菜单对话框 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 菜单名称下增加 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;组件名称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;componentName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-model</span>=<span class="string">&quot;form.componentName&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">placeholder</span>=<span class="string">&quot;请输入组件名称&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="功能调整"><a href="#功能调整" class="headerlink" title="功能调整"></a>功能调整</h3><p>修改完成后，菜单管理的对话框中会多出一个“组件名称”输入框，将其设置为Vue组件的name即可：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;与此处name保持一致&#x27;</span>,</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="svg-icon图标颜色问题"><a href="#svg-icon图标颜色问题" class="headerlink" title="svg-icon图标颜色问题"></a>svg-icon图标颜色问题</h2><p>定位到<code>src/assets/icons/svg</code>，通过正则搜索所有svg中的<code>fill=&quot;.*?&quot;</code>，删除。</p><h2 id="字体尺寸错误问题"><a href="#字体尺寸错误问题" class="headerlink" title="字体尺寸错误问题"></a>字体尺寸错误问题</h2><p>定位到<code>src/components/bpmnProcessDesigner/package/theme/process-designer.scss</code>，将其中的</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&quot;~bpmn-js-token-simulation/assets/css/normalize.css&quot;</span>;</span><br></pre></td></tr></table></figure><p>删除。</p><h2 id="标签页“关闭左侧”不起作用"><a href="#标签页“关闭左侧”不起作用" class="headerlink" title="标签页“关闭左侧”不起作用"></a>标签页“关闭左侧”不起作用</h2><p>定位到<code>store/modules/tagsView.js</code>，可以发现里面只有<code>delRightTags</code>，缺少<code>delLeftTags</code>，将其补全即可。</p><h2 id="生成代码中出现编译错误"><a href="#生成代码中出现编译错误" class="headerlink" title="生成代码中出现编译错误"></a>生成代码中出现编译错误</h2><p>如果有DECIMAL类型字段，会出现编译错误，因为未import BigDecimal类型，将其补全即可。</p><p>修改<code>src/resources/codegen/java/dal/do.vm</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br></pre></td></tr></table></figure><p>再修改<code>src/resources/codegen/java/controller/vo</code>中的每个vm：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br></pre></td></tr></table></figure><h1 id="代码质量优化"><a href="#代码质量优化" class="headerlink" title="代码质量优化"></a>代码质量优化</h1><h2 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h2><p>使用工具重新生成</p><h2 id="前端jsconfig-json"><a href="#前端jsconfig-json" class="headerlink" title="前端jsconfig.json"></a>前端jsconfig.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;paths&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;@/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src/*&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ES2015&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lib&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;ES2021&quot;</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;include&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;./src/**/*&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;dist&quot;</span><span class="punctuation">,</span> <span class="string">&quot;node_modules&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="前端代码格式化"><a href="#前端代码格式化" class="headerlink" title="前端代码格式化"></a>前端代码格式化</h2><p>使用eslint和prettier批量格式化，保持代码整洁</p><h2 id="清理console-log"><a href="#清理console-log" class="headerlink" title="清理console.log"></a>清理console.log</h2><p>使用查找功能搜索代码中的<code>console.log</code>，将其删除。</p><h2 id="request超时"><a href="#request超时" class="headerlink" title="request超时"></a>request超时</h2><p>找到<code>request.js</code>，增加超时时间的判断：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建axios实例</span></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="comment">// axios中请求配置有baseURL选项，表示请求URL公共部分</span></span><br><span class="line">  <span class="attr">baseURL</span>: process.<span class="property">env</span>.<span class="property">VUE_APP_BASE_API</span> + <span class="string">&#x27;/admin-api/&#x27;</span>, <span class="comment">// 此处的 /admin-api/ 地址，原因是后端的基础路径为 /admin-api/</span></span><br><span class="line">  <span class="comment">// 超时</span></span><br><span class="line">  <span class="attr">timeout</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;development&#x27;</span> ? <span class="number">1000000</span> : <span class="number">10000</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="功能完善"><a href="#功能完善" class="headerlink" title="功能完善"></a>功能完善</h1><h2 id="提高系统响应速度"><a href="#提高系统响应速度" class="headerlink" title="提高系统响应速度"></a>提高系统响应速度</h2><p>将动画速度调快，或者直接删除，从而提高感官上的响应速度。</p><h3 id="前端index-html"><a href="#前端index-html" class="headerlink" title="前端index.html"></a>前端index.html</h3><p>把转圈动画直接删掉</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;loader-wrapper&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;loader&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;loader-section section-left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;loader-section section-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;load_title&quot;</span>&gt;</span>正在加载系统资源，请耐心等待<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="前端transition-scss"><a href="#前端transition-scss" class="headerlink" title="前端transition.scss"></a>前端transition.scss</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition</span>: all .<span class="number">5s</span>;</span><br></pre></td></tr></table></figure><p>全部替换成</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition</span>: all .<span class="number">1s</span>;</span><br></pre></td></tr></table></figure><p>增加：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.el-loading-spinner</span> <span class="selector-class">.circular</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: loading-rotate <span class="number">0.25s</span> linear infinite;</span><br><span class="line">  <span class="attribute">animation</span>: loading-rotate <span class="number">0.25s</span> linear infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加快按钮的转圈速度。</p><h2 id="字典数据项维护"><a href="#字典数据项维护" class="headerlink" title="字典数据项维护"></a>字典数据项维护</h2><p>定位到<code>views/system/dict/index.vue</code>，增加按钮：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-hasPermi</span>=<span class="string">&quot;[&#x27;system:dict:update&#x27;]&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">icon</span>=<span class="string">&quot;el-icon-notebook-2&quot;</span></span></span><br><span class="line"><span class="tag">  @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/dict/type/data/&#x27; + scope.row.id)&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  数据项</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="完善系统报错与日志查询"><a href="#完善系统报错与日志查询" class="headerlink" title="完善系统报错与日志查询"></a>完善系统报错与日志查询</h2><h3 id="前端报错提示优化"><a href="#前端报错提示优化" class="headerlink" title="前端报错提示优化"></a>前端报错提示优化</h3><p>修改<code>request.js</code>，根据实际情况调整报错内容，例如：</p><ul><li>会话超时：您长时间未操作，已自动注销，请重新登录</li><li>网络异常：网络连接错误，请检查网络连接，然后重试</li><li>超时：系统响应超时，请稍后重试</li><li>502:</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (message.<span class="title function_">includes</span>(<span class="string">&#x27;Request failed with status code&#x27;</span>)) &#123;</span><br><span class="line">  <span class="keyword">if</span> (message.<span class="title function_">includes</span>(<span class="string">&#x27;502&#x27;</span>)) &#123;</span><br><span class="line">    message = <span class="string">`系统正在升级，请稍候。`</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> code = message.<span class="title function_">substr</span>(message.<span class="property">length</span> - <span class="number">3</span>)</span><br><span class="line">    message = <span class="string">`系统访问异常，请向客服提供错误代码：HTTP <span class="subst">$&#123;code&#125;</span>`</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="后端报错向用户提供日志ID"><a href="#后端报错向用户提供日志ID" class="headerlink" title="后端报错向用户提供日志ID"></a>后端报错向用户提供日志ID</h3><p><code>GlobalExceptionHandler.java</code>修改代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理系统异常，兜底处理所有的一切</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ExceptionHandler(value = Exception.class)</span></span><br><span class="line"><span class="keyword">public</span> CommonResult&lt;?&gt; defaultExceptionHandler(HttpServletRequest req, Throwable ex) &#123;</span><br><span class="line">    log.error(<span class="string">&quot;[defaultExceptionHandler]&quot;</span>, ex);</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> INTERNAL_SERVER_ERROR.getMsg();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插入异常日志</span></span><br><span class="line">    <span class="comment">// 如果能获取到事件id，则直接展示id，方便在系统中查询；如果获取不到id，则提供时间，方便去后台翻日志</span></span><br><span class="line">    <span class="type">Long</span> <span class="variable">errId</span> <span class="operator">=</span> <span class="built_in">this</span>.createExceptionLog(req, ex);</span><br><span class="line">    <span class="keyword">if</span> (errId != <span class="literal">null</span>) &#123;</span><br><span class="line">        message += <span class="string">&quot;（日志编号：#&quot;</span> + errId + <span class="string">&quot;）&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">DateTimeFormatter</span> <span class="variable">dtf</span> <span class="operator">=</span> DateTimeFormatter.ofPattern(<span class="string">&quot;ddHHmmss&quot;</span>);</span><br><span class="line">        message += <span class="string">&quot;（日志编号：$&quot;</span> + LocalDateTime.now().format(dtf) + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回 ERROR CommonResult</span></span><br><span class="line">    <span class="keyword">return</span> CommonResult.error(INTERNAL_SERVER_ERROR.getCode(), message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Long <span class="title function_">createExceptionLog</span><span class="params">(HttpServletRequest req, Throwable e)</span> &#123;</span><br><span class="line">    <span class="comment">// 插入错误日志</span></span><br><span class="line">    <span class="type">ApiErrorLogCreateReqDTO</span> <span class="variable">errorLog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ApiErrorLogCreateReqDTO</span>();</span><br><span class="line">    <span class="type">Long</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 初始化 errorLog</span></span><br><span class="line">        initExceptionLog(errorLog, req, e);</span><br><span class="line">        <span class="comment">// 执行插入 errorLog</span></span><br><span class="line">        Future&lt;Long&gt; errId = apiErrorLogFrameworkService.createApiErrorLogAsync(errorLog);</span><br><span class="line">        result = errId.get(<span class="number">3</span>, TimeUnit.SECONDS);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (TimeoutException ex) &#123;</span><br><span class="line">        result = <span class="literal">null</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable th) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;[createExceptionLog][url(&#123;&#125;) log(&#123;&#125;) 发生异常]&quot;</span>, req.getRequestURI(), JsonUtils.toJsonString(errorLog), th);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>ApiErrorLogFrameworkService.java</code>修改<code>createApiErrorLogAsync</code>返回类型：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建 API 错误日志</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> createDTO 创建信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 日志ID</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Future&lt;Long&gt; <span class="title function_">createApiErrorLogAsync</span><span class="params">(<span class="meta">@Valid</span> ApiErrorLogCreateReqDTO createDTO)</span>;</span><br></pre></td></tr></table></figure><p><code>ApiErrorLogServiceImpl.java</code>修改：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Async</span></span><br><span class="line"><span class="keyword">public</span> Future&lt;Long&gt; <span class="title function_">createApiErrorLogAsync</span><span class="params">(ApiErrorLogCreateReqDTO createDTO)</span> &#123;</span><br><span class="line">    <span class="type">ApiErrorLogDO</span> <span class="variable">apiErrorLog</span> <span class="operator">=</span> ApiErrorLogConvert.INSTANCE.convert(createDTO);</span><br><span class="line">    apiErrorLog.setProcessStatus(ApiErrorLogProcessStatusEnum.INIT.getStatus());</span><br><span class="line">    apiErrorLogMapper.insert(apiErrorLog);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">AsyncResult</span>&lt;&gt;(apiErrorLog.getId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完善日志查询，允许按ID查询日志"><a href="#完善日志查询，允许按ID查询日志" class="headerlink" title="完善日志查询，允许按ID查询日志"></a>完善日志查询，允许按ID查询日志</h3><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h4><p><code>ApiAccessLogPageReqVO.java</code>、<code>ApiErrorLogPageReqVO.java</code>、<code>LoginLogPageReqVO.java</code>、<code>OperateLogPageReqVO.java</code>增加:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiModelProperty(value = &quot;日志编号&quot;, example = &quot;666&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Long id;</span><br></pre></td></tr></table></figure><p><code>ApiAccessLogMapper.java</code>、<code>ApiErrorLogMapper.java</code>、<code>LoginLogMapper.java</code>、<code>OperateLogMapper.java</code>增加:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">selectPage()内加一行</span><br><span class="line"></span><br><span class="line">.eqIfPresent(<span class="string">&quot;id&quot;</span>, reqVO.getId())</span><br></pre></td></tr></table></figure><h4 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h4><p><code>src/views/infra/apiAccessLog/index.vue</code>、<code>apiErrorLog/index.vue</code>、<code>operatelog/index.vue</code>、<code>loginlog/index.vue</code>分别加入：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;日志编号&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-model</span>=<span class="string">&quot;queryParams.id&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">placeholder</span>=<span class="string">&quot;请输入日志编号&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">clearable</span></span></span><br><span class="line"><span class="tag">    <span class="attr">size</span>=<span class="string">&quot;small&quot;</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">keyup.enter.native</span>=<span class="string">&quot;handleQuery&quot;</span></span></span><br><span class="line"><span class="tag"> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="attr">queryParams</span>: &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">id</span>: <span class="literal">null</span>,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="防止对话框意外关闭"><a href="#防止对话框意外关闭" class="headerlink" title="防止对话框意外关闭"></a>防止对话框意外关闭</h2><p>前端全局搜索<code>el-dialog</code>，在每个<code>el-dialog</code>中加入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:close-on-click-modal=&quot;false&quot;</span><br></pre></td></tr></table></figure><p>修改后端的<code>src/resources/codegen/vue/views/index.vue.vm</code>，在<code>el-dialog</code>后面增加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:close-on-click-modal=&quot;false&quot;</span><br></pre></td></tr></table></figure><p>这样再生成代码就不会遇到相同问题了。</p><h2 id="处理前端列表页面，搜索条件文字宽度太窄问题"><a href="#处理前端列表页面，搜索条件文字宽度太窄问题" class="headerlink" title="处理前端列表页面，搜索条件文字宽度太窄问题"></a>处理前端列表页面，搜索条件文字宽度太窄问题</h2><p>前端全局搜索<code>label-width=&quot;68px&quot;</code>，将数字改得大一些，例如75px。</p><p>修改后端的<code>src/resources/codegen/vue/views/index.vue.vm</code>，将68px换成相同的数字。</p><h2 id="向前端提供username字段"><a href="#向前端提供username字段" class="headerlink" title="向前端提供username字段"></a>向前端提供username字段</h2><p>修改后端<code>AuthPermissionInfoRespVO.java</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">UserVO</span> &#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;用户名&quot;, required = true, example = &quot;pdiwt源码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改<code>AuthConvert.java</code>，增加<code>username</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">default</span> AuthPermissionInfoRespVO <span class="title function_">convert</span><span class="params">(AdminUserDO user, List&lt;RoleDO&gt; roleList, List&lt;MenuDO&gt; menuList)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> AuthPermissionInfoRespVO.builder()</span><br><span class="line">            .user(AuthPermissionInfoRespVO.UserVO.builder().id(user.getId()).nickname(user.getNickname()).avatar(user.getAvatar()).username(user.getUsername()).build())</span><br><span class="line">        .roles(CollectionUtils.convertSet(roleList, RoleDO::getCode))</span><br><span class="line">        .permissions(CollectionUtils.convertSet(menuList, MenuDO::getPermission))</span><br><span class="line">        .build();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="系统安全"><a href="#系统安全" class="headerlink" title="系统安全"></a>系统安全</h1><h2 id="log4j漏洞"><a href="#log4j漏洞" class="headerlink" title="log4j漏洞"></a>log4j漏洞</h2><p>定位<code>pom.xml</code>，将log4j版本直接改为最新版即可。</p><h2 id="生产系统禁用Swagger"><a href="#生产系统禁用Swagger" class="headerlink" title="生产系统禁用Swagger"></a>生产系统禁用Swagger</h2><p>修改后端的<code>application-prod.yaml</code>，增加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">knife4j:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">production:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>如果是前后分离项目，也可以通过配置nginx等方式，将<code>/doc.html</code>地址屏蔽掉。</p><h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><h2 id="替换图像"><a href="#替换图像" class="headerlink" title="替换图像"></a>替换图像</h2><p>前端<code>src/assets/images</code>，替换登录背景图片与默认头像。</p><p>删除admin头像：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> map.system_user <span class="keyword">set</span> avatar<span class="operator">=</span><span class="string">&#x27;&#x27;</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="改包名"><a href="#改包名" class="headerlink" title="改包名"></a>改包名</h2><p>在代码中改完包名之后，还需要执行一个sql（将下面的<code>com.xxx</code>换成实际包名），以免启动报错：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> map.pay_channel <span class="keyword">set</span> config<span class="operator">=</span>replace(config,<span class="string">&#x27;cn.iocoder&#x27;</span>, <span class="string">&#x27;com.xxx&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="修改租户名"><a href="#修改租户名" class="headerlink" title="修改租户名"></a>修改租户名</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> map.system_tenant <span class="keyword">set</span> name<span class="operator">=</span><span class="string">&#x27;app&#x27;</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>在前端<code>login.vue</code>中将“租户”的输入框隐藏，并设置默认值。</p><h1 id="前端nginx通用配置"><a href="#前端nginx通用配置" class="headerlink" title="前端nginx通用配置"></a>前端nginx通用配置</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">upstream backend &#123;</span><br><span class="line">    # TODO 后端服务器地址</span><br><span class="line">    server xxx:48080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">map $http_upgrade $connection_upgrade &#123;</span><br><span class="line">    default upgrade;</span><br><span class="line">    &#x27;&#x27;      close;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen [::]:80 default_server;</span><br><span class="line"></span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_min_length 1k;</span><br><span class="line">    gzip_comp_level 1;</span><br><span class="line">    gzip_vary on;</span><br><span class="line">    gzip_proxied any;</span><br><span class="line">    gzip_disable &quot;MSIE [1-6]\.&quot;;</span><br><span class="line">    gzip_buffers 32 4k;</span><br><span class="line">    gzip_http_version 1.1;</span><br><span class="line">    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php;</span><br><span class="line"></span><br><span class="line">    # TODO 设置成前端地址</span><br><span class="line">    root /var/www/html;</span><br><span class="line"></span><br><span class="line">    # 上传大小限制</span><br><span class="line">    client_max_body_size 500m;</span><br><span class="line"></span><br><span class="line">    # 错误页，让403返回404（以应对扫测）</span><br><span class="line">    error_page 403 =404 /404;</span><br><span class="line">    error_page 404 /404;</span><br><span class="line"></span><br><span class="line">    location = /404 &#123;</span><br><span class="line">        internal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 安全设置</span><br><span class="line">    add_header X-Content-Type-Options nosniff;</span><br><span class="line">    add_header X-XSS-Protection 1;</span><br><span class="line"></span><br><span class="line">    # 管理后台</span><br><span class="line">    location ^~ /api/ &#123; try_files /dev/null @backend; &#125;</span><br><span class="line">    location ^~ /admin-api/ &#123; try_files /dev/null @backend; &#125;</span><br><span class="line">    location ^~ /infra-api/ &#123; try_files /dev/null @backend; &#125;</span><br><span class="line">    location @backend &#123;</span><br><span class="line">        proxy_pass http://backend;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_buffering off;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_intercept_errors off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # TODO 注意：以下是开发工具，应根据实际需要启停</span><br><span class="line">    # Spring Boot监测</span><br><span class="line">    # location /admin &#123; try_files /dev/null @backend; &#125;</span><br><span class="line">    # location /druid &#123; try_files /dev/null @backend; &#125;</span><br><span class="line"></span><br><span class="line">    # Swagger</span><br><span class="line">    # location = /doc.html &#123; try_files /dev/null @backend; &#125;</span><br><span class="line">    # location /webjars/ &#123; try_files /dev/null @backend; &#125;</span><br><span class="line">    # location = /swagger-resources &#123; try_files /dev/null @backend; &#125;</span><br><span class="line">    # location /v2/ &#123; try_files /dev/null @backend; &#125;</span><br><span class="line"></span><br><span class="line">    # 前端</span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files $uri $uri/ /index.html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;版本：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL1l1bmFpVg==&quot;&gt;芋道源码&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; 2022年4月15日&lt;/p&gt;
&lt;p&gt;由于芋道基于若依修改，所以此处改动可能也适用于若依。&lt;/p&gt;</summary>
    
    
    
    <category term="记录" scheme="https://plusnan.me/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="ruoyi" scheme="https://plusnan.me/tags/ruoyi/"/>
    
    <category term="若依" scheme="https://plusnan.me/tags/%E8%8B%A5%E4%BE%9D/"/>
    
    <category term="芋道" scheme="https://plusnan.me/tags/%E8%8A%8B%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>如何正确使用信用卡</title>
    <link href="https://plusnan.me/2022/02/22/credit-card/"/>
    <id>https://plusnan.me/2022/02/22/credit-card/</id>
    <published>2022-02-21T16:00:00.000Z</published>
    <updated>2024-01-21T02:19:41.545Z</updated>
    
    <content type="html"><![CDATA[<p>学会正确使用信用卡，让自己不会成为“卡奴”。</p><span id="more"></span><h1 id="如果你不知道信用卡能做什么事情，那么不要办信用卡"><a href="#如果你不知道信用卡能做什么事情，那么不要办信用卡" class="headerlink" title="如果你不知道信用卡能做什么事情，那么不要办信用卡"></a>如果你不知道信用卡能做什么事情，那么不要办信用卡</h1><p>信用卡能做什么事情呢？</p><p><strong>如果你不清楚这个问题，那么说明你完全不需要信用卡。</strong>这种情况下，即使银行会给你各种好处，你也不应该去办理任何信用卡，而且应该抓紧去银行把已经办过的信用卡全部注销。</p><p>如果你还是想了解信用卡的作用，这里可以简单解释一下：</p><ul><li>在国内，有支付宝和微信支付就足够了，缺钱的话，你还可以用花呗和借呗，所以你不需要信用卡。</li><li>在国外，以及需要支付的国外网站，你需要指定标志（例如Visa、Mastercard）的信用卡，所以你不需要纯银联的信用卡。</li></ul><h1 id="如果你要办信用卡，那么要熟悉信用卡的一些概念"><a href="#如果你要办信用卡，那么要熟悉信用卡的一些概念" class="headerlink" title="如果你要办信用卡，那么要熟悉信用卡的一些概念"></a>如果你要办信用卡，那么要熟悉信用卡的一些概念</h1><p>很多人都有储蓄卡，规范说法叫做借记卡。储蓄卡的用法很简单，需要存钱时可以直接往里面存钱，需要消费或取钱时可以往外取钱，而且只要卡片和密码不丢，钱就不会丢，也不会产生额外费用。</p><p>但信用卡不同于借记卡，信用卡有一系列麻烦的概念。如果你不清楚这些词语的含义，不能正确使用卡片，轻者增加花销，重者影响征信。</p><p><strong>如果你看到下面这些词语之后感到一头雾水，说明你不应该办理信用卡：</strong></p><ul><li>额度：额度指信用卡最多能花多少钱。额度是银行的钱，不是你的钱，所以额度高只是表示你能多借点钱，该还的钱还是要还的。假如你的额度是10000元，查询到当前额度是3000元，说明你现在欠银行7000元。</li><li>年费：<strong>持有信用卡，每年会产生一笔持有的费用，所以办卡时务必和银行确认年费金额</strong>。虽然有些卡片是免年费的，或者带条件免年费，例如消费满多少之后免年费，但你也不要直接拿剪刀把卡片“咔嚓”掉，而是及时去银行注销不再使用的卡片，彻底消除隐患。</li><li>账单日和还款日：<ul><li>账单日：到账单日时，银行会把上一个月的消费记录固定下来，形成账单，并且告诉你欠了多少钱。这个时候你还有大约半个月的准备时间，银行不会计算利息，只要在到达还款日之前还款即可。</li><li>还款日：账单日过了大约半个月时间以后，会到达还款日，这是你还钱的最后期限。<strong>如果你过了还款日还没还钱，那么会影响征信，而且银行会开始收利息。</strong></li><li>每张卡的账单日和还款日都不一样，具体日期需要和银行确认。另外建议开启自动还款功能，以免因为不小心忘记还款而影响征信。</li></ul></li><li>最低还款：在账单日之后，除了全额还款，你也可以只还一部分。例如账单金额是欠1000元，最低还款额是100元，你只要还款超过100元，就不会影响征信。但是需要注意，<strong>最低还款只是不影响征信，剩下的钱还是要还的，而且过了还款日之后，银行也会开始计算利息</strong>。</li><li>CVV（安全码）：指卡片背后的数字。信用卡和储蓄卡不一样，只要知道正面的卡号与日期，以及背面的安全码，无需密码也可以消费。因此<strong>不要随意让别人看到你的信用卡卡面</strong>。</li><li>人民币账单和美元账单：如果是外币卡，会产生两种账单，人民币账单和美元账单要分别用两种货币还款。如果你不介意汇率问题，而且觉得购汇还款麻烦，可以开通美元账单用人民币记账，这样的话，到账单日的时候，直接用人民币就能把两种欠款还清。</li><li>银联、Visa、Mastercard等：卡面上的标志决定了它能在哪里使用。例如带Visa或Mastercard标志的，可以在国外很多国家使用，但是只有银联一种标志的，基本上只能在国内使用了。</li></ul><h1 id="无论什么情况，都要量力而行"><a href="#无论什么情况，都要量力而行" class="headerlink" title="无论什么情况，都要量力而行"></a>无论什么情况，都要量力而行</h1><p>信用卡的本质是向银行借钱，是你的债务之一。既然是欠别人的钱，那么你迟早要还钱，因此，你手头应该准备比账单支出还要多的存款，不然的话，你拿什么去还呢？</p><p>如果你没有足够的存款，那么你需要评估自己的收入情况，保证剩余存款加上本月的收入能还得上信用卡和其他债务的支出。</p><p>在疫情两年折腾之下，有些单位已经开始不能正常发放工资，因此你要慎重考虑自己的财务情况。如果你背上了房贷车贷，收入开始变得不稳定，又没有足够的存款，那么即使靠信用卡做资金周转，也改变不了它是压垮你的众多石头之一的事实。</p><h1 id="有些操作，这辈子永远都不要碰"><a href="#有些操作，这辈子永远都不要碰" class="headerlink" title="有些操作，这辈子永远都不要碰"></a>有些操作，这辈子永远都不要碰</h1><h2 id="最低还款和分期还款"><a href="#最低还款和分期还款" class="headerlink" title="最低还款和分期还款"></a>最低还款和分期还款</h2><p>最低还款和分期还款，因为你的欠款没有还清，所以都会计算利息。利息的计算方式比较复杂，而且利息是按照账单金额而非实际欠款计算的，也就是说，你欠了1000，还了900，利息还是用1000来计算的。</p><p>那么如何规避这里面的陷阱呢？</p><p>很简单，只要你每次都及时还款，而且每次都是全额还款，也永远不做分期还款，你就永远不需要关心这个问题了。</p><h2 id="取现"><a href="#取现" class="headerlink" title="取现"></a>取现</h2><p>信用卡可以合法地取现，但是银行会收取手续费，并且利息从取现开始就立即计算，而不是等到还款日才计算。因此除非迫不得已，不要使用信用卡取现。</p><h2 id="套现-办POS机"><a href="#套现-办POS机" class="headerlink" title="套现 / 办POS机"></a>套现 / 办POS机</h2><p>很多人申请信用卡其实是为了能周转资金。由于信用卡取现手续费和利息都比较高，而刷POS机属于消费，手续费低，而且还款日之前没有利息，所以你会发现街头到处都有办POS机的小广告。</p><p>然而信用卡套现属于犯罪行为，而且刷POS机需要掌握一些“技巧”，否则容易触发银行风控，导致锁卡。一旦出现问题，你无法用合法途径来维护自己的权益，因为这样做等于投案自首。</p><p>如果你现在经济状况还能说得过去，在大额消费（例如贷款）之前，你就应该思考一下，是不是本可以降低杠杆率（少贷款），或者暂缓消费计划，减少不必要的支出，从而避免把自己逼到需要靠信用卡套现周转的绝境呢？</p><p>如果已经山穷水尽，沦落到不得不靠信用卡套现的程度，你需要思考，能不能选择割肉，先变卖手中的一些资产，哪怕亏本卖掉，先把总负债降下去再说？</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;学会正确使用信用卡，让自己不会成为“卡奴”。&lt;/p&gt;</summary>
    
    
    
    <category term="一点人生的经验" scheme="https://plusnan.me/categories/%E4%B8%80%E7%82%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="信用卡" scheme="https://plusnan.me/tags/%E4%BF%A1%E7%94%A8%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>小心你的数据库查询窗口，以免误操作</title>
    <link href="https://plusnan.me/2021/12/16/db-console/"/>
    <id>https://plusnan.me/2021/12/16/db-console/</id>
    <published>2021-12-15T16:00:00.000Z</published>
    <updated>2023-07-24T15:08:15.777Z</updated>
    
    <content type="html"><![CDATA[<p>如果你的数据库查询窗口的第一行是<code>DROP DATABASE</code>，你又不小心点击了执行按钮……</p><p>有些数据库软件能够智能地执行光标所在行的指令，但有些数据库软件没那么智能，或者需要配置才能变聪明，一不小心，就会把窗口里面的所有SQL都执行一遍，所以使用数据库软件时要注意防范误操作。</p><span id="more"></span><h1 id="先检查再操作"><a href="#先检查再操作" class="headerlink" title="先检查再操作"></a>先检查再操作</h1><ul><li>执行UPDATE和DELETE之前，检查是否写了WHERE条件，并用同样条件执行一遍SELECT查询，检查条件是否正确。</li><li>执行选择或光标处SQL语句时，检查SQL语句是否选择完整。</li></ul><h1 id="及时清理破坏性SQL"><a href="#及时清理破坏性SQL" class="headerlink" title="及时清理破坏性SQL"></a>及时清理破坏性SQL</h1><p>在操作数据库时，如果需要执行有副作用的指令，例如DROP、DELETE、INSERT、UPDATE、TRUNCATE等，记得在执行完成后及时清理掉这些语句。可以用以下方式操作：</p><ul><li>每执行完一个SQL，就立刻把它删掉。</li><li>为了方便查找或记录，不希望把SQL删掉，可以在执行完SQL之后立刻把它注释掉。</li><li>在SQL窗口第一行放一个会报错的SQL，如果不小心点了执行，可以让数据库客户端在第一行就停下来。需要注意，有些数据库客户端在失败后会继续执行后面的指令，所以还要慎重。</li></ul><h1 id="连接生产系统，不要图方便"><a href="#连接生产系统，不要图方便" class="headerlink" title="连接生产系统，不要图方便"></a>连接生产系统，不要图方便</h1><p>生产系统权限意味着巨大的责任，而连接生产系统的方式越容易，犯错误的几率就越大，所以不要为了图方便把自己置于危险境地。可以用以下方法来防范：</p><ul><li>不要在同一个系统、同一个数据库软件中同时连接开发系统和生产系统，避免弄错环境。</li><li>连接生产系统之前总是手工输入账号密码，不要自动连接，使自己清晰地意识到自己在连接生产系统，同时防止无关人员盗用。</li><li>批量执行语句，或导入SQL文件时，先检查SQL内容，确认是否有破坏性指令（例如有些软件生成的导入SQL会先删表），确认无误后再执行。</li><li>把在生产系统执行的每条SQL都做好记录，包括执行时间、执行人、操作目的，以备事后追溯。</li><li>及时清理生产系统的数据库操作界面里的SQL。</li><li>操作完成后及时关闭数据库软件。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;如果你的数据库查询窗口的第一行是&lt;code&gt;DROP DATABASE&lt;/code&gt;，你又不小心点击了执行按钮……&lt;/p&gt;
&lt;p&gt;有些数据库软件能够智能地执行光标所在行的指令，但有些数据库软件没那么智能，或者需要配置才能变聪明，一不小心，就会把窗口里面的所有SQL都执行一遍，所以使用数据库软件时要注意防范误操作。&lt;/p&gt;</summary>
    
    
    
    <category term="一点人生的经验" scheme="https://plusnan.me/categories/%E4%B8%80%E7%82%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="数据库" scheme="https://plusnan.me/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>如果你的Web应用出现了莫名其妙的问题，你可以怀疑是否被WAF设备拦截</title>
    <link href="https://plusnan.me/2021/11/19/waf/"/>
    <id>https://plusnan.me/2021/11/19/waf/</id>
    <published>2021-11-18T16:00:00.000Z</published>
    <updated>2023-06-07T02:26:01.722Z</updated>
    
    <content type="html"><![CDATA[<p>有些时候，你的Web应用明明正常，但是突然有一天，它出现了莫名其妙的问题，无法定位到是哪一行代码错误，而且检查服务器配置也没有问题。这种情况下，可能是WAF安全设备在作怪。</p><p>本文用几个案例，讲一讲这种“莫名其妙”问题的现象如何，以及如何定位到WAF。</p><span id="more"></span><h1 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h1><ul><li>业务操作A从某时起突然开始提示“操作失败”，且更换账号、清理缓存、更换浏览器等方案皆无效，用户反馈显示所有人都无法成功办理业务。</li><li>业务操作B从差不多的时间开始出故障，点击按钮没有反应，更换账号或浏览器同样无效。</li><li>业务操作C也没有反应，后台抓包显示发生HTTP 418错误，而且有一个错误页面。跟开发人员确认，页面不是他们系统的。</li><li>其他业务未反馈异常。</li><li>询问实施与运维人员，确认近期没有碰过生产应用、生产数据库或其他相关服务器。</li></ul><h1 id="系统部署架构"><a href="#系统部署架构" class="headerlink" title="系统部署架构"></a>系统部署架构</h1><p>业务系统采用了既经典又传统的Web应用部署架构：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  Internet     |                    机房</span><br><span class="line">               |</span><br><span class="line">用户 ← CDN ← 网关 ← 负载均衡 ← 应用服务器（集群） ← 数据库服务器</span><br><span class="line">               |                     ↑</span><br><span class="line">               |                 Redis服务器</span><br><span class="line">               |</span><br></pre></td></tr></table></figure><p>根据架构图，询问各环节是否靠谱：</p><ul><li>用户经常“出故障”，然而本次已确认是系统问题，不是用户环境或操作问题。</li><li>CDN由一家比较靠谱的第三方公司提供，出故障机率不大。</li><li>负载均衡设备由一家比较靠谱的厂商生产，没有故障记录。</li><li>Redis服务器、数据库服务器偶尔出故障，但本次业务问题应该与数据库无关（猜测，需要进一步确认）。</li><li>应用服务器集群，每个节点部署的应用完全相同。应用服务器有故障记录，而且有些不靠谱的开发人员会把bug带到生产系统。</li></ul><h1 id="检查过程"><a href="#检查过程" class="headerlink" title="检查过程"></a>检查过程</h1><p>因故障发生前后未对生产系统服务器进行操作，首先排除自己人操作导致故障的可能性。</p><p>接下来排除集群节点故障，因为集群各节点应用相同，且只有特定功能失败，其他功能正常，不会是节点卡死导致的。</p><p>然后又排除了CDN的原因——通过修改自己电脑的hosts文件绕过了CDN，直接与服务器原始IP连接，问题依旧。</p><p>向开发人员确认两业务的代码：操作A是Ajax请求，操作B是普通的form表单提交。</p><p>下面分别分析A与B两个业务的情况。</p><h2 id="业务A"><a href="#业务A" class="headerlink" title="业务A"></a>业务A</h2><p>使用浏览器控制台观察请求，发现业务A在Networks页面现象如下：</p><p><img src="/img/2021-11-19-waf/a-1.png" alt="a-1"></p><p>其他请求正常，说明应用服务器没挂，唯独这个个别业务可能有bug。需要登录服务器检查应用后台日志。</p><p>登录到服务器，对每个节点的应用日志进行检查，未发现报错。重复操作几遍之后再检查日志，仍然未发现报错。我们怀疑程序未打错误日志。</p><p>然而再仔细观察浏览器抓包的内容：</p><p><img src="/img/2021-11-19-waf/a-2.png" alt="a-2"></p><p>从图中可以发现，在Header里面未找到“Response Headers”，没有返回内容，“General”中也没有找到“Status Code”，说明甚至没有HTTP状态码。看来连接可能是被“掐断”了。</p><p>再用curl测试一下。本地调用的话是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ curl -v -X POST -H &quot;Content-Type: application/json&quot; -b &quot;JSESSIONID=从服务器拷过来的cookie&quot; -d &quot;从浏览器抓到的AJAX提交的内容&quot; http://www.xxx.com/business/submit</span><br><span class="line">*   Trying xxx.xxx.xxx.xxx...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to www.xxx.com (xxx.xxx.xxx.xxx) port 80 (#0)</span><br><span class="line">&gt; POST /business/submit HTTP/1.1</span><br><span class="line">&gt; Host: www.xxx.com</span><br><span class="line">&gt; User-Agent: curl/7.58.0</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; Cookie: JSESSIONID=xxxxxxx</span><br><span class="line">&gt; Content-Type: application/json</span><br><span class="line">&gt; Content-Length: xxx</span><br><span class="line">&gt;</span><br><span class="line">* upload completely sent off: xxx out of xxx bytes</span><br><span class="line">* Empty reply from server</span><br><span class="line">* Connection #0 to host xxx.xxx.xxx.xxx left intact</span><br><span class="line">curl: (52) Empty reply from server</span><br><span class="line">* Closing connection 0</span><br></pre></td></tr></table></figure><p>未返回任何数据。</p><p>但登录到服务器里面操作就能返回HTTP 200 OK，还能看到JSON串，说明应用能正常响应：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># curl -v -X POST -H &quot;Content-Type: application/json&quot; -b &quot;JSESSIONID=从服务器拷过来的cookie&quot; -d &quot;从浏览器抓到的AJAX提交的内容&quot; http://127.0.0.1:8080/business/submit</span><br><span class="line">*   Trying 127.0.0.1...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to 127.0.0.1 port 8080 (#0)</span><br><span class="line">&gt; POST /business/submit HTTP/1.1</span><br><span class="line">&gt; Host: 127.0.0.1:8080</span><br><span class="line">&gt; User-Agent: curl/7.58.0</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; Cookie: JSESSIONID=xxxxxxx</span><br><span class="line">&gt; Content-Type: application/json</span><br><span class="line">&gt; Content-Length: xxx</span><br><span class="line">&gt;</span><br><span class="line">&lt; HTTP/1.1 200 OK</span><br><span class="line">&lt; Cache-Control: no-cache</span><br><span class="line">&lt; Connection: keep-alive</span><br><span class="line">&lt; Content-Length: xxx</span><br><span class="line">&lt; Content-Type: application/json</span><br><span class="line">&lt; Date: xxx, xx xxx xxxx xx:xx:xx GMT</span><br><span class="line">&lt;</span><br><span class="line">一个乱七八糟的JSON串</span><br><span class="line"></span><br><span class="line">* Connection #0 to host 127.0.0.1 left intact</span><br><span class="line">* Closing connection 0</span><br></pre></td></tr></table></figure><p>将127.0.0.1:1080换成负载均衡地址，重复操作几遍，仍然返回200 OK，说明负载均衡设备应该没有问题。另外对JSON串的内容进行检查，发现提示“办理“成功”或“办理失败！请勿重复办理！”，说明数据库也是正常的，否则不可能校验出“重复办理”。</p><h2 id="业务B"><a href="#业务B" class="headerlink" title="业务B"></a>业务B</h2><p>在进入B业务页面时，浏览器控制台显示oper.js有JavaScript语法错误：</p><p><img src="/img/2021-11-19-waf/b.png" alt="oper.js"></p><p>直接用浏览器查看oper.js内容，发现JavaScript脚本并未完整加载。分别在本地和服务器上使用curl命令获取oper.js内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在本地操作：</span><br><span class="line">$ curl http://www.xxx.com/static/js/oper.js</span><br><span class="line">curl: (18) transfer closed with outstanding read data remaining</span><br><span class="line">一堆不完整的js代码</span><br><span class="line"></span><br><span class="line">登录到服务器：</span><br><span class="line"># curl http://127.0.0.1:8080/static/js/oper.js</span><br><span class="line">一堆完整的js代码</span><br></pre></td></tr></table></figure><p>发现：在我们电脑上执行curl，脚本还没加载完整，网络连接就被“掐断”了；在服务器上执行curl（域名分别使用127.0.0.1:8080与负载均衡地址），脚本内容能完整加载。</p><h2 id="业务C"><a href="#业务C" class="headerlink" title="业务C"></a>业务C</h2><p>跟开发人员确认，他们的系统不会返回HTTP 418错误，而且错误页面与他们系统设计风格不符。说明错误页面不是该系统产生，而是由其他系统产生，例如CDN，但CDN表示这个错误页面也不是他们产生的。</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>根据上面一系列现象判断，我们确认现有系统与设备未发生故障，可能某个环节调整了安全策略，导致正常请求被错误拦截。</p><p>和甲方负责人员沟通之后，得知机房近期部署了WAF，但甲方既未通知各相关单位，也未派人观察WAF拦截记录。我们直接和WAF负责人员沟通，维护白名单之后问题解决。</p><h1 id="类似事件"><a href="#类似事件" class="headerlink" title="类似事件"></a>类似事件</h1><p>到了另一个项目，该项目使用HTTPS网站。证书即将过期时，登录到nginx服务器替换新证书，浏览器验证时却发现证书有效期未更新，仍为原证书的有效期。</p><p>仔细检查服务器，发现证书文件已正确替换、nginx配置正确，而且服务器内只有一个nginx实例，并已正确重启。</p><p>但是在测试时意外发现，在服务器上使用<code>curl -vIk https://127.0.0.1</code>查看证书有效期已经更新，但是使用<code>curl -vIk https://xxx.xxx.xxx.xxx</code>（外网地址）时证书有效期未更新，说明服务器和外网之间应该有某类设备。</p><p>经确认，该项目服务器与外网之间也是有一个WAF，联系相应部门在WAF上配置新证书，证书有效期问题就解决了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;有些时候，你的Web应用明明正常，但是突然有一天，它出现了莫名其妙的问题，无法定位到是哪一行代码错误，而且检查服务器配置也没有问题。这种情况下，可能是WAF安全设备在作怪。&lt;/p&gt;
&lt;p&gt;本文用几个案例，讲一讲这种“莫名其妙”问题的现象如何，以及如何定位到WAF。&lt;/p&gt;</summary>
    
    
    
    <category term="系统运维" scheme="https://plusnan.me/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="WAF" scheme="https://plusnan.me/tags/WAF/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7安全等保整改记录</title>
    <link href="https://plusnan.me/2021/10/24/centos-security/"/>
    <id>https://plusnan.me/2021/10/24/centos-security/</id>
    <published>2021-10-23T16:00:00.000Z</published>
    <updated>2023-06-06T03:32:47.588Z</updated>
    
    <content type="html"><![CDATA[<p>为满足等保测评要求，对CentOS 7服务器进行了统一整改，整改命令记录如下。</p><span id="more"></span><h1 id="升级SSH"><a href="#升级SSH" class="headerlink" title="升级SSH"></a>升级SSH</h1><p>网上教程太多了，此处不再提供。</p><p>如果从7.x旧版升级到8.x或9.x，需要注意几个问题：</p><ol><li>禁用SELinux：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">&#x27;s/=enforcing/=disabled/&#x27;</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><ol><li>删除旧的key：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -f /etc/ssh/ssh*key</span><br></pre></td></tr></table></figure><ol><li>允许root登录：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;PermitRootLogin yes&quot;</span> &gt;&gt; /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><h1 id="升级curl（需要网络）"><a href="#升级curl（需要网络）" class="headerlink" title="升级curl（需要网络）"></a>升级curl（需要网络）</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh http://www.city-fan.org/ftp/contrib/yum-repo/city-fan.org-release-3-4.rhel7.noarch.rpm</span><br><span class="line">sed -i <span class="string">&#x27;s/enabled=0/enabled=1/g&#x27;</span> /etc/yum.repos.d/city-fan.org.repo</span><br><span class="line">sed -i <span class="string">&#x27;s/gpgcheck=1/gpgcheck=0/g&#x27;</span> /etc/yum.repos.d/city-fan.org.repo</span><br><span class="line">yum update -y --nogpgcheck curl</span><br></pre></td></tr></table></figure><h1 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shell不记录历史命令</span></span><br><span class="line">sed -i <span class="string">&#x27;s/HISTSIZE=1000/HISTSIZE=0/g&#x27;</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># shell自动超时</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export TMOUT=600&#x27;</span> &gt;&gt; /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 密码复杂度规则、账号锁定规则</span></span><br><span class="line">sed -i <span class="string">&#x27;s/authtok_type=/authtok_type= minlen=12 lcredit=-1 ucredit=-1 dcr+++edit=-1 ocredit=-1 enforce_for_root/&#x27;</span> /etc/pam.d/system-auth</span><br><span class="line">sed -i <span class="string">&#x27;s/99999/120/g&#x27;</span> /etc/login.defs</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;auth required pam_tally.so onerr=fail no_magic_root&#x27;</span> &gt;&gt; /etc/pam.d/system-auth</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;account required pam_tally.so deny=5 unlock_time=300 root_unlock_time=300 no_magic_root even_deny_root_account per_user reset&#x27;</span> &gt;&gt; /etc/pam.d/system-auth</span><br><span class="line"></span><br><span class="line"><span class="comment"># SSH加密算法</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521&#x27;</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;为满足等保测评要求，对CentOS 7服务器进行了统一整改，整改命令记录如下。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="安全" scheme="https://plusnan.me/tags/%E5%AE%89%E5%85%A8/"/>
    
    <category term="CentOS" scheme="https://plusnan.me/tags/CentOS/"/>
    
    <category term="等保" scheme="https://plusnan.me/tags/%E7%AD%89%E4%BF%9D/"/>
    
  </entry>
  
  <entry>
    <title>用Docker快速为办公室搭建VPN</title>
    <link href="https://plusnan.me/2021/09/10/remote-vpn/"/>
    <id>https://plusnan.me/2021/09/10/remote-vpn/</id>
    <published>2021-09-09T16:00:00.000Z</published>
    <updated>2023-06-06T12:38:13.763Z</updated>
    
    <content type="html"><![CDATA[<p>由于武汉肺炎疫情原因，随时可能会封城，导致无法前往办公室办公。如果公司没有提供VPN，为了在居家办公时能有一个连接办公室资源的方法，可以考虑自己搭一个简易的VPN。</p><span id="more"></span><h1 id="搭建VPN"><a href="#搭建VPN" class="headerlink" title="搭建VPN"></a>搭建VPN</h1><h2 id="服务器准备"><a href="#服务器准备" class="headerlink" title="服务器准备"></a>服务器准备</h2><p>准备一个服务器，能够访问公司办公室各资源，而且能连接互联网。配置好之后，安装Docker，并开放服务器443端口。</p><h2 id="安装容器和VPN配置"><a href="#安装容器和VPN配置" class="headerlink" title="安装容器和VPN配置"></a>安装容器和VPN配置</h2><p>前往<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dwcHVya2luZy9vY3NlcnYtZG9ja2Vy">https://github.com/wppurking/ocserv-docker<i class="fa fa-external-link-alt"></i></span>，将内容全部下载。也可以直接输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/wppurking/ocserv-docker.git</span><br></pre></td></tr></table></figure><p>进入<code>ocserv-docker/ocserv</code>目录，清空<code>ocpasswd</code>文件内容，删除默认账号。</p><p>再修改<code>ocserv.conf</code>，在结尾增加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">route = 192.168.0.0/255.255.255.0</span><br><span class="line"></span><br><span class="line">custom-header = &quot;X-CSTP-Client-Bypass-Protocol: true&quot;</span><br></pre></td></tr></table></figure><p>route后面的IP需要根据实际情况配置。例如公司内网采用192.168网段，那么就是<code>192.168.0.0/255.255.255.0</code>。如果不确定，也可以不增加route这行配置，这样连上VPN后所有流量都会通过VPN访问。</p><h2 id="启动VPN"><a href="#启动VPN" class="headerlink" title="启动VPN"></a>启动VPN</h2><p>下载完成后，进入该目录并启动容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ocserv-docker</span><br><span class="line">docker run -d --privileged --restart unless-stopped --name ocserv-docker -v ~/ocserv-docker/ocserv:/etc/ocserv -p 443:443/tcp wppurking/ocserv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志，检查是否正常运行</span></span><br><span class="line">docker logs ocserv-docker</span><br></pre></td></tr></table></figure><h2 id="分配账号密码"><a href="#分配账号密码" class="headerlink" title="分配账号密码"></a>分配账号密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it ocserv-docker ocpasswd 用户名</span><br></pre></td></tr></table></figure><p>输入两遍密码，修改立即生效，无需重启VPN服务器。</p><h1 id="公网映射"><a href="#公网映射" class="headerlink" title="公网映射"></a>公网映射</h1><p>VPN搭好之后，需要将该VPN服务器的443端口映射到公网上面。如果公司有公网IP，而且能够进行配置，可找相应部门把端口配置好。如果没有相应资源，可参考<a href="/2018/07/14/tunnel/">内网穿透教程</a>进行配置。</p><h1 id="VPN客户端"><a href="#VPN客户端" class="headerlink" title="VPN客户端"></a>VPN客户端</h1><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY2lzY28uY29tL2MvZW4vdXMvc3VwcG9ydC9zZWN1cml0eS9hbnljb25uZWN0LXNlY3VyZS1tb2JpbGl0eS1jbGllbnQtdjQteC9tb2RlbC5odG1sI350YWItZG93bmxvYWRz">下载Cisco AnyConnect客户端<i class="fa fa-external-link-alt"></i></span>，下载完成后进行安装。</p><p>第一次启动时，需要进入设置页面，将“Block connections to untrusted servers”前面的勾取消。</p><p>输入VPN公网映射之后的地址和端口，点击Connect即可连接。启动后会出现安全提示，点击“Connect Anyway”连接，然后输入账号密码即可连接VPN。</p><h1 id="扩展思考：能不能用来翻墙？"><a href="#扩展思考：能不能用来翻墙？" class="headerlink" title="扩展思考：能不能用来翻墙？"></a>扩展思考：能不能用来翻墙？</h1><p>当然可以，在国外服务器上用相同方式部署一套VPN软件即可，但是由于Cisco AnyConnect的流量特征太明显，所以建议用其他更可靠的方式翻墙。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;由于武汉肺炎疫情原因，随时可能会封城，导致无法前往办公室办公。如果公司没有提供VPN，为了在居家办公时能有一个连接办公室资源的方法，可以考虑自己搭一个简易的VPN。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="VPN" scheme="https://plusnan.me/tags/VPN/"/>
    
    <category term="远程办公" scheme="https://plusnan.me/tags/%E8%BF%9C%E7%A8%8B%E5%8A%9E%E5%85%AC/"/>
    
  </entry>
  
  <entry>
    <title>买房避坑指南（八）：要不要买车位</title>
    <link href="https://plusnan.me/2021/08/15/buy-house-8/"/>
    <id>https://plusnan.me/2021/08/15/buy-house-8/</id>
    <published>2021-08-14T16:00:00.000Z</published>
    <updated>2023-07-18T02:17:06.255Z</updated>
    
    <content type="html"><![CDATA[<p>买个房子都很费劲了，要不要继续出血，花几十万买那个只有2.5x5m=12.5m²的小方格？</p><span id="more"></span><h1 id="要不要买？"><a href="#要不要买？" class="headerlink" title="要不要买？"></a>要不要买？</h1><h2 id="什么情况下不要买车位"><a href="#什么情况下不要买车位" class="headerlink" title="什么情况下不要买车位"></a>什么情况下不要买车位</h2><h3 id="不需要车位"><a href="#不需要车位" class="headerlink" title="不需要车位"></a>不需要车位</h3><p>很明显，如果你永远都没有买车的计划，你当然不会考虑车位的问题。</p><p>另外可以考虑小区和周围环境，如果小区车位配比高于1:1.2，或者小区位于城区而非郊区，周围交通便利，生活配套丰富，那么说明车位的需求不会那么大，就可以考虑不买车位（长租别人车位），甚至不买车。</p><h3 id="投资"><a href="#投资" class="headerlink" title="投资"></a>投资</h3><p>那有些人会问，可不可以买个车位放在那里，然后当个房东去倒卖或挣租金呢？</p><p>因为车位只能租给小区内的业主，那么就会存在两种情况：</p><ul><li>如果车位配比高，那么对于业主来说不愁找不到车位，这样的话，车位租金就很难很高。</li><li>如果车位配比低，那么随着业主入住率增高，车位的需求也会增加，看起来可能会有机会提高租金。</li></ul><p>但是你还要考虑实际情况，例如：</p><ul><li>前期入住率不高的时候，车位可能也是不愁租不到的，所以前期车位租金也抬不上去；</li><li>随着时间推移，开发商也会因为车位卖不动，将剩余车位大幅降价促销，会使得新车位比你的旧车位便宜；</li><li>如果小区租户较多，特别是合租的租户较多，那么车位需求与入住率就不会成正比；</li><li>如果城市有限购，再等一段时间，有些投资客开始抛售房产，到时候房子附带的车位也就跟着以跳楼价抛售了。</li></ul><p>所以，如果你在一开始就以投资目的买车位，那么你会发现你的前期成本比较高，转手倒卖时卖不上价，而出租时租金又不一定能够回本，更别说赚钱了。</p><h2 id="什么情况下不要急着买车位"><a href="#什么情况下不要急着买车位" class="headerlink" title="什么情况下不要急着买车位"></a>什么情况下不要急着买车位</h2><p>如果小区是刚需房，车位比低于1:1，或者小区位于郊区，周围交通不便，那么你迟早要买辆车，买车位也是早晚的事儿。</p><p>不过你还是可以稍微晚一点再买车位，“早买早享受，晚买享折扣”，先租其他业主的车位。如果地方偏僻，交警都懒得贴罚单，你甚至还可以把车停到外面。这样可以等到两种结果：</p><ul><li>按照法律规定，车位是不允许“只售不租”的。如果有业主牵头维权，而且维权成功，就可以等到一些租赁车位。</li><li>因为车位只能卖给小区业主，坚持两三年之后，开发商的车位实在卖不出去，只能降价促销。</li></ul><p>如果你认为买车位的时机已经合适，但是暂时还没车，而且已经有买车的计划，也可以考虑当一段时间房东，把它暂时租出去。</p><h2 id="什么情况下要尽快买车位了"><a href="#什么情况下要尽快买车位了" class="headerlink" title="什么情况下要尽快买车位了"></a>什么情况下要尽快买车位了</h2><h3 id="新能源车"><a href="#新能源车" class="headerlink" title="新能源车"></a>新能源车</h3><p>很明显，如果你的车是新能源车，那么你就不得不尽快买个车位，除非你能找到其他地方充电。</p><h3 id="不太好租了"><a href="#不太好租了" class="headerlink" title="不太好租了"></a>不太好租了</h3><p>新小区，前期入住率不高，车位的需求自然就不高。但是随着入住率提高，车位需求就会自然提高。所以你还是需要经常留意车位出租的情况。</p><p>当你发现地下车位快要停满，车位不好租的时候，这时候就该考虑买车位，不过这都是交房几年之后的事情了。</p><h3 id="交警开始频繁贴罚单"><a href="#交警开始频繁贴罚单" class="headerlink" title="交警开始频繁贴罚单"></a>交警开始频繁贴罚单</h3><p>如果小区位于郊区，一开始可能没人会去贴罚单，就算报警，交警也懒得过来贴。但是随着城市发展，有些近郊逐渐变成市区，交警就可能会来贴条了。贴的次数多了，车位的需求就会突然增加，然后你也需要结合地下车库现状考虑是否入手车位了。</p><p>需要留意的是，有些地方贴罚单的不一定是交警，而是城管。如果城管贴的罚单跟交管12123系统没有连接，大可不必管他。</p><h1 id="要买，买哪个车位？"><a href="#要买，买哪个车位？" class="headerlink" title="要买，买哪个车位？"></a>要买，买哪个车位？</h1><h2 id="买人防车位，还是产权车位？"><a href="#买人防车位，还是产权车位？" class="headerlink" title="买人防车位，还是产权车位？"></a>买人防车位，还是产权车位？</h2><p>车位按产权可以分为两种，一种是产权车位，产权归业主，能办理房产证；另一种是人防车位，产权归国家，业主只有使用权，不能办房产证。</p><p>有人会说，人防车位有个“战时征用”的问题，所以不适合买。这种说法是不合适的，因为一旦真的“战时征用”，你要考虑的就不是车停在哪个地方的问题，而是如何逃难的问题了（而且汽车也会因为加不到油、充不了电而变为废铁）。也就是说，人防车位其实也是可以放心买的。</p><p>产权车位价格通常比人防车位贵不少，而且产权车位除了车位价格，还有公共维修基金和契税两笔费用。所以纯自住，而且图省钱的话可以考虑人防车位。</p><p>但是，由于人防车位产权不清，手续也需要靠租赁的形式来办理，未来转手时可能会遇到麻烦。如果将来有计划卖房子，还是应该去买产权清楚的产权车位。</p><p>另一方面，有些小区的人防车位不允许装充电桩，如果你计划或已经购买了新能源车，务必问清楚充电桩的安装问题。</p><h2 id="如果还能选车位，选哪个位置？"><a href="#如果还能选车位，选哪个位置？" class="headerlink" title="如果还能选车位，选哪个位置？"></a>如果还能选车位，选哪个位置？</h2><p>选车位时，当然是选离家近的车位。在此大原则之下，还有一些细节，可以让你未来使用车位时更舒服：</p><h3 id="优选独立车位"><a href="#优选独立车位" class="headerlink" title="优选独立车位"></a>优选独立车位</h3><p><img src="/img/2021-08-15-buy-house-8/1.png" alt="独立车位"></p><p><img src="/img/2021-08-15-buy-house-8/5.png" alt="独立车位"></p><p>独立车位是最好的位置了，爱怎么停就怎么停，不跟任何业主冲突。</p><p>但是，如果车位两侧挨着墙或柱子，则需要问清楚车位宽度、车位边缘与墙的距离，如果离得太近，上下车会很困难。</p><h3 id="优选车头靠柱车位"><a href="#优选车头靠柱车位" class="headerlink" title="优选车头靠柱车位"></a>优选车头靠柱车位</h3><p><img src="/img/2021-08-15-buy-house-8/2.png" alt="车头靠柱"></p><p>车头靠柱也是个好位置，柱子作为天然的屏障，无需担心其他业主挤你。车辆入库之后，你也可以放心地开关车门，不存在剐蹭的问题。</p><h3 id="次选靠边车位"><a href="#次选靠边车位" class="headerlink" title="次选靠边车位"></a>次选靠边车位</h3><p><img src="/img/2021-08-15-buy-house-8/3.png" alt="三车车位"></p><p>如果没有靠柱车位，那么也应该选择一个靠边的车位，给自己留出上下车的空间。</p><h3 id="避免中间车位"><a href="#避免中间车位" class="headerlink" title="避免中间车位"></a>避免中间车位</h3><p><img src="/img/2021-08-15-buy-house-8/3.png" alt="三车车位"></p><p>中间车位就有“左右夹击”的问题。如果左侧车停得太靠右，右侧车停得太靠左，你自己还是个大SUV，那么你别想上下车了。</p><h3 id="避免墙角车位"><a href="#避免墙角车位" class="headerlink" title="避免墙角车位"></a>避免墙角车位</h3><p>如果车位离墙角太近，那么就非常考验车技，例如需要借助其他车位才能倒车入库，或者出库时需要比其他车位更加小心，等等。</p><h3 id="避免柱子靠车门车位"><a href="#避免柱子靠车门车位" class="headerlink" title="避免柱子靠车门车位"></a>避免柱子靠车门车位</h3><p><img src="/img/2021-08-15-buy-house-8/4.png" alt="车门靠柱"></p><p>如果车位旁边有柱子，但没有紧靠车头，那么选择时要加小心，尽量避免左侧有柱子的车位，不然的话有可能是个紧靠车门的柱子，使得上下车困难。</p><h2 id="选位置的坑"><a href="#选位置的坑" class="headerlink" title="选位置的坑"></a>选位置的坑</h2><h3 id="斜坡车位"><a href="#斜坡车位" class="headerlink" title="斜坡车位"></a>斜坡车位</h3><p>如果车位价格比较便宜，特别是比旁边车位便宜，你需要留意车位是否带斜坡。</p><p>虽然斜坡停车并不会比普通车位恶心多少，但是如果你的车技不好，或者是在毫不知情的情况下买到斜坡车位，这就非常恶心了。如果你还是个经常忘拉手刹的新手，那你的预算就需要多出一笔修车费用。</p><h3 id="不是图上离家近，就是真的离家近"><a href="#不是图上离家近，就是真的离家近" class="headerlink" title="不是图上离家近，就是真的离家近"></a>不是图上离家近，就是真的离家近</h3><p>在交房之前买车位，你需要仔细观察小区车位分布图，注意单元门是否直通车位。有的时候，车位看起来挨着住宅，但是可能实际上在楼后面，或者有墙体、栅栏阻隔，需要绕个圈才能过去，所以要把从单元门到车位的动线问清楚。</p><p>交房之后再买车位就不存在这个问题，因为你可以实地考察了。</p><h3 id="离车库出入口、拐弯处、单元门太近"><a href="#离车库出入口、拐弯处、单元门太近" class="headerlink" title="离车库出入口、拐弯处、单元门太近"></a>离车库出入口、拐弯处、单元门太近</h3><p>选车位时，需要注意车位在车库的整体布局。如果车位离车库出入口、拐弯处、单元门太近，发生剐蹭的概率就会比其他位置高，而且你自己车出库时，也需要比其他位置更加小心，否则也是容易剐蹭。</p><p>如果挨单元门太近，车位还有可能被其他低素质业主占用。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ul><li><a href="/2020/11/22/buy-house-0/">总述</a></li><li><a href="/2020/11/29/buy-house-1/">购房资格</a></li><li><a href="/2020/12/05/buy-house-2/">地产项目情况</a></li><li><a href="/2020/12/12/buy-house-3/">项目周围环境</a></li><li><a href="/2020/12/19/buy-house-4/">售楼处里的套路</a></li><li><a href="/2020/12/26/buy-house-5">关于合同</a></li><li><a href="/2020/12/28/buy-house-6/">不要买公寓！</a></li><li><a href="/2021/07/12/buy-house-7/">房贷贷多少合适</a></li><li><strong>要不要买车位</strong></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;买个房子都很费劲了，要不要继续出血，花几十万买那个只有2.5x5m=12.5m²的小方格？&lt;/p&gt;</summary>
    
    
    
    <category term="楼市" scheme="https://plusnan.me/categories/%E6%A5%BC%E5%B8%82/"/>
    
    
    <category term="买房" scheme="https://plusnan.me/tags/%E4%B9%B0%E6%88%BF/"/>
    
  </entry>
  
  <entry>
    <title>买房避坑指南（七）：房贷贷多少合适</title>
    <link href="https://plusnan.me/2021/07/12/buy-house-7/"/>
    <id>https://plusnan.me/2021/07/12/buy-house-7/</id>
    <published>2021-07-11T16:00:00.000Z</published>
    <updated>2023-06-05T09:52:37.957Z</updated>
    
    <content type="html"><![CDATA[<p>询问买房贷款问题，年纪稍大的人会建议多贷款，“跑赢通胀”，现在还是这样吗？</p><span id="more"></span><h1 id="“跑赢通胀”的背景"><a href="#“跑赢通胀”的背景" class="headerlink" title="“跑赢通胀”的背景"></a>“跑赢通胀”的背景</h1><p>在过去那个年代：</p><ol><li>经济形势整体乐观，经济增长带动民众生活水平提高</li><li>靠自己的工资，二三十年能比较容易还清贷款</li><li>工作前景向好，收入水平逐步提高</li></ol><p>而现在呢</p><ol><li>经济形势下行，加上疫情影响，形势不再像以前乐观</li><li>靠“六个钱包”凑齐首付都困难</li><li>工作996、007，收入却不见涨，而且还有随时被裁员的风险</li></ol><p>在这个背景下，你觉得现在的重点还是跑赢通胀吗？</p><h1 id="所以这个时候要想什么"><a href="#所以这个时候要想什么" class="headerlink" title="所以这个时候要想什么"></a>所以这个时候要想什么</h1><h2 id="不要强行上车"><a href="#不要强行上车" class="headerlink" title="不要强行上车"></a>不要强行上车</h2><p>如果你家“六个钱包”真的连凑齐首付都困难，那么不要买房。</p><p>一旦强行上车，这意味着你的家庭已经没有任何保险，而且你们全家必须至少维持现有收入水平不下降，甚至要继续上升，才能还得起后面的本金和利息。很明显，经济高速增长的时代已经结束，所以不要拿不确定的未来去赌。</p><h2 id="尽量降低杠杆"><a href="#尽量降低杠杆" class="headerlink" title="尽量降低杠杆"></a>尽量降低杠杆</h2><p>尽量减少贷款的量。可以从两方面入手，一方面是提高首付比例，另一方面是降低预算。</p><p>提高首付比例，也就是在家庭承受范围之内，尽可能多用现金，少贷款。而且目前利率也比较高，少贷款就能有效减少月供压力以及贷款总利息的支出。经济上行的时候，利息可以被增长的工资给稀释掉，但现在情况正好反过来，收入不仅有可能下降，而且会被利息给稀释掉，给自己带来更大压力。</p><p>降低预算，也是降低杠杆的有效方法。假如你家里现在能掏出300万，并且你家庭年收入50万，那么你就不要加压买600万的房子，而是把预算控制在400万以内，或者进一步压低预算，只买300万甚至200万的房子。如果没有符合条件的新房，就考虑二手的老房子，或者继续租房。因为你的杠杆率不高，只要家里省吃俭用，两三年之内还能攒到一些钱，这样即便未来收入下降，甚至失业，你也不会有太大负担。</p><p>在贷款方式上，可以考虑选择等额本金，而非等额本息。虽然前期还款压力会大一些，但是总利息相对较低，而且一旦家庭财务状况缓解，你就可以提前还贷，甚至直接还清，进一步减少利息支出。</p><h2 id="考虑断供风险"><a href="#考虑断供风险" class="headerlink" title="考虑断供风险"></a>考虑断供风险</h2><p>即使经过计算，你发现你的压力还能接受，你也不要把家中存款全部花光。你需要尽量攒钱，保证一旦出现状况（失业、生病、发生事故等），你们家庭的存款还可以维持一两年时间。失业之后，既不会因为没钱而被迫断供，又能维持基本生活，这样在找新工作的时候就不会有那么大的压力了。</p><h2 id="及时止损"><a href="#及时止损" class="headerlink" title="及时止损"></a>及时止损</h2><p>如果你家庭在三四线城市甚至更低线城市有多余房产，可以考虑及时抛售掉，增加家中的现金数量。</p><p>由于未来人口会向大城市和省会城市集中，所以其他城市的房产总体上是要贬值的。像鹤岗这样的地方，如果不是网红帮忙，甚至连接盘侠都找不到，所以不要再考虑能多挣多少钱，而是考虑能少亏多少钱，及时抛售。亏得比别人少，从相对意义上讲，就是比别人挣得多了。</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>量力而行，而且要给未来留出足够的保险空间。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ul><li><a href="/2020/11/22/buy-house-0/">总述</a></li><li><a href="/2020/11/29/buy-house-1/">购房资格</a></li><li><a href="/2020/12/05/buy-house-2/">地产项目情况</a></li><li><a href="/2020/12/12/buy-house-3/">项目周围环境</a></li><li><a href="/2020/12/19/buy-house-4/">售楼处里的套路</a></li><li><a href="/2020/12/26/buy-house-5">关于合同</a></li><li><a href="/2020/12/28/buy-house-6/">不要买公寓！</a></li><li><strong>房贷贷多少合适</strong></li><li><a href="/2021/08/15/buy-house-8/">要不要买车位</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;询问买房贷款问题，年纪稍大的人会建议多贷款，“跑赢通胀”，现在还是这样吗？&lt;/p&gt;</summary>
    
    
    
    <category term="楼市" scheme="https://plusnan.me/categories/%E6%A5%BC%E5%B8%82/"/>
    
    
    <category term="买房" scheme="https://plusnan.me/tags/%E4%B9%B0%E6%88%BF/"/>
    
    <category term="房贷" scheme="https://plusnan.me/tags/%E6%88%BF%E8%B4%B7/"/>
    
  </entry>
  
  <entry>
    <title>疫情囤货指南</title>
    <link href="https://plusnan.me/2021/06/16/supplies/"/>
    <id>https://plusnan.me/2021/06/16/supplies/</id>
    <published>2021-06-15T16:00:00.000Z</published>
    <updated>2024-01-21T15:53:23.637Z</updated>
    
    <content type="html"><![CDATA[<p>近些月来，虽然国内的武汉肺炎疫情得到了基本控制，但是这种控制是通过强硬封城实现的。在封城期间，正常的生活会被打断，而且封城时间不可预测，恢复时间也无法确定，因此平时在家就需要适当做一些准备，以免遇到困难。</p><span id="more"></span><h2 id="物资准备"><a href="#物资准备" class="headerlink" title="物资准备"></a>物资准备</h2><h3 id="食品"><a href="#食品" class="headerlink" title="食品"></a>食品</h3><p>食品是最关键的事情。一旦封城，家中没有食品，你基本上会饿肚子，严重的话甚至可能会饿死，而且对于外面执行封城的人来说，你死了，只是少了个病原体而已，对他们只有好处，没有坏处，所以根本不会去关心你的死活。</p><p>尽管如此，大量囤积食品也是不科学的，因为食品会过期变质。所以要考虑合理配置食品，既能保证封城时不会缺少食物，又不会造成浪费。</p><p>家中准备食品时，可以进行“三级储备”，具体为以下三种：</p><ul><li>层级一：保质期短的食物，例如各种蔬菜。因为这类食物保质期不长，所以不要大量购买，只保持一个星期左右的量即可。</li><li>层级二：保质期稍长的食物，例如肉类、鸡蛋，以及土豆、白菜等蔬菜，可保持两星期至一个月的量。</li><li>层级三：保质期很长的食物，例如方便面、罐头、压缩饼干、脱水蔬菜、自热食品，以及大米、白面等。这些食物也要至少保持半个月到一个月左右的量。</li></ul><p>至于饮用水，因为自来水烧开以后也是能喝的，所以能烧水的水壶当然是必需品。但如果自来水水质不好，应当适当准备瓶装水、桶装水。</p><p>做三级储备还要注意三点：</p><ol><li>要注意各种食品的保质期和储存方法，不要没开始吃，就给放坏了。</li><li>要进行动态更新，也就是平时要主动吃掉一些放得比较长、保质期剩余时间不多的食品，然后再补充新的食品。</li><li>要增加食品的多样性，例如方便面、罐头和自热食品准备不同的种类、口味。一旦真的封城了，连续吃几天方便面，会让你再也不想碰方便面。</li></ol><h3 id="药品"><a href="#药品" class="headerlink" title="药品"></a>药品</h3><p>家中应该预备一个应急药箱，其中包含感冒药、退烧药、拉肚子药、创可贴、红药水（或酒精）等药品，以及体温计等工具。</p><p>如果没有退烧药，应该趁疫情管控比较松的时候，想办法去弄一些，以免因为得了普通感冒而被拉去隔离。</p><p>如果有需要定期服用的药品，则要设法提前准备一个月的量，动态更新，以免封城时候买不到药。</p><p>不要指望封城开始之后能买到药或打到120。西安封城的教训告诉我们，真正封城的时候，医院领导更在乎的是自己的乌纱帽，所以即使你马上要死了，医院也会因为你没做核酸检测而拒绝救命。</p><h3 id="生活必需品"><a href="#生活必需品" class="headerlink" title="生活必需品"></a>生活必需品</h3><p>除了食品药品，生活必需品也应该有备用的份儿。建议每一种用品都多买一套，例如厕所的香皂、肥皂、洗发水、卫生纸，厨房的盐、酱油、醋、洗洁精等，女性的卫生巾，还有通用的塑料袋，等等。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="关于“保供”"><a href="#关于“保供”" class="headerlink" title="关于“保供”"></a>关于“保供”</h3><p>有些地方在封城时，会提供一些“保供通道”，说封城期间可以去这些商家购买生活物品。但是，一旦真正封城，我们不能指望真的从这些渠道买到东西，必须平时就做好准备。</p><p>正常的状态下，多数人不需要集中地采购物资，需要时可以随时去楼下小卖店，可以随时叫外卖，可以随时网购等快递配送，不会产生集中的购物需求，但是一旦封城，这些分散的渠道都会被关闭，而且不少人要囤积物资，所以那几家保供单位会在极短时间内涌入来自整个城市的巨量需求，结果你会发现所有有用的物资都会被抢光，连下单的机会都没有，更别说及时配送了。</p><p>基于同样的原因，封城期间，外卖、快递和各种配送也会被迫中断，因此不能指望外卖和网购来维持生活。</p><h3 id="邻里互助"><a href="#邻里互助" class="headerlink" title="邻里互助"></a>邻里互助</h3><p>平时要留意所在的社区是否有物业群、业主群，如果有，要及时加入组织。封城之后，有些人可能会愿意交换多余物资，或者在业主群利用自己的渠道来售卖物资。尽管价格可能会贵些，总比没有强。</p><h3 id="小道消息"><a href="#小道消息" class="headerlink" title="小道消息"></a>小道消息</h3><p>封城之前，业主群或各种地方会出现小道消息，甚至出现抢购潮，遇到这种情况要抓紧进行准备。</p><p>注意官方“辟谣”的内容。实践证明，被官方认证的“谣言”经常是领先的预言，因此既不要轻信官方消息，也不要无视“谣言”和小道消息。</p><h3 id="个人技能"><a href="#个人技能" class="headerlink" title="个人技能"></a>个人技能</h3><p>很明显，如果你到现在还不会做饭，应该尽快学会如何做饭。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;近些月来，虽然国内的武汉肺炎疫情得到了基本控制，但是这种控制是通过强硬封城实现的。在封城期间，正常的生活会被打断，而且封城时间不可预测，恢复时间也无法确定，因此平时在家就需要适当做一些准备，以免遇到困难。&lt;/p&gt;</summary>
    
    
    
    <category term="一点人生的经验" scheme="https://plusnan.me/categories/%E4%B8%80%E7%82%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="疫情" scheme="https://plusnan.me/tags/%E7%96%AB%E6%83%85/"/>
    
    <category term="应急储备" scheme="https://plusnan.me/tags/%E5%BA%94%E6%80%A5%E5%82%A8%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>浅谈社招招聘（四）：面试的安排</title>
    <link href="https://plusnan.me/2021/05/12/interview/"/>
    <id>https://plusnan.me/2021/05/12/interview/</id>
    <published>2021-05-11T16:00:00.000Z</published>
    <updated>2023-10-27T04:28:09.348Z</updated>
    
    <content type="html"><![CDATA[<p>前文谈到了笔试，本文继续谈一谈面试的经验。</p><span id="more"></span><h2 id="面试的目的"><a href="#面试的目的" class="headerlink" title="面试的目的"></a>面试的目的</h2><p>面试是了解一个人的重要途径。通过面试过程的言谈举止，可以大体了解到应聘者性格、思维，也能从应聘者反应当中看出他对技术与非技术问题的理解情况。因此招聘可以没有笔试，但无论是现场面试，还是远程面试，招聘一定要安排面试。</p><p>有些公司规模较大，会安排两轮或多轮面试。这种情况下，每轮面试通常会由不同的部门主导，或者带有不同的目的，例如第一轮由人事部门主导，考察基本情况与基本能力。第二轮由具体开发部门主导，考察具体的技术能力，能否与开发团队有效配合，甚至讨论薪资待遇，等等。</p><h2 id="面试问题设计"><a href="#面试问题设计" class="headerlink" title="面试问题设计"></a>面试问题设计</h2><p>设计面试问题时，要考虑自己面试的目的：</p><ul><li>假如团队已经成型，只需要一些按命令干活的人，那么面试问题可以围绕团队现有技术路线展开，考察应聘者是否掌握相应的工具，以及能否理解你的命令。</li><li>假如业务发展，需要做一些新技术的尝试，那么面试问题就不应局限于某个框架的用法，而是考察应聘者是否理解框架深层次的东西，以及思维能力如何。</li><li>假如业务发展，需要分拆团队，那么面试问题又需要考察应聘者是否具备一定的管理经验。鉴于本系列文章主要招聘初中级开发人员，本文不再详细讨论如何考察管理能力。</li></ul><h3 id="必问题"><a href="#必问题" class="headerlink" title="必问题"></a>必问题</h3><p>有三个问题是务必要问的，一个是自我介绍，一个是（社招）离职原因，还有一个是面试结束之前，让应聘者反问招聘者。</p><h4 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h4><p>自我介绍是最常用的开场白，可以让招聘者和应聘者共同进入状态。通过应聘者简历和自我介绍，我们可以大概了解他们基本工作经历和语言表达能力。</p><h4 id="离职原因（社招）"><a href="#离职原因（社招）" class="headerlink" title="离职原因（社招）"></a>离职原因（社招）</h4><p>离职原因不光是公司考察员工的问题，其实也是员工考察公司的问题。</p><p>虽然聪明的应聘者往往不会直说上家公司问题，也不会直说想涨工资，但如果他们提出了具体的原因（例如上家工作压力过大，或者通勤太远），招聘者在后面就可以和应聘者共同探讨，判断新的岗位能否满足应聘者，不合适的话就可以尽快结束面试，否则的话，就算勉强发了offer，早晚还是要跳槽的。</p><p>如果碰到多次换工作的，可以进一步问频繁离职的原因，是主观原因还是客观原因，从而判断能否录用。</p><h4 id="你还有什么问题要问吗"><a href="#你还有什么问题要问吗" class="headerlink" title="你还有什么问题要问吗"></a>你还有什么问题要问吗</h4><p>面试结束之前，可以向应聘者抛出这个问题，让他们反问招聘者。通过他们提出的问题，来了解到他们对新工作的关注点，例如薪资待遇、晋升机会等。</p><h3 id="选问题"><a href="#选问题" class="headerlink" title="选问题"></a>选问题</h3><p>面试是随机性很强的事情，而且很多时候也是“随缘”的事情，所以你的问题都可能会变成“选问题”。</p><p>即便如此，招聘者也应当事先准备一个题库，记录自己的关注点、考察点，这样在面试时候才能随机应变，否则的话容易让应聘者困扰。</p><p>在事先准备好题目之后，可以从以下角度来发问，从而从不同角度来考察应聘者：</p><h4 id="直接从题库提问"><a href="#直接从题库提问" class="headerlink" title="直接从题库提问"></a>直接从题库提问</h4><p>如果只是马上招人干活，不需要员工有太多的主观能动性，那么可以考察一些有固定答案的死问题。但是，如果有笔试环节，还是建议把这类问题放到笔试中提问，以免浪费时间。</p><p>另外招聘者需要注意，你知道去网上搜题库，聪明的应聘者当然也知道提前找题库背答案。</p><h4 id="从简历和自我介绍来提问"><a href="#从简历和自我介绍来提问" class="headerlink" title="从简历和自我介绍来提问"></a>从简历和自我介绍来提问</h4><p>可以从简历和应聘者的自我介绍中选取一些点来进行提问，例如：</p><ul><li>你在简历中提到熟练使用MySQL数据库，那么（从题库里找一些跟MySQL有关系的问题）</li><li>你在简历中提到了某某技术问题，你解决的思路如何，具体改了哪些参数，效果如何？</li><li>你在简历中提到搭建某某框架，你用了哪些组件，集成过程中有哪些困难？</li><li>生产系统用户规模多少，并发量多少？</li><li>你的项目规模、工作团队规模？</li><li>你在项目中的角色是什么？</li><li>你项目中XX组件的版本号是多少？</li><li>……</li></ul><p>这样一方面可以判断他的工作经历是否真实，另一方面可以判断他对相关技术或工作的了解程度如何。</p><p>对于技术路线不完全匹配的，例如项目使用React，而应聘者工作经历以Vue为主，提问时最好忽略框架的具体用法，考察原理性的东西。能够掌握原理，说明切换技术路线也不是非常困难的事情。</p><h4 id="结合实际场景提问"><a href="#结合实际场景提问" class="headerlink" title="结合实际场景提问"></a>结合实际场景提问</h4><p>可以结合具体的案例，让应聘者来设计或实现，例如某项目的总体设计，或者<span class="exturl" data-url="aHR0cHM6Ly9wcm9ncmFtLXRoaW5rLmJsb2dzcG90LmNvbS8yMDExLzEyL3ByaW1lLWFsZ29yaXRobS0xLmh0bWw=">计算质数<i class="fa fa-external-link-alt"></i></span>程序。</p><p>对于这类问题，关注点不应是对错，而是考虑问题是否周全，例如项目总体设计，需要考虑业务模块是否合理、能否支撑整个流程，计算质数程序需要考虑对输入输出范围的判断、程序运行性能，等等。</p><h4 id="提问个人看法"><a href="#提问个人看法" class="headerlink" title="提问个人看法"></a>提问个人看法</h4><p>可以做一些关于应聘者个人的开放性提问，例如：</p><ul><li>你在过去工作中遇到的最困难事情是什么，你的解决方案如何？</li><li>你在工作之余，有没有学习或研究什么内容？</li><li>你认为自己过去工作的亮点是什么？</li><li>你希望的职业发展路线是什么？</li><li>你的个人爱好是什么？</li><li>……</li></ul><p>让应聘者分享个人工作经历，从而判断应聘者是否能够融入工作团队。</p><h2 id="面试误区"><a href="#面试误区" class="headerlink" title="面试误区"></a>面试误区</h2><h3 id="十全十美"><a href="#十全十美" class="headerlink" title="十全十美"></a>十全十美</h3><p>“总想找个更好的”，这种心理预期会抬高眼光，使自己更难招到合适的人。</p><p>对于经验不足的面试者，组织面试时，建议设定预期面试次数，例如计划招2个人，那么就安排面试20个人。在这20个人中，前30%左右（6人）不会真正录用，只是用来判断应聘者的平均水平，同时调整自己的心理预期。从第7个人开始，将其与前6人进行比较，只要比前6人强，就将其列入考虑名单，以免最终一个人都招不到。</p><p>另外如果实在感觉应聘者能力一般，但又急着招人干活，那么可以适当降低薪酬待遇，先把这段时间的工作挺过去再说，等以后再招更合适的。</p><h3 id="压力面试"><a href="#压力面试" class="headerlink" title="压力面试"></a>压力面试</h3><p>招聘选择员工的时候，员工也在选择公司。特别是IT这种消耗脑力的创造性劳动，更需要相对轻松的气氛来发挥能力，因此面试时，包括未来共同工作时，应当以互相尊重的态度进行沟通交流。</p><p>因此，除非你的客户都是非常刁钻无理的人，而且未来录用之后要让他去对付这样的人，或者你只是在刷招聘的KPI，根本不想招到人，否则没有必要给应聘者做压力面试，更没必要摆出一种高高在上的态度。</p><h3 id="光让马儿跑，不让马儿吃草"><a href="#光让马儿跑，不让马儿吃草" class="headerlink" title="光让马儿跑，不让马儿吃草"></a>光让马儿跑，不让马儿吃草</h3><p>要想使员工正常工作，工资水平至少要和该城市的行业平均水平持平。如果想让员工积极工作，则要给员工开出高于前一家公司的工资水平，否则即便该员工有责任感，他也可能像职场老油条一样，出工不出力。</p><p>如果无法给出更高水平的工资，但是又想招聘该员工，你还可以结合员工离职原因，和员工简单探讨一下新的工作能否给他带来其他好处，例如通勤时间大幅缩短、有各种补贴、周末不用工作、工作气氛轻松、不需要经常出差，等等。对员工来说，如果新工作既没能涨工资，又没能解决他旧工作的痛点，你就不要指望他过来上班了。</p><h2 id="面试之后"><a href="#面试之后" class="headerlink" title="面试之后"></a>面试之后</h2><p>与笔试相同，应聘者通过面试后，也应当尽快通知应聘者进行后续工作，例如下一轮面试，或者办理入职，否则应聘者就跑了。</p><h2 id="本系列文章"><a href="#本系列文章" class="headerlink" title="本系列文章"></a>本系列文章</h2><ul><li><a href="/2020/08/16/resume-filtering/">作为招聘者，筛选简历的关注点</a></li><li><a href="/2020/08/20/resume-improvement/">来自招聘者的建议——如何优化简历</a></li><li><a href="/2020/08/29/bad-resume/">迷惑简历大赏</a></li><li><a href="/2021/02/12/hiring-test-paper/">笔试的设计</a></li><li><strong>面试的安排</strong></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;前文谈到了笔试，本文继续谈一谈面试的经验。&lt;/p&gt;</summary>
    
    
    
    <category term="一点人生的经验" scheme="https://plusnan.me/categories/%E4%B8%80%E7%82%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="招聘" scheme="https://plusnan.me/tags/%E6%8B%9B%E8%81%98/"/>
    
    <category term="面试" scheme="https://plusnan.me/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
</feed>
